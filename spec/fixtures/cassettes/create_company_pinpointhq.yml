---
http_interactions:
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 21 Jun 2024 14:36:48 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"7ec0260fadc499afeee60c478d01a0a3"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-0f1af96486ab4d07d68896be1e3e44be'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB4; path=/
      - _pinpoint_session=N0u4Fy7giUg3PcHUxLMztJBDCUTHaxZwsKfohqqI1SHLT6BZQKVlk962CtuD2lwiT6inMPWNluNiHlGFpvzTfYYsC1AniEUkCacXs5uEpNx3o1zN2tVfYrI%2BMdvfsRieG3Qjrk7HtnV8jfpSPVbn2P61Ds20BFFagz5%2BryteWZmOt1AVSXZP30G%2F4ITfJBqEV6M5NRO2LPSxihyWjsUqXOiNPff%2B%2FGnYjBYcR2k3U2r%2FVZSe5C4BrhNXoL%2FAQMZR8i2tdSrH3%2FLTJCdLUsSc8Ij3d93v5Ccbg3D1l8hfA3AcJ5C7bFZWOV3o5miwbsYNVxDpF4bBRmg6Wuugp9bz0%2Fj4Z%2BeaMuT02TaYElQqA%2BRA8wki6aFjDdB%2BH38Vc94dZ735TDOc7QzYx0dJzoCBkSeVLQ%3D%3D--6yUumylJKypnTTww--lu3CHyzq%2FlrT0Dlx%2Fj0crg%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Fri, 28 Jun 2024 14:36:48 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=f5d71b3f-afe7-4c08-accc-1372538faf44; path=/; expires=Fri, 21 Jun
        2024 18:36:48 GMT; secure
      - ahoy_visitor=3cc2f390-1115-47eb-92bb-51778ac8fcec; path=/; expires=Sun, 21
        Jun 2026 14:36:48 GMT; secure
      X-Request-Id:
      - d010c508-cf78-4b6a-b87d-4ddc469eebee
      X-Runtime:
      - '0.306684'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 21 Jun 2024 14:36:48 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 21 Jun 2024 14:36:49 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"b687dc130a1a95785509a4d7bb7691d4"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-0c4bc4818836f99318c5181e0b8b5e7d'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB2; path=/
      - _pinpoint_session=O3gtztvUgb6gdep0anCrPhYP9fsA%2FwnN%2F8CD%2BPHfafMCA%2BaRVVZTklXskP6rz%2B64V9u6cUORrGlhScocrKs14tYV7yyBiFIo06C8KYs%2FdjFbomFfWVID99DXcnm5SAwt6PPTBMSBP%2BaBOBLNl2I5PuP6QyXPz6WYjhX5Nu7fHQ3WdfnM9c1RbOc3qz0AUDzzc0FCMZGTK%2BxJyXhLYZ4jGSBqY61TFdb6Rj4tAfgXtsIIr3cpGhIsuH66%2FPE4oxSukSr5sdZnDEVk%2FuTEXZ%2B%2B2FtdrpRtOIEKelFavOMEmlrGuEY%3D--ViVV1WkkJ67vszQc--j%2B%2Bb5W4bLi0Am%2FBLzYHU3g%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Fri, 28 Jun 2024 14:36:49 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=ff6bc8d7-4203-416f-b699-f9362bf953db; path=/; expires=Fri, 21 Jun
        2024 18:36:48 GMT; secure
      - ahoy_visitor=8aa73bca-51f9-4045-9075-ae0c31d14efc; path=/; expires=Sun, 21
        Jun 2026 14:36:48 GMT; secure
      X-Request-Id:
      - 43a3cd37-dd5c-4cda-95c7-17aac9d112ee
      X-Runtime:
      - '0.251714'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 21 Jun 2024 14:36:49 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=9eebe4bdec6f10ec631cbb8573cb8de2
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.bathspa.ac.uk/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Fri, 21 Jun 2024 14:36:50 GMT
      Etag:
      - W/"1718980610125"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '5'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '12'
      Content-Length:
      - '615'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","properties":{"name":"Bath
        Spa University","identifier":{"permalink":"bath-spa-university-2","image_id":"v1488530438/cej4b9ng1amolmbwoqp0.png","uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","entity_def_id":"organization","value":"Bath
        Spa University"},"linkedin":{"value":"https://www.linkedin.com/company/bath-spa-university"},"short_description":"Bath
        Spa offers undergraduate and postgraduate study and research opportunities
        with a focus on creativity, culture and enterprise.","rank_org":458864,"website_url":"https://www.bathspa.ac.uk/"}}]}'
  recorded_at: Fri, 21 Jun 2024 14:36:50 GMT
recorded_with: VCR 6.2.0
