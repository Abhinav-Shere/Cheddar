---
http_interactions:
- request:
    method: get
    uri: https://midas.recruitee.com/api/offers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - midas.recruitee.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 30 Apr 2024 14:54:47 GMT
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Request-Id:
      - F8sWjzV5E1l5VvwEi5rj
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 30 Apr 2024 14:54:47 GMT
- request:
    method: get
    uri: https://autocomplete.clearbit.com/v1/companies/suggest?query=Midas
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - autocomplete.clearbit.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '593'
      Cache-Control:
      - public, must-revalidate, max-age=2629746
      Content-Type:
      - application/json
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Headers:
      - Authorization, API-Version, Content-Type, Salesforce-App-Id
      X-Envoy-Response-Flags:
      - "-"
      Server:
      - Clearbit
      Via:
      - 1.1 varnish, 1.1 varnish
      Access-Control-Allow-Origin:
      - "*"
      Accept-Ranges:
      - bytes
      Date:
      - Tue, 30 Apr 2024 14:54:48 GMT
      Age:
      - '872150'
      X-Served-By:
      - cache-sjc1000104-SJC, cache-lcy-eglc8600054-LCY
      X-Cache:
      - HIT, HIT
      X-Cache-Hits:
      - 17, 1
      X-Timer:
      - S1714488888.999803,VS0,VE1
      Vary:
      - Accept-Encoding
      Content-Security-Policy-Report-Only:
      - default-src 'self';
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31557600
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        W3sibmFtZSI6Ik1pZGFzYnV5IiwiZG9tYWluIjoibWlkYXNidXkuY29tIiwibG9nbyI6Imh0dHBzOi8vbG9nby5jbGVhcmJpdC5jb20vbWlkYXNidXkuY29tIn0seyJuYW1lIjoiTWlkYXMiLCJkb21haW4iOiJtaWRhcy5jb20iLCJsb2dvIjoiaHR0cHM6Ly9sb2dvLmNsZWFyYml0LmNvbS9taWRhcy5jb20ifSx7Im5hbWUiOiLZhduM2K/Yp9izINiz2LHZhdin24zZhyAtINii2YXZiNiy2LQg2LPYsdmF2KfbjNmHINqv2LDYp9ix24wg2K/YsSDYqNin2LLYp9ix2YfYp9uMINmF2KfZhNuMINmIINio2YjYsdizIiwiZG9tYWluIjoibWlkYXNzYXJtYXllLmNvbSIsImxvZ28iOiJodHRwczovL2xvZ28uY2xlYXJiaXQuY29tL21pZGFzc2FybWF5ZS5jb20ifSx7Im5hbWUiOiJNaWRhcyBGdXJuaXR1cmUiLCJkb21haW4iOiJtaWRhc2Z1cm5pdHVyZS5jb20iLCJsb2dvIjoiaHR0cHM6Ly9sb2dvLmNsZWFyYml0LmNvbS9taWRhc2Z1cm5pdHVyZS5jb20ifSx7Im5hbWUiOiJNSURBUyBFZHVjYXRpb24iLCJkb21haW4iOiJtaWRhc2VkdWNhdGlvbi5jb20iLCJsb2dvIjoiaHR0cHM6Ly9sb2dvLmNsZWFyYml0LmNvbS9taWRhc2VkdWNhdGlvbi5jb20ifV0=
  recorded_at: Tue, 30 Apr 2024 14:54:47 GMT
- request:
    method: get
    uri: https://api.crunchbase.com/api/v4/autocompletes?query=Midas&user_key=9eebe4bdec6f10ec631cbb8573cb8de2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.crunchbase.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Apr 2024 14:54:48 GMT
      Etag:
      - W/"1714488888690"
      Server:
      - openresty
      X-Cb-Engine:
      - autocomplete:algolia
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Request-Took:
      - '31'
      Content-Length:
      - '3729'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJjb3VudCI6MTg3MywiZW50aXRpZXMiOlt7ImZhY2V0X2lkcyI6WyJjb250YWN0Iiwic2lmdGVyeSIsImFiZXJkZWVuIiwiYXBwdG9waWEiLCJzZW1ydXNoIiwiY29tcGFueSIsInJhbmsiLCJidWlsdHdpdGgiLCJib21ib3JhIl0sImlkZW50aWZpZXIiOnsidXVpZCI6ImQ5ZWEwOGE1LTdhZTMtMjFlNi1hZDJmLTdmYjQ2ODU3NTAyYyIsInZhbHVlIjoiTWlkYXMiLCJpbWFnZV9pZCI6InRkdmNqZ2NsaWtrYXh4MzVjaGVnIiwicGVybWFsaW5rIjoibWlkYXMtMiIsImVudGl0eV9kZWZfaWQiOiJvcmdhbml6YXRpb24ifSwic2hvcnRfZGVzY3JpcHRpb24iOiJNaWRhcyBpcyBvbmUgb2YgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IHByb3ZpZGVycyBvZiBhdXRvbW90aXZlIHNlcnZpY2UifSx7ImZhY2V0X2lkcyI6WyJzaWZ0ZXJ5Iiwic2VtcnVzaCIsImNvbXBhbnkiLCJyYW5rIiwiYnVpbHR3aXRoIl0sImlkZW50aWZpZXIiOnsidXVpZCI6IjQ5MjY1MzE2LTVhYzQtNzkwYi1lMDZmLTVjM2UwMzJiYmRhMSIsInZhbHVlIjoiTUlEQVMiLCJpbWFnZV9pZCI6InYxNDAwMDU3MTQyL2hpZ2w4eHV1dml0ZHJ6Mmx0YmpuLnBuZyIsInBlcm1hbGluayI6Im1pZGFzIiwiZW50aXR5X2RlZl9pZCI6Im9yZ2FuaXphdGlvbiJ9LCJzaG9ydF9kZXNjcmlwdGlvbiI6Ik1JREFTIGRlbGl2ZXIgY2xvdWQtaG9zdGVkIGFuZCBvbi1wcmVtaXNlIHdlYiBiYXNlZCBSb29tIEJvb2tpbmcgYW5kIFJlc291cmNlIFNjaGVkdWxpbmcgc29sdXRpb25zIn0seyJmYWNldF9pZHMiOlsiY29udGFjdCIsImFwcHRvcGlhIiwic2VtcnVzaCIsImNvbXBhbnkiLCJyYW5rIiwiYnVpbHR3aXRoIl0sImlkZW50aWZpZXIiOnsidXVpZCI6IjExMDVjNmMwLTRhMzItNDY2NC04ODk3LThkNjBiYWIwNWZlNSIsInZhbHVlIjoiTWlkYXMiLCJpbWFnZV9pZCI6InM5c2JkMHZienVwdDBqeG5kZWU4IiwicGVybWFsaW5rIjoibWlkYXMtNWZlNSIsImVudGl0eV9kZWZfaWQiOiJvcmdhbml6YXRpb24ifSwic2hvcnRfZGVzY3JpcHRpb24iOiJNaWRhcyBpcyB0aGUgZmlyc3QgbmVvYnJva2VyIG9mIFR1cmtleSwgcHJvdmlkaW5nIHplcm8gY29tbWlzc2lvbiBUdXJraXNoIGFuZCBBbWVyaWNhbiBzdG9ja3MuIn0seyJmYWNldF9pZHMiOlsiY29udGFjdCIsImludmVzdG9yIiwic2VtcnVzaCIsInJhbmsiLCJidWlsdHdpdGgiXSwiaWRlbnRpZmllciI6eyJ1dWlkIjoiYWI2OGYyMjYtZWRmMC00NzQzLWFmYTMtYTVlMmJhYThkZDI5IiwidmFsdWUiOiJNaWRhcy5JbnZlc3RtZW50cyIsImltYWdlX2lkIjoicG9ic3FhbHBvd3JzcW5qcmk3aXMiLCJwZXJtYWxpbmsiOiJtaWRhcy1pbnZlc3RtZW50cyIsImVudGl0eV9kZWZfaWQiOiJvcmdhbml6YXRpb24ifSwic2hvcnRfZGVzY3JpcHRpb24iOiJNaWRhcy5JbnZlc3RtZW50cyBpcyBhIGN1c3RvZGlhbCDigJxDZURlRmnigJ0gY3J5cHRvLWludmVzdG1lbnQgcGxhdGZvcm0gZm9jdXNpbmcgb24gcHJvZHVjaW5nIHBhc3NpdmUgaW5jb21lIG9uIGNyeXB0byBhc3NldHMgdW5kZXIgbWFuYWdlbWVudC4ifSx7ImZhY2V0X2lkcyI6WyJjb250YWN0IiwiYWJlcmRlZW4iLCJzZW1ydXNoIiwiY29tcGFueSIsInJhbmsiXSwiaWRlbnRpZmllciI6eyJ1dWlkIjoiYzI1MzUwN2EtNmRlOC00MDkzLWJiYWUtZDg0YjRjNGI4NDBiIiwidmFsdWUiOiJNaWRhcyIsImltYWdlX2lkIjoiYnF6ZWx2bzNucXNuM3ZneGx6eXgiLCJwZXJtYWxpbmsiOiJtaWRhcy04NDBiIiwiZW50aXR5X2RlZl9pZCI6Im9yZ2FuaXphdGlvbiJ9LCJzaG9ydF9kZXNjcmlwdGlvbiI6Ik1pZGFzIGlzIGEgc3RhZmZpbmcgY29tcGFueSB0aGF0IHByb3ZpZGVzIG1hbmFnZW1lbnQgaGVhZGh1bnRpbmcsIHJlY3J1aXRtZW50LCBjb25zdWx0aW5nLCBzdGFmZiBhdWdtZW50YXRpb24sIGFuZCBtYW5hZ2VkIElUIHNlcnZpY2VzLiJ9LHsiZmFjZXRfaWRzIjpbImFiZXJkZWVuIiwic2VtcnVzaCIsImNvbXBhbnkiLCJyYW5rIiwiYm9tYm9yYSIsImFpX2luc2lnaHQiXSwiaWRlbnRpZmllciI6eyJ1dWlkIjoiMjNhNDBiZGQtODBjZC00N2QwLTlkZjQtYjdiNWRjMTQzNjZmIiwidmFsdWUiOiJNSURBUyBIZWFsdGhjYXJlIFNvbHV0aW9ucyIsImltYWdlX2lkIjoibXc0ZXpqZWd4aHZja3ozd2lpaGgiLCJwZXJtYWxpbmsiOiJtaWRhcy1oZWFsdGhjYXJlLXNvbHV0aW9ucyIsImVudGl0eV9kZWZfaWQiOiJvcmdhbml6YXRpb24ifSwic2hvcnRfZGVzY3JpcHRpb24iOiJNSURBUyBIZWFsdGhjYXJlIFNvbHV0aW9ucycgb2JqZWN0aXZlIGlzIHRvIGVuY291cmFnZSBhbmQgZW5hYmxlIHRoZWlyIHNhZmUgdXNlLCBoYW5kbGluZywgc3RvcmFnZSwgcmV0dXJuLCBhbmQgZGlzcG9zYWwuIn0seyJmYWNldF9pZHMiOlsiY29udGFjdCIsImFiZXJkZWVuIiwiY29tcGFueSIsInJhbmsiLCJidWlsdHdpdGgiXSwiaWRlbnRpZmllciI6eyJ1dWlkIjoiYTcxMDU5ZjUtY2NjMy00Y2M1LWEyNjYtOTVkOGM5MTdiNDlhIiwidmFsdWUiOiJNaWRhcyIsImltYWdlX2lkIjoiYWh2Y3hhY3BlZ2h6dGs4Z2M0bDIiLCJwZXJtYWxpbmsiOiJtaWRhcy1iNDlhIiwiZW50aXR5X2RlZl9pZCI6Im9yZ2FuaXphdGlvbiJ9LCJzaG9ydF9kZXNjcmlwdGlvbiI6Ik1pZGFzIGlzIGFuIGV4ZWN1dGl2ZSByZWNydWl0bWVudCBjb25zdWx0YW5jeSBhbHNvIHByb3ZpZGUgc2VydmljZXMgbGlrZSBzYWxlcyBhbmQgbWFya2V0aW5nIGZvciBkaWZmZXJlbnQgc2VjdG9ycyBzdWNoIGFzIGhlYWx0aGNhcmUuIn0seyJmYWNldF9pZHMiOlsiY29tcGFueSIsInJhbmsiLCJidWlsdHdpdGgiXSwiaWRlbnRpZmllciI6eyJ1dWlkIjoiOTRhZmU3ZjgtYzUzYy00NDk3LWE5ZjUtOWFjMmUxZGRkZTQzIiwidmFsdWUiOiJNSURBUyIsImltYWdlX2lkIjoiY2JiOTVhZjcyZGRiMDEyZDAzNjIiLCJwZXJtYWxpbmsiOiJtaWRhcy1kZTQzIiwiZW50aXR5X2RlZl9pZCI6Im9yZ2FuaXphdGlvbiJ9LCJzaG9ydF9kZXNjcmlwdGlvbiI6Ik1JREFTIGlzIGEgbWFudWZhY3R1cmVyIG9mIHByb2Nlc3Npbmcgc3lzdGVtcyBhbmQgaW5kdXN0cmlhbCBlcXVpcG1lbnQuIn0seyJmYWNldF9pZHMiOlsiY29tcGFueSIsInJhbmsiLCJidWlsdHdpdGgiXSwiaWRlbnRpZmllciI6eyJ1dWlkIjoiNTBkMmRkNDMtN2JhOS00MDNmLWE4NWQtYmRiOGQ5NDg2NTAwIiwidmFsdWUiOiJNaWRhcyIsImltYWdlX2lkIjoiZm0zbzlrb3N3aWZwdXZldjVzeXYiLCJwZXJtYWxpbmsiOiJtaWRhcy02NTAwIiwiZW50aXR5X2RlZl9pZCI6Im9yZ2FuaXphdGlvbiJ9LCJzaG9ydF9kZXNjcmlwdGlvbiI6Ik1pZGFzIGlzIGEgc29sYXIgcGFuZWwgaW5zdGFsbGF0aW9uIGNvbXBhbnkgdGhhdCBtYW51ZmFjdHVyZXMgc29sYXIgcGhvdG92b2x0YWljIG1vZHVsZXMuIn0seyJmYWNldF9pZHMiOlsic2VtcnVzaCIsImNvbXBhbnkiLCJyYW5rIiwiYnVpbHR3aXRoIiwiYWlfaW5zaWdodCJdLCJpZGVudGlmaWVyIjp7InV1aWQiOiJhOGUxNGRkNC04ZWQzLTQzOTEtYTFjZS0xYjMzOTgyYWViNWYiLCJ2YWx1ZSI6Ik1pZGFzIiwiaW1hZ2VfaWQiOiJmMjRpZWZpZ3FhcG5teGM2MWVocCIsInBlcm1hbGluayI6Im1pZGFzLWViNWYiLCJlbnRpdHlfZGVmX2lkIjoib3JnYW5pemF0aW9uIn0sInNob3J0X2Rlc2NyaXB0aW9uIjoiTWlkYXMgaXMgYSBjcnlwdG9jdXJyZW5jeSBhcHBsaWNhdGlvbiB0aGF0IGFsbG93cyB1c2VycyB0byBzZWxsIGFuZCBpbnZlc3QgaW4gY3J5cHRvY3VycmVuY3kgYW5kIHRva2Vucy4ifV19
  recorded_at: Tue, 30 Apr 2024 14:54:48 GMT
- request:
    method: get
    uri: https://midas.recruitee.com/api/offers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - midas.recruitee.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 30 Apr 2024 14:54:48 GMT
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Request-Id:
      - F8sWj4dLp7Px6RUHjlHC
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 30 Apr 2024 14:54:49 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Istanbul,%20%C4%B0stanbul%20T%C3%BCrkiye?key=AmhBY6imsSQC_f1o8tlcEXoO6WxekJR2plXfZQr7g_Y6I35Yh18bR1khIX9jc9vI
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - dev.virtualearth.net
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 30 Apr 2024 14:54:49 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      Vary:
      - Accept-Encoding
      X-Bm-Traceid:
      - 23f6ad2c07f7a2a19a2cd66b430bfedb
      X-Bm-Be-Elapsed:
      - '108'
      X-Msedge-Ref:
      - 'Ref A: D553C30494CE493C9BB5691CC2AB7512 Ref B: LON212050719003 Ref C: 2024-04-30T14:54:49Z'
      X-Bm-Fe-Elapsed:
      - '116'
      X-Bm-Srv:
      - mapsplatform-frontend-6cdf86c749-r5zj6, DU00003056
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      X-Azure-Ref:
      - 20240430T145449Z-er1bd8974cf58tclcu1893gy14000000049g00000001nnf2
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cHM6XC9cL2Rldi52aXJ0dWFsZWFydGgubmV0XC9CcmFuZGluZ1wvbG9nb19wb3dlcmVkX2J5LnBuZyIsImNvcHlyaWdodCI6IkNvcHlyaWdodCDCqSAyMDI0IE1pY3Jvc29mdCBhbmQgaXRzIHN1cHBsaWVycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBBUEkgY2Fubm90IGJlIGFjY2Vzc2VkIGFuZCB0aGUgY29udGVudCBhbmQgYW55IHJlc3VsdHMgbWF5IG5vdCBiZSB1c2VkLCByZXByb2R1Y2VkIG9yIHRyYW5zbWl0dGVkIGluIGFueSBtYW5uZXIgd2l0aG91dCBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiBmcm9tIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4iLCJyZXNvdXJjZVNldHMiOlt7ImVzdGltYXRlZFRvdGFsIjoyLCJyZXNvdXJjZXMiOlt7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6XC9cL3NjaGVtYXMubWljcm9zb2Z0LmNvbVwvc2VhcmNoXC9sb2NhbFwvd3NcL3Jlc3RcL3YxIiwiYmJveCI6WzQwLjc4NjMxMjEwMzI3MTQ4NCwyOC4zOTU5MDgzNTU3MTI4OTEsNDEuMjMyMTkyOTkzMTY0MDYzLDI5LjQ5NjI5OTc0MzY1MjM0NF0sIm5hbWUiOiJJc3RhbmJ1bCwgVMO8cmtpeWUiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMzAwMDQ5LDI4Ljk2MzgwMDQzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IklzdGFuYnVsIiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IklzdGFuYnVsLCBUw7xya2l5ZSIsImxvY2FsaXR5IjoiSXN0YW5idWwifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMzAwMDQ5LDI4Ljk2MzgwMDQzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDpcL1wvc2NoZW1hcy5taWNyb3NvZnQuY29tXC9zZWFyY2hcL2xvY2FsXC93c1wvcmVzdFwvdjEiLCJiYm94IjpbNDEuMTAzMTM1NzI2MDMyODM5LDI5LjA3NTA2NDczNTUzNzAyMyw0MS4xMTA4NjExNjExNzQxOTIsMjkuMDg4NzM0NTUwMzUxNjQ5XSwibmFtZSI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjEwNjk5ODQ0LDI5LjA4MTg5OTY0XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IklzdGFuYnVsIiwiYWRtaW5EaXN0cmljdDIiOiJCZXlrb3oiLCJjb3VudHJ5UmVnaW9uIjoiVMO8cmtpeWUiLCJmb3JtYXR0ZWRBZGRyZXNzIjoixLBzdGFuYnVsLCBUw7xya2l5ZSIsImxvY2FsaXR5IjoiQmV5a296In0sImNvbmZpZGVuY2UiOiJNZWRpdW0iLCJlbnRpdHlUeXBlIjoiSGlnaGVyRWR1Y2F0aW9uRmFjaWxpdHkiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjEwNjk5ODQ0LDI5LjA4MTg5OTY0XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiMjNmNmFkMmMwN2Y3YTJhMTlhMmNkNjZiNDMwYmZlZGJ8RFUwMDAwMzA1NnwwLjAuMC4xfFJlZiBBOiBENTUzQzMwNDk0Q0U0OTNDOUJCNTY5MUNDMkFCNzUxMiBSZWYgQjogTE9OMjEyMDUwNzE5MDAzIFJlZiBDOiAyMDI0LTA0LTMwVDE0OjU0OjQ5WiJ9
  recorded_at: Tue, 30 Apr 2024 14:54:49 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Istanbul?key=AmhBY6imsSQC_f1o8tlcEXoO6WxekJR2plXfZQr7g_Y6I35Yh18bR1khIX9jc9vI
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - dev.virtualearth.net
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 30 Apr 2024 14:54:49 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      Vary:
      - Accept-Encoding
      X-Bm-Traceid:
      - bcbbcb0c1c8caefce38e2cffd8c8daf8
      X-Bm-Be-Elapsed:
      - '94'
      X-Msedge-Ref:
      - 'Ref A: A0078BB33FDA4E4BB57121EF4695DD98 Ref B: LON212050702007 Ref C: 2024-04-30T14:54:49Z'
      X-Bm-Fe-Elapsed:
      - '104'
      X-Bm-Srv:
      - mapsplatform-frontend-6cdf86c749-qqstj, DU0000307C
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      X-Azure-Ref:
      - 20240430T145449Z-er1bd8974cf7z5vwbf5nnfyr6c00000004mg00000000v354
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cHM6XC9cL2Rldi52aXJ0dWFsZWFydGgubmV0XC9CcmFuZGluZ1wvbG9nb19wb3dlcmVkX2J5LnBuZyIsImNvcHlyaWdodCI6IkNvcHlyaWdodCDCqSAyMDI0IE1pY3Jvc29mdCBhbmQgaXRzIHN1cHBsaWVycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBBUEkgY2Fubm90IGJlIGFjY2Vzc2VkIGFuZCB0aGUgY29udGVudCBhbmQgYW55IHJlc3VsdHMgbWF5IG5vdCBiZSB1c2VkLCByZXByb2R1Y2VkIG9yIHRyYW5zbWl0dGVkIGluIGFueSBtYW5uZXIgd2l0aG91dCBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiBmcm9tIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4iLCJyZXNvdXJjZVNldHMiOlt7ImVzdGltYXRlZFRvdGFsIjo1LCJyZXNvdXJjZXMiOlt7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6XC9cL3NjaGVtYXMubWljcm9zb2Z0LmNvbVwvc2VhcmNoXC9sb2NhbFwvd3NcL3Jlc3RcL3YxIiwiYmJveCI6WzQwLjc4NjMxMjEwMzI3MTQ4NCwyOC4zOTU5MDgzNTU3MTI4OTEsNDEuMjMyMTkyOTkzMTY0MDYzLDI5LjQ5NjI5OTc0MzY1MjM0NF0sIm5hbWUiOiJJc3RhbmJ1bCwgVMO8cmtpeWUiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMzAwMDQ5LDI4Ljk2MzgwMDQzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IklzdGFuYnVsIiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IklzdGFuYnVsLCBUw7xya2l5ZSIsImxvY2FsaXR5IjoiSXN0YW5idWwifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMzAwMDQ5LDI4Ljk2MzgwMDQzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDpcL1wvc2NoZW1hcy5taWNyb3NvZnQuY29tXC9zZWFyY2hcL2xvY2FsXC93c1wvcmVzdFwvdjEiLCJiYm94IjpbNDAuNTgzNjc1Mzg0NTIxNDg0LDI3LjkxMzQxNDAwMTQ2NDg0NCw0MS41NzQzMjE3NDY4MjYxNzIsMzAuMDM5Nzg3MjkyNDgwNDY5XSwibmFtZSI6IklzdGFuYnVsIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0MS4wMTI5OTY2NywyOC45NzQ3OTgyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IklzdGFuYnVsIiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IklzdGFuYnVsIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiQWRtaW5EaXZpc2lvbjEiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMjk5NjY3LDI4Ljk3NDc5ODJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOlwvXC9zY2hlbWFzLm1pY3Jvc29mdC5jb21cL3NlYXJjaFwvbG9jYWxcL3dzXC9yZXN0XC92MSIsImJib3giOlszNy44MDQwMjk4MDAxMTI5MTQsMzQuNzAxMTExNzU5OTQ4NTg5LDM3Ljg2MTk3MDU2NjA5ODAyMywzNC43OTg4ODgyNDAwNTE0MTFdLCJuYW1lIjoixLBzdGFuYnVsLCBUw7xya2l5ZSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuODMzMDAwMTgsMzQuNzVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVMO8cmtpeWUiLCJmb3JtYXR0ZWRBZGRyZXNzIjoixLBzdGFuYnVsLCBUw7xya2l5ZSIsImxvY2FsaXR5IjoixLBzdGFuYnVsIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzM3LjgzMzAwMDE4LDM0Ljc1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDpcL1wvc2NoZW1hcy5taWNyb3NvZnQuY29tXC9zZWFyY2hcL2xvY2FsXC93c1wvcmVzdFwvdjEiLCJiYm94IjpbMzcuODA0MDI5ODAwMTEyOTE0LDM0LjcwMTExMTc1OTk0ODU4OSwzNy44NjE5NzA1NjYwOTgwMjMsMzQuNzk4ODg4MjQwMDUxNDExXSwibmFtZSI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzM3LjgzMzAwMDE4LDM0Ljc1XX0sImFkZHJlc3MiOnsiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJsb2NhbGl0eSI6IsSwc3RhbmJ1bCJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOlszNy44MzMwMDAxOCwzNC43NV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6XC9cL3NjaGVtYXMubWljcm9zb2Z0LmNvbVwvc2VhcmNoXC9sb2NhbFwvd3NcL3Jlc3RcL3YxIiwiYmJveCI6WzQxLjEwMzEzNTcyNjAzMjgzOSwyOS4wNzUwNjQ3MzU1MzcwMjMsNDEuMTEwODYxMTYxMTc0MTkyLDI5LjA4ODczNDU1MDM1MTY0OV0sIm5hbWUiOiLEsHN0YW5idWwsIFTDvHJraXllIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0MS4xMDY5OTg0NCwyOS4wODE4OTk2NF19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJJc3RhbmJ1bCIsImFkbWluRGlzdHJpY3QyIjoiQmV5a296IiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJsb2NhbGl0eSI6IkJleWtveiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IkhpZ2hlckVkdWNhdGlvbkZhY2lsaXR5IiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0MS4xMDY5OTg0NCwyOS4wODE4OTk2NF0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfV19XSwic3RhdHVzQ29kZSI6MjAwLCJzdGF0dXNEZXNjcmlwdGlvbiI6Ik9LIiwidHJhY2VJZCI6ImJjYmJjYjBjMWM4Y2FlZmNlMzhlMmNmZmQ4YzhkYWY4fERVMDAwMDMwN0N8MC4wLjAuMXxSZWYgQTogQTAwNzhCQjMzRkRBNEU0QkI1NzEyMUVGNDY5NUREOTggUmVmIEI6IExPTjIxMjA1MDcwMjAwNyBSZWYgQzogMjAyNC0wNC0zMFQxNDo1NDo0OVoifQ==
  recorded_at: Tue, 30 Apr 2024 14:54:49 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/%C4%B0stanbul?key=AmhBY6imsSQC_f1o8tlcEXoO6WxekJR2plXfZQr7g_Y6I35Yh18bR1khIX9jc9vI
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - dev.virtualearth.net
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 30 Apr 2024 14:54:50 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      Vary:
      - Accept-Encoding
      X-Bm-Traceid:
      - 62908274673ffb9ec66d8dcc4e57b299
      X-Bm-Be-Elapsed:
      - '79'
      X-Msedge-Ref:
      - 'Ref A: 8784F3490146458B913604A5653F706F Ref B: DB3EDGE2921 Ref C: 2024-04-30T14:54:50Z'
      X-Bm-Fe-Elapsed:
      - '88'
      X-Bm-Srv:
      - mapsplatform-frontend-6cdf86c749-87l84, DU00003068
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      X-Azure-Ref:
      - 20240430T145449Z-er1bd8974cf2lnkf685fddysgg0000000gd0000000023xs8
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cHM6XC9cL2Rldi52aXJ0dWFsZWFydGgubmV0XC9CcmFuZGluZ1wvbG9nb19wb3dlcmVkX2J5LnBuZyIsImNvcHlyaWdodCI6IkNvcHlyaWdodCDCqSAyMDI0IE1pY3Jvc29mdCBhbmQgaXRzIHN1cHBsaWVycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBBUEkgY2Fubm90IGJlIGFjY2Vzc2VkIGFuZCB0aGUgY29udGVudCBhbmQgYW55IHJlc3VsdHMgbWF5IG5vdCBiZSB1c2VkLCByZXByb2R1Y2VkIG9yIHRyYW5zbWl0dGVkIGluIGFueSBtYW5uZXIgd2l0aG91dCBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiBmcm9tIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4iLCJyZXNvdXJjZVNldHMiOlt7ImVzdGltYXRlZFRvdGFsIjo1LCJyZXNvdXJjZXMiOlt7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6XC9cL3NjaGVtYXMubWljcm9zb2Z0LmNvbVwvc2VhcmNoXC9sb2NhbFwvd3NcL3Jlc3RcL3YxIiwiYmJveCI6WzQwLjc4NjMxMjEwMzI3MTQ4NCwyOC4zOTU5MDgzNTU3MTI4OTEsNDEuMjMyMTkyOTkzMTY0MDYzLDI5LjQ5NjI5OTc0MzY1MjM0NF0sIm5hbWUiOiJJc3RhbmJ1bCwgVMO8cmtpeWUiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMzAwMDQ5LDI4Ljk2MzgwMDQzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IklzdGFuYnVsIiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IklzdGFuYnVsLCBUw7xya2l5ZSIsImxvY2FsaXR5IjoiSXN0YW5idWwifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMzAwMDQ5LDI4Ljk2MzgwMDQzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDpcL1wvc2NoZW1hcy5taWNyb3NvZnQuY29tXC9zZWFyY2hcL2xvY2FsXC93c1wvcmVzdFwvdjEiLCJiYm94IjpbNDAuNTgzNjc1Mzg0NTIxNDg0LDI3LjkxMzQxNDAwMTQ2NDg0NCw0MS41NzQzMjE3NDY4MjYxNzIsMzAuMDM5Nzg3MjkyNDgwNDY5XSwibmFtZSI6IklzdGFuYnVsIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0MS4wMTI5OTY2NywyOC45NzQ3OTgyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IklzdGFuYnVsIiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IklzdGFuYnVsIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiQWRtaW5EaXZpc2lvbjEiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQxLjAxMjk5NjY3LDI4Ljk3NDc5ODJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOlwvXC9zY2hlbWFzLm1pY3Jvc29mdC5jb21cL3NlYXJjaFwvbG9jYWxcL3dzXC9yZXN0XC92MSIsImJib3giOlszNy44MDQwMjk4MDAxMTI5MTQsMzQuNzAxMTExNzU5OTQ4NTg5LDM3Ljg2MTk3MDU2NjA5ODAyMywzNC43OTg4ODgyNDAwNTE0MTFdLCJuYW1lIjoixLBzdGFuYnVsLCBUw7xya2l5ZSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuODMzMDAwMTgsMzQuNzVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVMO8cmtpeWUiLCJmb3JtYXR0ZWRBZGRyZXNzIjoixLBzdGFuYnVsLCBUw7xya2l5ZSIsImxvY2FsaXR5IjoixLBzdGFuYnVsIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzM3LjgzMzAwMDE4LDM0Ljc1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDpcL1wvc2NoZW1hcy5taWNyb3NvZnQuY29tXC9zZWFyY2hcL2xvY2FsXC93c1wvcmVzdFwvdjEiLCJiYm94IjpbMzcuODA0MDI5ODAwMTEyOTE0LDM0LjcwMTExMTc1OTk0ODU4OSwzNy44NjE5NzA1NjYwOTgwMjMsMzQuNzk4ODg4MjQwMDUxNDExXSwibmFtZSI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzM3LjgzMzAwMDE4LDM0Ljc1XX0sImFkZHJlc3MiOnsiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJsb2NhbGl0eSI6IsSwc3RhbmJ1bCJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOlszNy44MzMwMDAxOCwzNC43NV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6XC9cL3NjaGVtYXMubWljcm9zb2Z0LmNvbVwvc2VhcmNoXC9sb2NhbFwvd3NcL3Jlc3RcL3YxIiwiYmJveCI6WzQxLjEwMzEzNTcyNjAzMjgzOSwyOS4wNzUwNjQ3MzU1MzcwMjMsNDEuMTEwODYxMTYxMTc0MTkyLDI5LjA4ODczNDU1MDM1MTY0OV0sIm5hbWUiOiLEsHN0YW5idWwsIFTDvHJraXllIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0MS4xMDY5OTg0NCwyOS4wODE4OTk2NF19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJJc3RhbmJ1bCIsImFkbWluRGlzdHJpY3QyIjoiQmV5a296IiwiY291bnRyeVJlZ2lvbiI6IlTDvHJraXllIiwiZm9ybWF0dGVkQWRkcmVzcyI6IsSwc3RhbmJ1bCwgVMO8cmtpeWUiLCJsb2NhbGl0eSI6IkJleWtveiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IkhpZ2hlckVkdWNhdGlvbkZhY2lsaXR5IiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0MS4xMDY5OTg0NCwyOS4wODE4OTk2NF0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfV19XSwic3RhdHVzQ29kZSI6MjAwLCJzdGF0dXNEZXNjcmlwdGlvbiI6Ik9LIiwidHJhY2VJZCI6IjYyOTA4Mjc0NjczZmZiOWVjNjZkOGRjYzRlNTdiMjk5fERVMDAwMDMwNjh8MC4wLjAuMXxSZWYgQTogODc4NEYzNDkwMTQ2NDU4QjkxMzYwNEE1NjUzRjcwNkYgUmVmIEI6IERCM0VER0UyOTIxIFJlZiBDOiAyMDI0LTA0LTMwVDE0OjU0OjUwWiJ9
  recorded_at: Tue, 30 Apr 2024 14:54:50 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/T%C3%BCrkiye?key=AmhBY6imsSQC_f1o8tlcEXoO6WxekJR2plXfZQr7g_Y6I35Yh18bR1khIX9jc9vI
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - dev.virtualearth.net
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 30 Apr 2024 14:54:50 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      Vary:
      - Accept-Encoding
      X-Bm-Traceid:
      - 69aca70e065413b850bd1b4699faf580
      X-Bm-Be-Elapsed:
      - '68'
      X-Msedge-Ref:
      - 'Ref A: 86A8FF3B0CC9472E934EC54765A7031C Ref B: DB3EDGE1820 Ref C: 2024-04-30T14:54:50Z'
      X-Bm-Fe-Elapsed:
      - '236'
      X-Bm-Srv:
      - mapsplatform-frontend-6cdf86c749-kkfj4, DU00003056
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      X-Azure-Ref:
      - 20240430T145450Z-er1bd8974cfqdvnwy7eab7wwg800000008a0000000025tpd
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cHM6XC9cL2Rldi52aXJ0dWFsZWFydGgubmV0XC9CcmFuZGluZ1wvbG9nb19wb3dlcmVkX2J5LnBuZyIsImNvcHlyaWdodCI6IkNvcHlyaWdodCDCqSAyMDI0IE1pY3Jvc29mdCBhbmQgaXRzIHN1cHBsaWVycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBBUEkgY2Fubm90IGJlIGFjY2Vzc2VkIGFuZCB0aGUgY29udGVudCBhbmQgYW55IHJlc3VsdHMgbWF5IG5vdCBiZSB1c2VkLCByZXByb2R1Y2VkIG9yIHRyYW5zbWl0dGVkIGluIGFueSBtYW5uZXIgd2l0aG91dCBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiBmcm9tIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4iLCJyZXNvdXJjZVNldHMiOlt7ImVzdGltYXRlZFRvdGFsIjoyLCJyZXNvdXJjZXMiOlt7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6XC9cL3NjaGVtYXMubWljcm9zb2Z0LmNvbVwvc2VhcmNoXC9sb2NhbFwvd3NcL3Jlc3RcL3YxIiwiYmJveCI6WzM1LjgxNTc1MDEyMjA3MDMxMywyNS42NzM3MDIyMzk5OTAyMzQsNDIuMTA1NTQ4ODU4NjQyNTc4LDQ0LjgxNzY3MjcyOTQ5MjE4OF0sIm5hbWUiOiJUw7xya2l5ZSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzguOTg5MDkzNzgsMzUuNDMzMjMxMzVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVMO8cmtpeWUiLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVMO8cmtpeWUifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzguOTg5MDkzNzgsMzUuNDMzMjMxMzVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOlwvXC9zY2hlbWFzLm1pY3Jvc29mdC5jb21cL3NlYXJjaFwvbG9jYWxcL3dzXC9yZXN0XC92MSIsImJib3giOlsyNS4yMjYyMzA2MjEzMzc4OTEsNTUuMTY1NTk5ODIyOTk4MDQ3LDI1LjIyODQ5NjU1MTUxMzY3Miw1NS4xNjgxMDIyNjQ0MDQzXSwibmFtZSI6IlTDvHJraXllLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMjUuMjI3Mjk4NzQsNTUuMTY2NzU1NjhdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRHViYWkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVMO8cmtpeWUsIFVuaXRlZCBBcmFiIEVtaXJhdGVzIiwibG9jYWxpdHkiOiJEdWJhaSJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IklzbGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMjUuMjI3Mjk4NzQsNTUuMTY2NzU1NjhdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI2OWFjYTcwZTA2NTQxM2I4NTBiZDFiNDY5OWZhZjU4MHxEVTAwMDAzMDU2fDAuMC4wLjF8UmVmIEE6IDg2QThGRjNCMENDOTQ3MkU5MzRFQzU0NzY1QTcwMzFDIFJlZiBCOiBEQjNFREdFMTgyMCBSZWYgQzogMjAyNC0wNC0zMFQxNDo1NDo1MFoifQ==
  recorded_at: Tue, 30 Apr 2024 14:54:50 GMT
recorded_with: VCR 6.2.0
