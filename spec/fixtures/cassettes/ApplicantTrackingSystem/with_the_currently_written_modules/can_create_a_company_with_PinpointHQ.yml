---
http_interactions:
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Wed, 01 May 2024 14:14:52 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"530cac070ff8d20a6b85dfb9c0529a23"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-942bc7f139491e7548472fc173af48d4'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB5; path=/
      - _pinpoint_session=BlaFUROI2mXfDh8ZFvirVNl3qQjEQ8jpS%2BQin6EqbSOBMivtd4pDADGCjsn9pp9Sj6I4waoTehYsdM59ty6Q%2FXd4X6H2QcN3oNkZUsXVfVpgP%2FO2YdXobTVuxH1Ac33FHOl7ESyjlJMR4rokUDXXdzMBWojwzkHBtT5ND8QHV8TYZO52W1HNDMa9pGue1Qih%2FGUhDwaK3me6fXuxyAv2zWQkb6i%2FSSh9DYFuVGNbEVbeKbtIaup9zBpbCednS%2FewoOgPyiuUJBC11v%2F%2B%2FzlZ0V8GY7fFomm%2BoVm9MeqSlqvrUo66G2wX25HteazS5pL%2FTk5qixGKexzZqsH4cTpuEI%2BI2qEJ9WrZuAEsWz6iwnbZwLbzscttx8aMJMCVdy0C6Zs4T9Ze3qIa6qrnb6JA6tC%2BgA%3D%3D--pGjoV5GlP4OICj%2Fb--lySq0EjTeXYucE3%2BFUX5Ow%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Wed, 08 May 2024 14:14:52 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=0b661044-a374-4551-a19b-447778f318a8; path=/; expires=Wed, 01 May
        2024 18:14:51 GMT; secure
      - ahoy_visitor=d1b6cd1e-0e49-4d2b-bd37-c06fa57ffbe9; path=/; expires=Fri, 01
        May 2026 14:14:51 GMT; secure
      X-Request-Id:
      - 8f6d4fe4-1888-4174-b060-23eebd4166a3
      X-Runtime:
      - '0.321920'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 May 2024 14:14:52 GMT
- request:
    method: get
    uri: https://api.crunchbase.com/api/v4/autocompletes?query=Bath%20Spa%20University&user_key=9eebe4bdec6f10ec631cbb8573cb8de2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.crunchbase.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Wed, 01 May 2024 14:14:52 GMT
      Etag:
      - W/"1714572892770"
      Server:
      - openresty
      X-Cb-Engine:
      - autocomplete:algolia
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Took:
      - '21'
      X-Cb-Request-Took:
      - '49'
      Content-Length:
      - '482'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"facet_ids":["contact","aberdeen","apptopia","semrush","rank","builtwith","bombora","school"],"identifier":{"uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","value":"Bath
        Spa University","image_id":"v1488530438/cej4b9ng1amolmbwoqp0.png","permalink":"bath-spa-university-2","entity_def_id":"organization"},"short_description":"Bath
        Spa offers undergraduate and postgraduate study and research opportunities
        with a focus on creativity, culture and enterprise."}]}'
  recorded_at: Wed, 01 May 2024 14:14:52 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - bathspa.pinpointhq.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 10 May 2024 14:56:42 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"f925b962743d160e3441e75fd19a3990"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-1af2030f4fd62a5cb7e37eb19fcebd82'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB1; path=/
      - _pinpoint_session=hf3RJyT7J0o5MTP68C%2F9%2FKOMcTgDanTH7JSpHkOcguTq99wG1vMxbeLVkeQ6Da0nSKshkijhCGC%2BhKuv%2FOoIpRhszcd26CP8MWXsxQz3F5zqc%2F1Cexcl4VMhAmMRQcQ57hqk%2FUV1bZ5Mn7%2F9P1%2F6IVxFL7i7%2FV%2FvclQcylFXyotZFidAisHYbKDig8WswU%2FQe733Vv00WlgNZAuda1HzFXOyqaGdqdeYYpJhnucdumhHhoqHIVi8yvVe7gEycClk9uPRqzMReDwBoMqtdYYMxUPzsZ6qc0ev%2BFFfZYxd3bVqFmU%3D--Nx0rGy2ho6pwUOJM--%2BekQgcLha2ew%2BMxU0Vf%2B%2BQ%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Fri, 17 May 2024 14:56:42 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=a8e2ab05-0476-43c7-b600-4659f0bc5b01; path=/; expires=Fri, 10 May
        2024 18:56:42 GMT; secure
      - ahoy_visitor=9407fb04-5e3e-4ae4-884b-02a9ccb2a45e; path=/; expires=Sun, 10
        May 2026 14:56:42 GMT; secure
      X-Request-Id:
      - ba56a6ec-992e-419f-af7b-07561315d1dd
      X-Runtime:
      - '0.497441'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 10 May 2024 14:56:40 GMT
- request:
    method: get
    uri: https://api.crunchbase.com/api/v4/autocompletes?query=Bath%20Spa%20University&user_key=1a809e14a0c7e29e964a5923f1b17bdd
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.crunchbase.com
  response:
    status:
      code: 429
      message: Too Many Requests
    headers:
      Content-Type:
      - text/plain; charset=us-ascii
      Date:
      - Sat, 11 May 2024 19:08:48 GMT
      Retry-After:
      - '12'
      Server:
      - openresty
      Content-Length:
      - '20'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: Usage limit exceeded
  recorded_at: Sat, 11 May 2024 19:08:48 GMT
recorded_with: VCR 6.2.0
