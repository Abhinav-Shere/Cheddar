---
http_interactions:
- request:
    method: get
    uri: https://jobs.workable.com/api/v1/companies/b7243622-5cc9-4572-9d52-e76cd62d85d8
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - jobs.workable.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 23 May 2024 18:23:13 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://jobs.workable.com
      Set-Cookie:
      - __cf_bm=.oazdxlIiIElUxCWtghLNS0bNFV1eSiR5AQk78NCqTg-1716488593-1.0.1.1-kfs21GBsozEhGkAmL.6qt5.KSf8ccpEXun.btVpQCCKjkaRt8tYIOfLsfEtWWyxTy35dtYZxrteFdLbYagJfzA;
        path=/; expires=Thu, 23-May-24 18:53:13 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - koa.sess.sig=VibrSDFgIprqibX4EKsFVPqiDGg; path=/; expires=Sat, 22 Jun 2024
        18:23:13 GMT; samesite=lax; secure; httponly
      - koa.sess=eyJzZWNyZXQiOiJKaVhhM2JLWEhSNlFIWko2eDBISE05dzUiLCJfZXhwaXJlIjoxNzE5MDgwNTkzNTc3LCJfbWF4QWdlIjoyNTkyMDAwMDAwfQ==;
        path=/; expires=Sat, 22 Jun 2024 18:23:13 GMT; samesite=lax; secure; httponly
      - wmc.sig=ReilstCE5YcwZjFx_rZBqAXdgGc; path=/; expires=Thu, 30 May 2024 18:23:13
        GMT; domain=.workable.com; samesite=none; secure
      - wmc=%7B%22cookie_id%22%3A%22845c3fbe-2efc-4d8d-918b-5d08adafd89b%22%7D; path=/;
        expires=Thu, 30 May 2024 18:23:13 GMT; domain=.workable.com; samesite=none;
        secure
      X-Sv:
      - 6411dbcf2d9d1124ab8ec9b36ba9f48f9d3472b59895f737fca5167ee6c7be3a
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8887136d0ec093dd
      Server:
      - cloudflare
      Cf-Ray:
      - 8887136d0ec093dd-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 May 2024 18:23:13 GMT
- request:
    method: get
    uri: https://apply.workable.com/api/v1/accounts/southern-national
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - apply.workable.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 23 May 2024 18:23:13 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://apply.workable.com
      Access-Control-Allow-Credentials:
      - 'true'
      Set-Cookie:
      - __cf_bm=jGrssRP.8O0.rmC39GOsMsnHzYRsLbgmasgfeC17SbA-1716488593-1.0.1.1-DZua1YqWMCswGN32CMw5Yk8sxfuok76jX3qMXU8V9TErEWNFulbACG.jpZfp6rQQKX5VoVV3p19pI2Da73oCBg;
        path=/; expires=Thu, 23-May-24 18:53:13 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - wmc=%7B%22cookie_id%22%3A%228e0f1bf3-9b59-47f4-92d0-2838b6d5b0d5%22%7D; path=/;
        expires=Wed, 24 May 2034 06:23:13 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8887136e79584058
      Server:
      - cloudflare
      Cf-Ray:
      - 8887136e79584058-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJpZCI6NjAzMTU2LCJ1aWQiOiJiNzI0MzYyMi01Y2M5LTQ1NzItOWQ1Mi1lNzZjZDYyZDg1ZDgiLCJsb2dvIjoiaHR0cHM6Ly93b3JrYWJsZWhyLnMzLmFtYXpvbmF3cy5jb20vdXBsb2Fkcy9hY2NvdW50L2xvZ28vNjAzMTU2L2xvZ28iLCJzdWJkb21haW4iOiJzb3V0aGVybi1uYXRpb25hbCIsIm5hbWUiOiJTb3V0aGVybiBOYXRpb25hbCBSb29maW5nIiwidXJsIjoiaHR0cDovL3d3dy5zb3V0aGVybm5hdGlvbmFsLmNvbS8iLCJsYW5ndWFnZXMiOnsiZGVmYXVsdCI6ImVuIiwib3B0aW9ucyI6W3sibmFtZSI6ImVuIiwicHVibGlzaGVkIjp0cnVlLCJlbmFibGVkIjp0cnVlLCJ2aXNpYmxlIjp0cnVlfV19LCJkZXRhaWxzIjp7Im92ZXJ2aWV3Ijp7ImRlc2NyaXB0aW9uIjoiPHA+U291dGhlcm4gTmF0aW9uYWwgUm9vZmluZyBpcyBhIHByb2Zlc3Npb25hbCByb29maW5nIGNvbnRyYWN0b3IgdGhhdCBmb2N1c2VzIG9uIGVuZXJneS1lZmZpY2llbnQgcmVzaWRlbnRpYWwgcm9vZmluZyByZXBsYWNlbWVudCwgdXNpbmcgcHJvZHVjdHMgYW5kIGluc3RhbGxhdGlvbiBtZXRob2RzIGdlYXJlZCB0byB0aGUgdW5pcXVlIGNsaW1hdGUgYW5kIGJ1aWxkaW5nIGNoYWxsZW5nZXMgaW4gdGhlIHNvdXRoZWFzdGVybiBVbml0ZWQgU3RhdGVzLiBXZSBhcmUgY2VydGlmaWVkIHRvIGluc3RhbGwgbW9zdCByb29maW5nIGJyYW5kcyBpbmNsdWRpbmcgcHJvZHVjdHMgZnJvbSBHQUYsIHRoZSBtYW51ZmFjdHVyZXIgb2YgTm9ydGggQW1lcmljYeKAmXMgIzEtc2VsbGluZyBUaW1iZXJsaW5lwq4gcm9vZmluZyBzaGluZ2xlcy48L3A+In0sIm9mY2NwIjpmYWxzZSwibWFpbGJveCI6eyJlbmFibGVkIjpmYWxzZSwidGV4dCI6bnVsbCwiZW1haWwiOiJzb3V0aGVybi1uYXRpb25hbEBqb2JzLndvcmthYmxlbWFpbC5jb20ifSwiZ3Vlc3NBdmF0YXIiOnRydWUsImFwcGx5V2l0aEluZGVlZCI6dHJ1ZSwiZGVwYXJ0bWVudHNQdWJsaWNMZXZlbCI6Mn19
  recorded_at: Thu, 23 May 2024 18:23:13 GMT
- request:
    method: get
    uri: https://apply.workable.com/api/v1/accounts/southern-national
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - apply.workable.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 23 May 2024 18:23:13 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://apply.workable.com
      Access-Control-Allow-Credentials:
      - 'true'
      Set-Cookie:
      - __cf_bm=Q4gs3cxjtv_GIw3878mOooBP8foEwCJ4.VY7ib21VAk-1716488593-1.0.1.1-RacLOl6JbTLqwuDx.NOc0QJSVZWk4WjUDltndui5AaI66I_LuLfS7ZXnbvgZDfUROUMLPF4v4bkG92yueGBkAg;
        path=/; expires=Thu, 23-May-24 18:53:13 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - wmc=%7B%22cookie_id%22%3A%22b6232f19-cd4d-4b95-8580-05359df4b815%22%7D; path=/;
        expires=Wed, 24 May 2034 06:23:13 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8887136fad0a888f
      Server:
      - cloudflare
      Cf-Ray:
      - 8887136fad0a888f-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJpZCI6NjAzMTU2LCJ1aWQiOiJiNzI0MzYyMi01Y2M5LTQ1NzItOWQ1Mi1lNzZjZDYyZDg1ZDgiLCJsb2dvIjoiaHR0cHM6Ly93b3JrYWJsZWhyLnMzLmFtYXpvbmF3cy5jb20vdXBsb2Fkcy9hY2NvdW50L2xvZ28vNjAzMTU2L2xvZ28iLCJzdWJkb21haW4iOiJzb3V0aGVybi1uYXRpb25hbCIsIm5hbWUiOiJTb3V0aGVybiBOYXRpb25hbCBSb29maW5nIiwidXJsIjoiaHR0cDovL3d3dy5zb3V0aGVybm5hdGlvbmFsLmNvbS8iLCJsYW5ndWFnZXMiOnsiZGVmYXVsdCI6ImVuIiwib3B0aW9ucyI6W3sibmFtZSI6ImVuIiwicHVibGlzaGVkIjp0cnVlLCJlbmFibGVkIjp0cnVlLCJ2aXNpYmxlIjp0cnVlfV19LCJkZXRhaWxzIjp7Im92ZXJ2aWV3Ijp7ImRlc2NyaXB0aW9uIjoiPHA+U291dGhlcm4gTmF0aW9uYWwgUm9vZmluZyBpcyBhIHByb2Zlc3Npb25hbCByb29maW5nIGNvbnRyYWN0b3IgdGhhdCBmb2N1c2VzIG9uIGVuZXJneS1lZmZpY2llbnQgcmVzaWRlbnRpYWwgcm9vZmluZyByZXBsYWNlbWVudCwgdXNpbmcgcHJvZHVjdHMgYW5kIGluc3RhbGxhdGlvbiBtZXRob2RzIGdlYXJlZCB0byB0aGUgdW5pcXVlIGNsaW1hdGUgYW5kIGJ1aWxkaW5nIGNoYWxsZW5nZXMgaW4gdGhlIHNvdXRoZWFzdGVybiBVbml0ZWQgU3RhdGVzLiBXZSBhcmUgY2VydGlmaWVkIHRvIGluc3RhbGwgbW9zdCByb29maW5nIGJyYW5kcyBpbmNsdWRpbmcgcHJvZHVjdHMgZnJvbSBHQUYsIHRoZSBtYW51ZmFjdHVyZXIgb2YgTm9ydGggQW1lcmljYeKAmXMgIzEtc2VsbGluZyBUaW1iZXJsaW5lwq4gcm9vZmluZyBzaGluZ2xlcy48L3A+In0sIm9mY2NwIjpmYWxzZSwibWFpbGJveCI6eyJlbmFibGVkIjpmYWxzZSwidGV4dCI6bnVsbCwiZW1haWwiOiJzb3V0aGVybi1uYXRpb25hbEBqb2JzLndvcmthYmxlbWFpbC5jb20ifSwiZ3Vlc3NBdmF0YXIiOnRydWUsImFwcGx5V2l0aEluZGVlZCI6dHJ1ZSwiZGVwYXJ0bWVudHNQdWJsaWNMZXZlbCI6Mn19
  recorded_at: Thu, 23 May 2024 18:23:13 GMT
- request:
    method: get
    uri: https://jobs.workable.com/api/v1/companies/b7243622-5cc9-4572-9d52-e76cd62d85d8
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - jobs.workable.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 23 May 2024 18:23:14 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://jobs.workable.com
      Set-Cookie:
      - __cf_bm=QZjhCxkQnZ7wJMs2i_i80oA850HaQMiICRvumOamkis-1716488594-1.0.1.1-39oV_KRp0v4oun2SBQ7.xT3eJ3O8M1RMfiyh3_LR_T5LJ6hqCUAnsqIS6Vfw9OyD_75CNO8MkU6tU_RMe2Pi2w;
        path=/; expires=Thu, 23-May-24 18:53:14 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - koa.sess.sig=bfHuoy2TMGdSh5PWgEvamBsuvjc; path=/; expires=Sat, 22 Jun 2024
        18:23:14 GMT; samesite=lax; secure; httponly
      - koa.sess=eyJzZWNyZXQiOiItVk1CSEp6RXdobGVnX0doam92OHBFbmciLCJfZXhwaXJlIjoxNzE5MDgwNTk0MTY2LCJfbWF4QWdlIjoyNTkyMDAwMDAwfQ==;
        path=/; expires=Sat, 22 Jun 2024 18:23:14 GMT; samesite=lax; secure; httponly
      - wmc.sig=4sy4wsymGFaWc4HV8wLpceB58Xw; path=/; expires=Thu, 30 May 2024 18:23:14
        GMT; domain=.workable.com; samesite=none; secure
      - wmc=%7B%22cookie_id%22%3A%226cf62581-846f-43c6-9045-2f805f029532%22%7D; path=/;
        expires=Thu, 30 May 2024 18:23:14 GMT; domain=.workable.com; samesite=none;
        secure
      X-Sv:
      - 6411dbcf2d9d1124ab8ec9b36ba9f48f9d3472b59895f737fca5167ee6c7be3a
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A88871370df5a71e7
      Server:
      - cloudflare
      Cf-Ray:
      - 88871370df5a71e7-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 May 2024 18:23:13 GMT
- request:
    method: get
    uri: https://api.crunchbase.com/api/v4/autocompletes?query=Southern%20National%20Roofing&user_key=1a809e14a0c7e29e964a5923f1b17bdd
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.crunchbase.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 23 May 2024 18:23:14 GMT
      Etag:
      - W/"1716488594928"
      Server:
      - openresty
      X-Cb-Engine:
      - autocomplete:algolia
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Took:
      - '41'
      X-Cb-Request-Took:
      - '77'
      Content-Length:
      - '376'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"facet_ids":["contact","aberdeen","company","rank","builtwith"],"identifier":{"uuid":"ae99bf06-1d89-4ea6-a293-ca74fd1bb82d","value":"Southern
        National Roofing","image_id":"wrvffjfbho170fkakjlb","permalink":"southern-national-roofing","entity_def_id":"organization"},"short_description":"Southern
        National Roofing provides roof replacement services."}]}'
  recorded_at: Thu, 23 May 2024 18:23:14 GMT
- request:
    method: get
    uri: https://apply.workable.com/api/v1/accounts/southern-national/jobs/7ECD8A9788
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - apply.workable.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 23 May 2024 18:23:15 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://apply.workable.com
      Access-Control-Allow-Credentials:
      - 'true'
      Set-Cookie:
      - __cf_bm=rRI1OoCJWO8COoK97Z2I8wNumAVlPQKWpcnibIrmjSk-1716488595-1.0.1.1-363EklK3ix2wxcutD62JFoDPUqimuF8Fj2EQFqE7jtBYYO4KK2IyXggh3ZTmdlHexPQEf5QQeCOOsnWxkOqQEA;
        path=/; expires=Thu, 23-May-24 18:53:15 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - wmc=%7B%22cookie_id%22%3A%224c36fe13-e765-4b17-adb0-0d168de02f2e%22%7D; path=/;
        expires=Wed, 24 May 2034 06:23:15 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8887137728f07697
      Server:
      - cloudflare
      Cf-Ray:
      - 8887137728f07697-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJpZCI6NDAwNjkyOSwic2hvcnRjb2RlIjoiOTkzMjAwODNDOSIsInRpdGxlIjoiU2VuaW9yIFNhbGVzIFJlcHJlc2VudGF0aXZlIiwicmVtb3RlIjpmYWxzZSwibG9jYXRpb24iOnsiY291bnRyeSI6IlVuaXRlZCBTdGF0ZXMiLCJjb3VudHJ5Q29kZSI6IlVTIiwiY2l0eSI6IllvcmsiLCJyZWdpb24iOiJQZW5uc3lsdmFuaWEifSwibG9jYXRpb25zIjpbeyJjb3VudHJ5IjoiVW5pdGVkIFN0YXRlcyIsImNvdW50cnlDb2RlIjoiVVMiLCJjaXR5IjoiWW9yayIsInJlZ2lvbiI6IlBlbm5zeWx2YW5pYSIsImhpZGRlbiI6ZmFsc2V9XSwic3RhdGUiOiJwdWJsaXNoZWQiLCJpc0ludGVybmFsIjpmYWxzZSwiY29kZSI6IiIsInB1Ymxpc2hlZCI6IjIwMjQtMDUtMDdUMDA6MDA6MDAuMDAwWiIsInR5cGUiOiJmdWxsIiwibGFuZ3VhZ2UiOiJlbiIsImRlcGFydG1lbnQiOlsiU2FsZXMiLCJPdXRzaWRlIFNhbGVzIl0sImFjY291bnRVaWQiOiJiNzI0MzYyMi01Y2M5LTQ1NzItOWQ1Mi1lNzZjZDYyZDg1ZDgiLCJhcHByb3ZhbFN0YXR1cyI6ImFwcHJvdmVkIiwid29ya3BsYWNlIjoib25fc2l0ZSIsImRlc2NyaXB0aW9uIjoiPHA+Sm9pbiBTb3V0aGVybiBOYXRpb25hbCBSb29maW5nLCB0aGUgbGVhZGluZyBuYW1lIGluIGhvbWUgcm9vZiByZXBsYWNlbWVudHMgYWNyb3NzIHRoZSBFYXN0IENvYXN0LiBXZSdyZSBsb29raW5nIGZvciBkeW5hbWljIGluZGl2aWR1YWxzIHRvIGpvaW4gb3VyIHRlYW0gYXMgUmVtb2RlbGluZyBTYWxlcyBDb25zdWx0YW50cy4gPC9wPjxwPklmIHlvdSdyZSBhIHNlYXNvbmVkIHNhbGVzIHByb2Zlc3Npb25hbCB3aXRoIGEga25hY2sgZm9yIHNlYWxpbmcgdGhlIGRlYWwsIGxvb2sgbm8gZnVydGhlci4gWW91J2xsIGJlIGFybWVkIHdpdGggcXVhbGl0eSBsZWFkcywgbm8gY29sZCBjYWxsaW5nIG5lY2Vzc2FyeS4gV2l0aCBhdmVyYWdlIGZpcnN0LXllYXIgZWFybmluZ3MgcmFuZ2luZyBmcm9tICQxMjBrLSQxNTBrIGFuZCB0b3AgcGVyZm9ybWVycyBoaXR0aW5nICQyMDBrKywgdGhlIHNreSdzIHRoZSBsaW1pdC4gUGx1cywgd2l0aCBtYW5hZ2VtZW50IGFuZCBleGVjdXRpdmUgcG9zaXRpb25zIG9uIHRoZSBob3Jpem9uLCB0aGlzIGlzIG1vcmUgdGhhbiBqdXN0IGEgam9i4oCUaXQncyBhIGNhcmVlciBvcHBvcnR1bml0eS4gQXBwbHkgbm93IGFuZCBsZXQncyBidWlsZCBhIGJyaWdodGVyIGZ1dHVyZSB0b2dldGhlciE8L3A+IiwicmVxdWlyZW1lbnRzIjoiPHVsPiA8bGk+UHJvdmVuIHRyYWNrIHJlY29yZCBvZiBzdWNjZXNzIGluIHNhbGVzLCBwcmVmZXJhYmx5IGluIGEgY29uc3VsdGF0aXZlIHNlbGxpbmcgZW52aXJvbm1lbnQuPC9saT4gPGxpPkV4Y2VsbGVudCBjb21tdW5pY2F0aW9uIGFuZCBpbnRlcnBlcnNvbmFsIHNraWxscy48L2xpPiA8bGk+QWJpbGl0eSB0byBidWlsZCByYXBwb3J0IGFuZCB0cnVzdCB3aXRoIGN1c3RvbWVycyBxdWlja2x5LjwvbGk+IDxsaT5TdHJvbmcgbmVnb3RpYXRpb24gYW5kIGNsb3Npbmcgc2tpbGxzLjwvbGk+IDxsaT5TZWxmLW1vdGl2YXRlZCB3aXRoIGEgcmVzdWx0cy1kcml2ZW4gYXBwcm9hY2guPC9saT4gPGxpPkFiaWxpdHkgdG8gd29yayBhdXRvbm9tb3VzbHkgd2hpbGUgYWxzbyBjb2xsYWJvcmF0aW5nIGVmZmVjdGl2ZWx5IHdpdGhpbiBhIHRlYW0uPC9saT4gPGxpPlByb2Zlc3Npb25hbCBhcHBlYXJhbmNlIGFuZCBkZW1lYW5vci48L2xpPiA8bGk+QmFjaGVsb3IncyBkZWdyZWUgb3IgZXF1aXZhbGVudCBleHBlcmllbmNlIHByZWZlcnJlZC48L2xpPiA8bGk+Tm8gdmlzaWJsZSBmYWNlIG9yIG5lY2sgdGF0dG9vcyBvciBwaWVyY2luZ3MuPC9saT4gPGxpPlJlbGlhYmxlIHRyYW5zcG9ydGF0aW9uIGFuZCB3aWxsaW5nbmVzcyB0byB0cmF2ZWwgd2l0aGluIHRoZSBhc3NpZ25lZCB0ZXJyaXRvcnksIGFzIG5lZWRlZC48L2xpPiA8bGk+RmFtaWxpYXJpdHkgd2l0aCBDUk0gc29mdHdhcmUgYW5kIG90aGVyIHNhbGVzIHRvb2xzIGlzIGEgcGx1cy48L2xpPiA8bGk+V2lsbGluZ25lc3MgdG8gdW5kZXJnbyB0aG9yb3VnaCBzYWxlcyB0cmFpbmluZyBwcm92aWRlZCBieSB0aGUgY29tcGFueS48L2xpPiA8bGk+VmFsaWQgZHJpdmVyJ3MgbGljZW5zZSBhbmQgY2xlYW4gZHJpdmluZyByZWNvcmQuPC9saT4gPGxpPkF1dGhvcml6YXRpb24gdG8gd29yayBpbiB0aGUgVW5pdGVkIFN0YXRlcy48L2xpPiA8L3VsPiIsImJlbmVmaXRzIjoiPHA+LUF0IFNvdXRoZXJuIE5hdGlvbmFsIFJvb2ZpbmcsIHdlJ3JlIG1vcmUgdGhhbiBqdXN0IGEgYnVzaW5lc3PigJR3ZSdyZSBhIGZhbWlseS4gT3VyIGNvbW1pdG1lbnQgdG8gaW50ZWdyaXR5LCBleGNlbGxlbmNlLCBhbmQgdGVhbXdvcmsgZHJpdmVzIGV2ZXJ5dGhpbmcgd2UgZG8uIEpvaW4gYSBjb21wYW55IHdoZXJlIHlvdSdyZSBub3QganVzdCBhbiBlbXBsb3llZSwgYnV0IGEgdmFsdWVkIG1lbWJlciBvZiB0aGUgdGVhbS48L3A+PHA+LVdpdGggU291dGhlcm4gTmF0aW9uYWwgUm9vZmluZydzIHJhcGlkIGV4cGFuc2lvbiwgdGhlcmUncyBhbXBsZSByb29tIGZvciBhZHZhbmNlbWVudC4gTWFueSBvZiBvdXIgdG9wIHNhbGVzIGNvbnN1bHRhbnRzIGhhdmUgdHJhbnNpdGlvbmVkIGludG8gbWFuYWdlbWVudCBhbmQgZXhlY3V0aXZlIHBvc2l0aW9ucy4gWW91ciBzdWNjZXNzIGhlcmUgaXMgbGltaXRlZCBvbmx5IGJ5IHlvdXIgYW1iaXRpb24uPC9wPjxwPi1XZSBiZWxpZXZlIGluIHNldHRpbmcgb3VyIHNhbGVzIHRlYW0gdXAgZm9yIHN1Y2Nlc3MuIFRoYXQncyB3aHkgd2UgcHJvdmlkZSBleHRlbnNpdmUgdHJhaW5pbmcgbGVkIGJ5IGluZHVzdHJ5IGV4cGVydHMsIGN1dHRpbmctZWRnZSBtYXJrZXRpbmcgbWF0ZXJpYWxzLCBhbmQgZGVkaWNhdGVkIHN1cHBvcnQgZXZlcnkgc3RlcCBvZiB0aGUgd2F5LiBXaXRoIHVzLCB5b3UnbGwgaGF2ZSBhbGwgdGhlIHRvb2xzIHlvdSBuZWVkIHRvIGV4Y2VsLjwvcD48cD4tV2UgYmVsaWV2ZSBpbiByZWNvZ25pemluZyBhbmQgcmV3YXJkaW5nIGV4Y2VsbGVuY2UuIEFzIGEgdG9wIHNhbGVzIHBlcmZvcm1lciBhdCBTb3V0aGVybiBOYXRpb25hbCBSb29maW5nLCB5b3UnbGwgZW5qb3kgY29tcGV0aXRpdmUgY29tcGVuc2F0aW9uLCBsdWNyYXRpdmUgYm9udXNlcywgYW5kIG9wcG9ydHVuaXRpZXMgdG8gYmUgcmVjb2duaXplZCBmb3IgeW91ciBoYXJkIHdvcmsgYXQgY29tcGFueS13aWRlIGV2ZW50cy48L3A+In0=
  recorded_at: Thu, 23 May 2024 18:23:14 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Y?key=AmhBY6imsSQC_f1o8tlcEXoO6WxekJR2plXfZQr7g_Y6I35Yh18bR1khIX9jc9vI
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - dev.virtualearth.net
  response:
    status:
      code: 403
      message: Forbidden
    headers:
      Date:
      - Thu, 23 May 2024 18:23:15 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '588'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Azure-Ref:
      - 20240523T182315Z-15948fd4d4cgvbgcb06nr11fbw00000006tg00000000xg3a
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJEZW5pZWRDcmVkZW50aWFscyIsImJyYW5kTG9nb1VyaSI6Imh0dHA6Ly9kZXYudmlydHVhbGVhcnRoLm5ldC9CcmFuZGluZy9sb2dvX3Bvd2VyZWRfYnkucG5nIiwiY29weXJpZ2h0IjoiQ29weXJpZ2h0IMKpIDIwMjQgTWljcm9zb2Z0IGFuZCBpdHMgc3VwcGxpZXJzLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIEFQSSBjYW5ub3QgYmUgYWNjZXNzZWQgYW5kIHRoZSBjb250ZW50IGFuZCBhbnkgcmVzdWx0cyBtYXkgbm90IGJlIHVzZWQsIHJlcHJvZHVjZWQgb3IgdHJhbnNtaXR0ZWQgaW4gYW55IG1hbm5lciB3aXRob3V0IGV4cHJlc3Mgd3JpdHRlbiBwZXJtaXNzaW9uIGZyb20gTWljcm9zb2Z0IENvcnBvcmF0aW9uLiIsImVycm9yRGV0YWlscyI6WyJUaGUgcmVxdWVzdCB3YXMgZm9yYmlkZGVuLiAgWW91ciBjcmVkZW50aWFscyBtYXkgYmUgZGVuaWVkIG9yIHN1c3BlbmRlZC4iXSwicmVzb3VyY2VTZXRzIjpbXSwic3RhdHVzQ29kZSI6NDAzLCJzdGF0dXNEZXNjcmlwdGlvbiI6IkZvcmJpZGRlbiIsInRyYWNlSWQiOiIxZGEyNWRjMjdiZjk4NGEyOWMyMzYwMjAxZDM2NTc3MiJ9
  recorded_at: Thu, 23 May 2024 18:23:14 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/k,%20Pennsylvania%20United%20States?key=AmhBY6imsSQC_f1o8tlcEXoO6WxekJR2plXfZQr7g_Y6I35Yh18bR1khIX9jc9vI
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - dev.virtualearth.net
  response:
    status:
      code: 403
      message: Forbidden
    headers:
      Date:
      - Thu, 23 May 2024 18:23:15 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '588'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Azure-Ref:
      - 20240523T182315Z-15948fd4d4cd6nff2h6fxpsud000000006k000000001gmug
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJEZW5pZWRDcmVkZW50aWFscyIsImJyYW5kTG9nb1VyaSI6Imh0dHA6Ly9kZXYudmlydHVhbGVhcnRoLm5ldC9CcmFuZGluZy9sb2dvX3Bvd2VyZWRfYnkucG5nIiwiY29weXJpZ2h0IjoiQ29weXJpZ2h0IMKpIDIwMjQgTWljcm9zb2Z0IGFuZCBpdHMgc3VwcGxpZXJzLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIEFQSSBjYW5ub3QgYmUgYWNjZXNzZWQgYW5kIHRoZSBjb250ZW50IGFuZCBhbnkgcmVzdWx0cyBtYXkgbm90IGJlIHVzZWQsIHJlcHJvZHVjZWQgb3IgdHJhbnNtaXR0ZWQgaW4gYW55IG1hbm5lciB3aXRob3V0IGV4cHJlc3Mgd3JpdHRlbiBwZXJtaXNzaW9uIGZyb20gTWljcm9zb2Z0IENvcnBvcmF0aW9uLiIsImVycm9yRGV0YWlscyI6WyJUaGUgcmVxdWVzdCB3YXMgZm9yYmlkZGVuLiAgWW91ciBjcmVkZW50aWFscyBtYXkgYmUgZGVuaWVkIG9yIHN1c3BlbmRlZC4iXSwicmVzb3VyY2VTZXRzIjpbXSwic3RhdHVzQ29kZSI6NDAzLCJzdGF0dXNEZXNjcmlwdGlvbiI6IkZvcmJpZGRlbiIsInRyYWNlSWQiOiI1NzQzZGRjYjVmZmI1ZjFlZjQ1MDg2OTQ4ZTk5YzZkZCJ9
  recorded_at: Thu, 23 May 2024 18:23:14 GMT
recorded_with: VCR 6.2.0
