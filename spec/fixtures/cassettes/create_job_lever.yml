---
http_interactions:
- request:
    method: get
    uri: https://api.lever.co/v0/postings/GoToGroup/?mode=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 26 May 2024 06:23:52 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1303678'
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Etag:
      - W/"13e47e-Olvo8Kdb6QOyBfA+6GXw3kETjqs"
      X-Stream-Path:
      - dapi
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        [{"additionalPlain":"About The Team\n\nAccount Executive (AE) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support teams. Ideally, an AE regularly visits assigned merchants to see what really happened on the ground as well as provide necessary advice to them in increasing transactions over time.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support teams. Ideally, an AE regularly visits assigned merchants to see what really happened on the ground as well as provide necessary advice to them in increasing transactions over time.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Direct Contract","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1694515437986,"descriptionPlain":"About The Team\n\nAccount Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build & maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.\n","description":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build &amp; maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.</div>","id":"f7bcbd05-b658-4b80-8577-87df02aaae98","lists":[{"text":"What You Will Do","content":"<li>Prepare sales forecasts and budgets; set transaction targets in areas like product mix,sales volume, market shares in their territory</li><li>Analyze consumer behavior, market insight, field situation, and market trend in their territory</li><li>Regular review leads merchants (i.e. monitor merchant growth, transfer merchants to new categories, competitor activity, etc.)</li><li>Provide advices to the merchant based on valid data analytics result in order to increase number of transactions</li><li>Create regular report to what's happen in their respective territory toward Regional/Nation-Wide company strategy</li>"},{"text":"What You Will Need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Account Executive (Jakarta North)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build &amp; maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.</div>","descriptionBodyPlain":"About The Team\n\nAccount Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build & maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98","applyUrl":"https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Tangerang","team":"-","allLocations":["Tangerang"]},"createdAt":1712309314064,"description":"","descriptionPlain":"","id":"8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa","lists":[],"text":"Account Manager - Tangerang","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa","applyUrl":"https://jobs.lever.co/GoToGroup/8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa/apply"},{"additionalPlain":"About the team\n\nAccount Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b></div><div><br></div><div>Account Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1691377608448,"descriptionPlain":"About the Role \n\nAccount Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</div><div><br></div><div><br></div>","id":"5e3ad167-6545-4f00-9532-abc5c348b3b0","lists":[{"text":"What you will do","content":"<li>Create sales &amp; journey plan to achieve his/her own target in areas like product mix, sales volume, market shares for his/her territory</li><li>Engage merchants within his/her territory to keep them active in Gojek ecosystem &amp; to increase revenue for the company</li><li>Provide advice &amp; offer solution to the merchants in his/her territory based on data so that the merchants can grow&nbsp;</li><li>Create regular reports on what's happening in his/her respective territory and his/her team’s territory</li><li>Know when to escalate &amp; ask help from DSM for bigger issues</li><li>(For AMs with team) Lead and manage his/her team: Review team performance and take corrective actions to achieve target, Cascade &amp; execute strategy from DSM to the team, Coach &amp; groom leadership skills to his/her team, Support AEs in his/her team to problem solve issues happening in their territories, especially issues happening at key/critical merchants</li><li>Any other assigned task related to Sales motion</li><li>Handling objection and complain handling</li>"},{"text":"What you will need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Account Manager (East Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAccount Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/5e3ad167-6545-4f00-9532-abc5c348b3b0","applyUrl":"https://jobs.lever.co/GoToGroup/5e3ad167-6545-4f00-9532-abc5c348b3b0/apply"},{"additionalPlain":"Account Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 9pt\">Account Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715157639446,"descriptionPlain":"Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n","description":"<div><span style=\"font-size: 9pt\">Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</span></div>","id":"dfa07479-8e81-43ff-a9ad-4ae02f72207e","lists":[{"text":"What you will do","content":"<li>Create sales &amp; journey plan to achieve his/her own target in areas like product mix, sales volume, market shares for his/her territory</li><li>Engage merchants within his/her territory to keep them active in Gojek ecosystem &amp; to increase revenue for the company</li><li>Provide advice &amp; offer solution to the merchants in his/her territory based on data so that the merchants can grow&nbsp;</li><li>Create regular reports on what's happening in his/her respective territory and his/her team’s territory</li><li>Know when to escalate &amp; ask help from DSM for bigger issues</li><li>Any other assigned task related to Sales motion</li><li>Handling objection and complain handling</li><div><br></div>"},{"text":"What you will need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li><div><br></div>"}],"text":"Account Manager (North East Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</span></div>","descriptionBodyPlain":"Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/dfa07479-8e81-43ff-a9ad-4ae02f72207e","applyUrl":"https://jobs.lever.co/GoToGroup/dfa07479-8e81-43ff-a9ad-4ae02f72207e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715077881489,"descriptionPlain":"As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.\n","description":"<div>As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&amp;A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.</div>","id":"9aa5a060-e2c3-4296-9057-049a3c1fa5bd","lists":[{"text":"What You Will Do","content":"<li>Ensure accounting process are properly designed and executed and initiate process improvement when necessary</li><li>Identify, analyze and resolve low complexity accounting issues independently</li><li>Review accounting numbers and ensure posted journal entries are complete, accurate and reconciled to the source of data and/or underlying documents</li><li>Review detailed list of financial statements items and ensure they are tallied with trial balance</li><li>Perform and review financial closing activities</li><li>Involve in preparation of statutory financial statements</li>"},{"text":"What You Will Need","content":"<li>A bachelor's or associate’s degree in Accountancy or equivalent</li><li>At least 2 years of experience as auditor in public accounting firm and/or accountant in e-commerce, fintech, technology or other relevant industry</li><li>Strong knowledge of Indonesian Accounting Standards (PSAK), knowledge in International Financial Reporting Standards (IFRS) would be an advantage</li><li>Fluent in English (verbal and written)&nbsp;</li><li>Strong interpersonal communication skills</li><li>Strong attention to detail and accuracy</li><li>Strong problem-solving and analytical mindset</li>"}],"text":"Accountant","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&amp;A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.</div>","descriptionBodyPlain":"As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/9aa5a060-e2c3-4296-9057-049a3c1fa5bd","applyUrl":"https://jobs.lever.co/GoToGroup/9aa5a060-e2c3-4296-9057-049a3c1fa5bd/apply"},{"additionalPlain":"About the Team \n\nThe management of AML-CFT in Subsidiaries which is under the coordination of the AML-CFT Special Work Unit. The implementation of the AML-CFT program is carried out by the AML-CFT Special Work Unit which is structurally under the Compliance Department and is directly responsible to the Director in charge of the compliance.\n\nThe AML CFT unit is a unique unit. We work in silence where everything has to be balanced between quality and speed. Where evidence must be supported by data and risk profiles. We must be able to understand the applicable laws and regulations, must always be up to date on the latest criminal cases or schemes related to ML, TF and PF and must be able to understand creative ideas from friends in Business and ensure they do not go off track . If you like watching FBI, CSI, NCSI series then you will definitely enjoy working in this unit.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 10pt\">About the Team </b></div><div><br></div><div>The management of AML-CFT in Subsidiaries which is under the coordination of the AML-CFT Special Work Unit. The implementation of the AML-CFT program is carried out by the AML-CFT Special Work Unit which is structurally under the Compliance Department and is directly responsible to the Director in charge of the compliance.</div><div><br></div><div>The AML CFT unit is a unique unit. We work in silence where everything has to be balanced between quality and speed. Where evidence must be supported by data and risk profiles. We must be able to understand the applicable laws and regulations, must always be up to date on the latest criminal cases or schemes related to ML, TF and PF and must be able to understand creative ideas from friends in Business and ensure they do not go off track . If you like watching FBI, CSI, NCSI series then you will definitely enjoy working in this unit.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Legal & Compliance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1699323667395,"descriptionPlain":"About the Role\n\nThis position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">This position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.</span></div>","id":"365ef8c5-c4b7-4aab-9d0d-eabea5ef448b","lists":[{"text":"What you will do","content":"<li>Lead a unit of AML/CFT professionals focused on the various elements of an AML/CFT program;</li><li>A pointed person for any Regulatory Compliance matters/projects as well as internal or external auditors in compliance reviews.</li><li>As an industry expert, keep track of the latest developments around regulations and find smart solutions to mitigate ML/TF risks;&nbsp;</li><li>Remain knowledgeable of new or changing regulation, regulatory expectations, market conditions and industry best practices and find smart solutions to mitigate ML/TF risks;</li><li>Ensure Subject Matter Experts participate in all activities where expertise is required, including but not limited to, risk assessments, policy writing, training development, advice to the business, monitoring activities, and reporting;</li><li>Provide senior management with actionable advice on how to effectively manage AML/CFT-related risks;</li><li>Ensure all regulatory reporting requirements related to AML/CFT themes are met;</li><li>Ensure implementation AML CFT regular trainings as well to Business Unit and Support Function and to liaise with the Learning &amp; Development PAC</li>"},{"text":"What you will need","content":"<li>A minimum of 5 years in a senior leadership role in the AML/CFT</li><li>You have extensive knowledge of payments and or banking/finance industry</li><li>A thorough understanding of AML/CFT laws and regulations incl. risks, controls, industry best practices and regulatory requirements</li><li>Excellent and direct communicator who talks straight without being rude</li><li>&nbsp;You have the ability to clearly explain AML CFT compliance and related risks, develop sound mitigation strategies and find workable solutions</li><li>&nbsp;You have extensive experience representing and leading meetings with regulatory agencies, examiners and auditors</li><li>You have the ability to structure and prioritize in a high volume, fast-paced environment and drive a process to completion</li><li>You are a team player that does not shy away from taking ownership</li>"}],"text":"AML/CFT Manager - Fintech - MAB","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">This position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.</span></div>","descriptionBodyPlain":"About the Role\n\nThis position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/365ef8c5-c4b7-4aab-9d0d-eabea5ef448b","applyUrl":"https://jobs.lever.co/GoToGroup/365ef8c5-c4b7-4aab-9d0d-eabea5ef448b/apply"},{"additionalPlain":"Our Regional Consumer Engagement team is a family of 17 people based in Indonesia, specifically in Jabodetabek region. We oversee all things and act as a center of excellence for partnerships and increasing potential visibility in respective region POI or malls and work to create (consumer engagement and brand awareness. It’s our job to ensure that all engagement activities run seamlessly. One of the biggest challenges we had to face is to ensure gojek domination is consistent across Jabodetabek region. We eventually resolved it by doing close coordination with HQ and the regional team. Currently, we’re busy at work on various projects, including one about POI domination, merchants branding.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>Our Regional Consumer Engagement team is a family of 17 people based in Indonesia, specifically in Jabodetabek region. We oversee all things and act as a center of excellence for partnerships and increasing potential visibility in respective region POI or malls and work to create (consumer engagement and brand awareness. It’s our job to ensure that all engagement activities run seamlessly. One of the biggest challenges we had to face is to ensure gojek domination is consistent across Jabodetabek region. We eventually resolved it by doing close coordination with HQ and the regional team. Currently, we’re busy at work on various projects, including one about POI domination, merchants branding.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713419462921,"descriptionPlain":"They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).\n\nWhat you will do\n\n- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.\n- Creating consumer engagement strategy and plan according to local insight, merchants branding & POI domination and HQ driven initiative amplifications for the region. \n- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any \n- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.\n\nWhat you will need \n\n- Bachelor degree from top university or  any well-known universities from each region) or abroad with GPA > 3.2 or equivalent\n- Preferably majoring in Marketing Management or Business\n- At least 3-4 years of working experience in marketing\n- Solid experience in partnership\n- Good understanding of local knowledge & demonstrate excellent in Digital Marketing Campaign\n- Able to teach related Consumer Engagement knowledge to all CE team\n- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills\n- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills\n\n","description":"<div><span style=\"font-size: 10pt\">They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).</span></div><div><br></div><div><b style=\"font-size: 18px\">What you will do</b></div><div><br></div><div>- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.</div><div>- Creating consumer engagement strategy and plan according to local insight, merchants branding &amp; POI domination and HQ driven initiative amplifications for the region.&nbsp;</div><div>- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any&nbsp;</div><div>- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.</div><div><br></div><div><b style=\"font-size: 18px\">What you will need</b>&nbsp;</div><div><br></div><div>- Bachelor degree from top university or&nbsp; any well-known universities from each region) or abroad with GPA &gt; 3.2 or equivalent</div><div>- Preferably majoring in Marketing Management or Business</div><div>- At least 3-4 years of working experience in marketing</div><div>- Solid experience in partnership</div><div>- Good understanding of local knowledge &amp; demonstrate excellent in Digital Marketing Campaign</div><div>- Able to teach related Consumer Engagement knowledge to all CE team</div><div>- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</div><div>- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</div><div><br></div>","id":"c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1","lists":[],"text":"Area CE Associate - Central Jakarta","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).</span></div><div><br></div><div><b style=\"font-size: 18px;\">What you will do</b></div><div><br></div><div>- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.</div><div>- Creating consumer engagement strategy and plan according to local insight, merchants branding &amp; POI domination and HQ driven initiative amplifications for the region.&nbsp;</div><div>- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any&nbsp;</div><div>- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.</div><div><br></div><div><b style=\"font-size: 18px;\">What you will need</b>&nbsp;</div><div><br></div><div>- Bachelor degree from top university or&nbsp; any well-known universities from each region) or abroad with GPA &gt; 3.2 or equivalent</div><div>- Preferably majoring in Marketing Management or Business</div><div>- At least 3-4 years of working experience in marketing</div><div>- Solid experience in partnership</div><div>- Good understanding of local knowledge &amp; demonstrate excellent in Digital Marketing Campaign</div><div>- Able to teach related Consumer Engagement knowledge to all CE team</div><div>- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</div><div>- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</div><div><br></div>","descriptionBodyPlain":"They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).\n\nWhat you will do\n\n- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.\n- Creating consumer engagement strategy and plan according to local insight, merchants branding & POI domination and HQ driven initiative amplifications for the region. \n- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any \n- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.\n\nWhat you will need \n\n- Bachelor degree from top university or  any well-known universities from each region) or abroad with GPA > 3.2 or equivalent\n- Preferably majoring in Marketing Management or Business\n- At least 3-4 years of working experience in marketing\n- Solid experience in partnership\n- Good understanding of local knowledge & demonstrate excellent in Digital Marketing Campaign\n- Able to teach related Consumer Engagement knowledge to all CE team\n- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills\n- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1","applyUrl":"https://jobs.lever.co/GoToGroup/c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Bali","team":"-","allLocations":["Bali"]},"createdAt":1703134039485,"descriptionPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","id":"4220480a-be7c-4f31-8d6b-59a21558b594","lists":[{"text":"What You Will Do","content":"<li>Support Area Head to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver Area target completed orders and active users.</li><li>Managing all day to day marketing executional activities from all areas needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in areas are delivered with a given standard of accuracy, completeness, timeliness as per the standard package and local initiatives.&nbsp;</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis.&nbsp;Internally work with direct responsibility to deliver area executions and targets by executing events, exhibits, and other activities.</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results.</li><li>Responsible for setting the integrated communications plan and ensuring consistency of messaging and brand communications. Working closely with the sales, government relations, and operations team.</li>"},{"text":"What You Will Need","content":"<li>Minimum 2&nbsp; years of working experience in Marketing/Sales, preferaby from global FMCG Company</li><li>Good understanding of local knowledge</li><li>Strong analytical and planning skills</li><li>Good communication and presentation skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Good collaboration with compassion and proactiveness</li><li>Agile and fast in thinking and execution</li><li><b>Willing to be based in Bali</b></li>"}],"text":"Area Consumer Engagement Associate","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","descriptionBodyPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/4220480a-be7c-4f31-8d6b-59a21558b594","applyUrl":"https://jobs.lever.co/GoToGroup/4220480a-be7c-4f31-8d6b-59a21558b594/apply"},{"additionalPlain":"About The Team\n\nArea CE Associate  will play for marketing strategy in Gojek Regions. He/she will report to the appointed Area Head. He/she will regularly coordinate with the all team (operations, sales & analytics team) in the designated Areas\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Area CE Associate&nbsp; will play for marketing strategy in Gojek Regions. He/she will report to the appointed Area Head. He/she will regularly coordinate with the all team (operations, sales &amp; analytics team) in the designated Areas</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Yogyakarta","team":"-","allLocations":["Yogyakarta"]},"createdAt":1711351519318,"descriptionPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div><b>About The Role</b></div><div><br></div><div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","id":"e60f0ed3-0fe4-4f85-b1a7-167888e159a4","lists":[{"text":"What You Will Do","content":"<li>Support Area Head to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver Area target completed orders and active users.</li><li>Managing all day to day marketing executional activities from all areas needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in areas are delivered with a given standard of accuracy, completeness, timeliness as per the standard package and local initiatives.&nbsp;</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis.</li><li>&nbsp;Internally work with direct responsibility to deliver area executions and targets by executing events, exhibits, and other activities.</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results.</li><li>Responsible for setting the integrated communications plan and ensuring consistency of messaging and brand communications. Working closely with the sales, government relations, and operations team.</li>"},{"text":"What You Will Need","content":"<li>Min 2&nbsp; years of working experience in Marketing/Sales</li><li>Good understanding of local knowledge</li><li>Strong analytical and planning skills</li><li>Good communication and presentation skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Good collaboration with compassion and proactiveness</li><li>Agile and fast in thinking and execution</li><li>Have exposure of working at a top global FMCG company would be a plus point</li>"}],"text":"Area Consumer Engagement Associate (Yogya)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","descriptionBodyPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e60f0ed3-0fe4-4f85-b1a7-167888e159a4","applyUrl":"https://jobs.lever.co/GoToGroup/e60f0ed3-0fe4-4f85-b1a7-167888e159a4/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Bandung","team":"-","allLocations":["Bandung"]},"createdAt":1716603127529,"description":"","descriptionPlain":"","id":"95352b3a-e239-4d08-8e8a-aeedba71872e","lists":[{"text":"What you will do:","content":"<li>Accountable for day-to-day operations monitoring (2W and 4W) including:&nbsp;&nbsp;driver acquisition management, driver engagement management (loyalty &amp; retention and safety &amp; performance training), driver exit (i.e. drivers suspension, etc.) management and inventory management (driver attributes and driver warrant), driver income through driver expenses reduction and providing alternative income (i.e. Swadaya, ProEnsure SOP and legal compliances in the areamo Go)</li><li>Collaborate with Area Head for day-to-day escalated issues around driver services</li><li>Collaborate with Sales and Consumer Engagement team to achieve shared target in Area level</li><li>Responsible for end to end processes channel walk in center (Driver Support Unit) in the area</li><li>Manage and evaluate all programs related with generating more high quality drivers in the region</li><li>Support ROH in product changes roll out in the region</li>"},{"text":"What you will need:","content":"<li>At least 5 years experience in operations, preferably at the managerial level and from Multi National Company</li><li>Having strong analytical thinking and problem solving skills using various improvement tools and methods</li><li>Having good understanding about supply and demand planning</li><li>Having good communication skills and good attention to detail and routine activities</li><li>Able to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Able to handle communication in community or mass conflict&nbsp;</li><li>Fluent in Bahasa Indonesia &amp; proficient in spoken and written in English</li><li>Having Six Sigma Black Belt Certification is an advantage</li>"}],"text":"Area Operations Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/95352b3a-e239-4d08-8e8a-aeedba71872e","applyUrl":"https://jobs.lever.co/GoToGroup/95352b3a-e239-4d08-8e8a-aeedba71872e/apply"},{"additionalPlain":"About the team \n\nArea Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staffs attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the team </b></div><div><br></div><div><span style=\"font-size: 16px\">Area Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staffs attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Depok","team":"-","allLocations":["Depok","Bogor"]},"createdAt":1713768982209,"descriptionPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","id":"18674f77-24b2-46a4-86bb-7b5e7fe71f2c","lists":[{"text":"What You Will Do:","content":"<li>Accountable for day-to-day operations monitoring (2W and 4W) including:&nbsp;&nbsp;Driver acquisition management, Driver engagement management (loyalty &amp; retention and safety &amp; performance training), Driver exit (i.e. drivers suspension, etc.) management and inventory management (driver attributes and driver warrant), driver income through driver expenses reduction and providing alternative income (i.e. Swadaya, Promo Go)&nbsp;</li><li>Collaborate with Area Head for day-to-day escalated issues around driver services</li><li>Collaborate with Sales and Consumer Engagement team to achieve shared target in Area level</li><li>Collaborate with Public &amp; Government Relation team and Local Government that related to operations, e.g. Dishub</li><li>Responsible for end to end processes channel walk in center (Driver Support Unit) in the area</li><li>Ensure SOP and legal compliances in the specific area</li><li>Manage and evaluate all programs related with generating more high quality drivers in the region</li><li>Support Regional Operations Head in product changes roll out and other strategic implementation in the region</li>"},{"text":"What You Will Need","content":"<li>At least 5 years experience in operations/ supply/ demand generation, preferably at the managerial level and from Multi National Company</li><li>Having strong analytical thinking, insights generating, and complex problem solving skills using various improvement tools and methods, including Big Query/ SQL, Tableau</li><li>Good understanding about supply and demand planning</li><li>Prior experience in managing team (&gt; 3 members)</li><li>Good communication skills and good attention to detail and routine activities</li><li>Ability to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Capability to handle communication in community or mass conflict&nbsp;</li><li>Proficiency in English both spoken and written</li>"}],"text":"Area Operations Manager (Bogor Depok)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","descriptionBodyPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/18674f77-24b2-46a4-86bb-7b5e7fe71f2c","applyUrl":"https://jobs.lever.co/GoToGroup/18674f77-24b2-46a4-86bb-7b5e7fe71f2c/apply"},{"additionalPlain":"About The Team\n\nArea Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staff as well as Satellite Operations Supervisor for specific cities attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Area Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staff as well as Satellite Operations Supervisor for specific cities attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713865216824,"descriptionPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","id":"d9e236de-3ffc-4aae-9895-20212cdbeceb","lists":[{"text":"What You Will Do:","content":"<li>Accountable for day-to-day operations monitoring (2W and 4W) including:&nbsp;&nbsp;driver acquisition management, driver engagement management (loyalty &amp; retention and safety &amp; performance training),&nbsp;driver exit (i.e. drivers suspension, etc.) management and inventory management (driver attributes and driver warrant), driver income through driver expenses reduction and providing alternative income (i.e. Swadaya, Promo Go)&nbsp;</li><li>Collaborate with Area Head for day-to-day escalated issues around driver services</li><li>Collaborate with Sales and Consumer Engagement team to achieve shared target in Area level</li><li>Responsible for end to end processes channel walk in center (Driver Support Unit) in the area</li><li>Ensure SOP and legal compliances in the area</li><li>Manage and evaluate all programs related with generating more high quality drivers in the region</li><li>Support ROH in product changes roll out in the region</li>"},{"text":"What You Will Need:","content":"<li>At least 5 years experience in operations, preferably at the managerial level and from Multi National Company</li><li>Having strong analytical thinking and problem solving skills using various improvement tools and methods</li><li>Having good understanding about supply and demand planning</li><li>Having good communication skills and good attention to detail and routine activities</li><li>Able to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Able to handle communication in community or mass conflict&nbsp;</li><li>Proficiency in English</li><li>Having Six Sigma Black Belt Certification is an advantage</li>"}],"text":"Area Operations Manager (Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","descriptionBodyPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d9e236de-3ffc-4aae-9895-20212cdbeceb","applyUrl":"https://jobs.lever.co/GoToGroup/d9e236de-3ffc-4aae-9895-20212cdbeceb/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716602705785,"description":"","descriptionPlain":"","id":"8c7385d0-98c1-41d8-b780-6c84ed6c40ad","lists":[{"text":"What you will do:","content":"<li>Design an overall merchant strategy (encompassing both hunting and farming motion) for the Area, followed by implementation and execution of the plan to ensure business objectives are achieved</li><li>Oversee and manage the performance of his/her team (consisting of at least AE &amp; AM)</li><li>Review team performance and take corrective actions &nbsp;to achieve target.</li><li>Cascade strategy from RSH &amp; Sales Strategy HQ to the team &amp; lead the execution for the Area.</li><li>Coach AE &amp; AM to Identify new sales opportunities within existing merchant accounts by up-selling and cross-selling existing products.                                                                                                                                                                                                  </li><li>Support his/her team to problem solve issues happening in their area, especially issues happening at critical merchants.</li><li>Regularly do coaching &amp; mentoring for the team members</li><li>Identify key/critical merchants in the Area including: Build and maintain relationships with these merchants                                                                                and Give additional support to the AE/AM managing the merchants to problem solve issues experienced by these merchants</li><li>Work with relevant stakeholders in the region/area to ensure that sales strategies &amp; merchant activities are aligned with the overall regional and nationwide company objectives. This would include supporting the RCE team to translate consumer behavior, market insight, field situation, and market trend within the district to refine the overall region strategy.</li><li>Know when to escalate &amp; ask help from RSH for bigger issues</li>"},{"text":"What you will need :","content":"<li>Bachelor's degree in any field (Top tier University is preferable) and willing to relocate to another city</li><li>5-7 years of experience within mid-to-senior management function (FMCG, SMB Banking and Telecom company)</li><li>Strong network and knowledge about the city</li><li>Excellence to bridge, develop and maintain good relationships with key partners such as but not limited to local/regional government stakeholders, 3rd party partners, merchant associations, communities</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Strong leadership and interpersonal skills, experienced in managing a big team, as well as strong in people development and mentoring / coaching</li><li>Strong written &amp; communication skills, fluent in English and Bahasa Indonesia</li><li>Fact-based/number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"},{"text":"About the team:","content":"<li>Area Sales Manager (ASM) will work within direct command of Area Head and matrix collaboratively with the region sales team on some projects. You will lead the Sales team consisting of Account Manager (AM) &amp; Account Executive (AE) for Surabaya &amp; Malang areas. as ASM regularly visits with AM &amp; AE to their assigned merchants across their areas to see what really happened on the ground as well as providing advance advice to them in increasing transaction overtime.</li>"}],"text":"Area Sales Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/8c7385d0-98c1-41d8-b780-6c84ed6c40ad","applyUrl":"https://jobs.lever.co/GoToGroup/8c7385d0-98c1-41d8-b780-6c84ed6c40ad/apply"},{"additionalPlain":"About the team \n\nThe Area Sales Manager (ASM) will work within the direct command of the Area Head and matrix collaboratively with the region sales team on some projects. You will lead the Sales team consisting of the Account Manager (AM) & Account Executive (AE) for the Surabaya & Malang areas. ASM regularly visits AM & AE to their assigned merchants across their areas to see what happened on the ground as well as providing advance advice to them in increasing transactions over time.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b>&nbsp;</div><div><br></div><div>The Area Sales Manager (ASM) will work within the direct command of the Area Head and matrix collaboratively with the region sales team on some projects. You will lead the Sales team consisting of the Account Manager (AM) &amp; Account Executive (AE) for the Surabaya &amp; Malang areas. ASM regularly visits AM &amp; AE to their assigned merchants across their areas to see what happened on the ground as well as providing advance advice to them in increasing transactions over time.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Surabaya","team":"-","allLocations":["Surabaya"]},"createdAt":1708941679861,"descriptionPlain":"About the Role \n\nArea Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!\n\n","description":"<div><b>About the Role</b>&nbsp;</div><div><br></div><div>Area Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!</div><div><br></div>","id":"e1eeec09-779c-48f5-a7f8-90ecf966dc4e","lists":[{"text":"What you will do","content":"<li>Design an overall merchant strategy (encompassing both hunting and farming motion) for the Area, followed by implementation and execution of the plan to ensure business objectives are achieved</li><li>Oversee and manage the performance of his/her team (consisting of at least AE &amp; AM), including:</li><div>- Review team performance and take corrective actions to achieve the target</div><div>- Cascade strategy from RSH &amp; Sales Strategy HQ to the team &amp; lead the execution for the Area</div><div>- Coach AE &amp; AM to Identify new sales opportunities within existing merchant accounts by up-selling and cross-selling existing products</div><div>- Support his/her team to problem-solve issues happening in their area, especially issues happening at critical merchants</div><div>- Regularly do coaching &amp; mentoring for the team members</div><li>Identify key/critical merchants in the Area and:</li><div>- Build and maintain relationships with these merchants</div><div>- Give additional support to the AE/AM managing the merchants to problem-solve issues experienced by these merchants</div><li>Work with relevant stakeholders in the region/area to ensure that sales strategies &amp; merchant activities are aligned with the overall regional and nationwide company objectives. This would include supporting the RCE team to translate consumer behavior, market insight, field situation, and market trends within the district to refine the overall region strategy.</li><li>Know when to escalate &amp; ask help from RSH for bigger issues</li>"},{"text":"What you will need","content":"<li>Bachelor's degree in any field (top tier University is preferable) and willing to relocate to Surabaya (if your residence is outside Surabaya)</li><li>At least 5 years of experience within mid-to-senior management function (FMCG, SMB Banking, and Telecom company)</li><li>Strong network and knowledge about the city</li><li>Excellence in bridging, developing and maintaining good relationships with key partners such as but not limited to local/regional government stakeholders, 3rd party partners, merchant associations, communities</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Strong leadership and interpersonal skills, experienced in managing a big team, as well as strong in people development and mentoring/coaching</li><li>Strong written &amp; communication skills, fluent in English and Bahasa Indonesia</li><li>Fact-based/number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Area Sales Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b>&nbsp;</div><div><br></div><div>Area Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nArea Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e1eeec09-779c-48f5-a7f8-90ecf966dc4e","applyUrl":"https://jobs.lever.co/GoToGroup/e1eeec09-779c-48f5-a7f8-90ecf966dc4e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","location":"Jakarta","team":"Indonesia Region - Region Jabodetabek","allLocations":["Jakarta"]},"createdAt":1690973911809,"descriptionPlain":"Area Senior Manager  position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. \n","description":"<div><span style=\"font-size: 10pt\">Area Senior Manager&nbsp; position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. </span></div>","id":"49a9ad58-4fe3-4f36-b823-2b828a98ba42","lists":[{"text":"What You Will Do","content":"<li>Accountable for topline (ie : transaction, revenue) and bottom line metrics (ie ; cost, profit) of <a href=\"http://Area.Fully\" class=\"postings-link\">Area.</a></li><li><a href=\"http://Area.Fully\" class=\"postings-link\">Fully</a> accountable to build, maintain and continuously improve business operations of the Area to ensure efficient operation and optimum supply reliability on a day-to-day basis</li><li>Accountable for gofood sales motion in the <a href=\"http://area.Design\" class=\"postings-link\">area.</a></li><li><a href=\"http://area.Design\" class=\"postings-link\">Design</a> and implement the localized marketing campaign&nbsp;Work closely with stakeholders &amp; leadership in Region Level to develop and execute market strategies</li><li>Takes full ownership of the city’s budget and target</li>"},{"text":"What You Will Need","content":"<li>Minimum 7 years experience with extensive exposure to Area operations with exposure to BTL Marketing</li><li>Has existing relationships or&nbsp; is able to bridge, develop and maintain good relationships with key partners, local/regional government stakeholders 3rd party partners, merchant associations, and communities (ie: Driver community)Strong in planning, leadership, managerial skill, result-driven,&nbsp; target-oriented with proven track records</li><li>Very fluent in numbers, excellent in analyzing data and using analytics to make decisions</li><li>Proficient in English &amp; Bahasa, strong communication &amp; interpersonal skills</li><li>Able to recruit top-notch talent team, nurture &amp; mentor them</li><li>Having flexibility, willing to travel &amp; relocated to the overall region</li>"}],"text":"Area Senior Manager - Jabodetabek","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Area Senior Manager&nbsp; position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. </span></div>","descriptionBodyPlain":"Area Senior Manager  position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/49a9ad58-4fe3-4f36-b823-2b828a98ba42","applyUrl":"https://jobs.lever.co/GoToGroup/49a9ad58-4fe3-4f36-b823-2b828a98ba42/apply"},{"additionalPlain":"About The Team\n\nOur tax team, a division of the HoldCo CFO office, mainly professionals based in Indonesia, consists of several sub-divisions of tax functions working alongside the finance and business operations. We are predominantly concerned with ensuring all technical taxes have been appropriately followed and maintain a high level of compliance. If you are passionate about tax and finance, whilst looking for a fun dynamic environment, then we are your people!  \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>About The Team</div><div><br></div><div><span style=\"font-size: 10pt\">Our tax team, a division of the HoldCo CFO office, mainly professionals based in Indonesia, consists of several sub-divisions of tax functions working alongside the finance and business operations. We are predominantly concerned with ensuring all technical taxes have been appropriately followed and maintain a high level of compliance. If you are passionate about tax and finance, whilst looking for a fun dynamic environment, then we are your people!&nbsp;&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1697204557563,"descriptionPlain":"About The Team\n\nAs Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.\nThis role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment. \nThe candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.\n","description":"<div><b>About The Team</b></div><div><br></div><div>As Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.</div><div>This role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment.&nbsp;</div><div>The candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.</div>","id":"56966262-038f-497f-84c1-f360a9440c55","lists":[{"text":"What You Will Do","content":"<li>Manage tax compliance matters; including preparation of monthly and annual tax calculation/payment/returns, i.e. WHT, VAT, CIT)</li><li>Manage and advise day-to-day business initiatives including decisive actions toward dynamic business products</li><li>Manage and handle restructuring projects independently with supervision from the AVP of Tax</li><li>Able to communicate and align with relevant stakeholders within the group</li><li>Monitoring any tax regulation updates, identifying relevant business areas that may be impacted, and planning the risk mitigation strategy</li><li>Able to support the litigation process and assessment of risks</li><li>Able to support the advocacy initiatives within the relevant external organizations.</li>"},{"text":"What You Will Need","content":"<li>S1 Bachelor of Economics (majoring in accounting or corporate finance) or Bachelor of Social Finance (Majoring in Fiscal Administration) </li><li>Minimum 5 years of working experience in the taxation field</li><li>Strong interpersonal, analytical, communication, and presentation skills with advanced command of written and spoken English</li><li>Strong technical skills in tax, accounting, and corporate finance</li><li>Ability to work in a fast-paced, rapidly changing, and high-growth environment</li><li>Able to work independently and in a team</li>"}],"text":"Assistant Tax Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Team</b></div><div><br></div><div>As Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.</div><div>This role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment.&nbsp;</div><div>The candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.</div>","descriptionBodyPlain":"About The Team\n\nAs Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.\nThis role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment. \nThe candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/56966262-038f-497f-84c1-f360a9440c55","applyUrl":"https://jobs.lever.co/GoToGroup/56966262-038f-497f-84c1-f360a9440c55/apply"},{"additionalPlain":"About the Team\n\nOur team collective goal is to shape the convenience of managing money on our journey to provide financial inclusion for all businesses in Indonesian that resonates with trust and reliability. This role will be part of the Merchant Money Management team within GoTo Financial. We're a group of diverse skill sets, but we're united in our passion for developing innovative business strategies that drive real results. From crafting business solutions to analyzing merchant data, we're always up for a challenge and constantly pushing ourselves to learn and grow.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Our team collective goal is to shape the convenience of managing money on our journey to provide financial inclusion for all businesses in Indonesian that resonates with trust and reliability. This role will be part of the Merchant Money Management team within GoTo Financial. We're a group of diverse skill sets, but we're united in our passion for developing innovative business strategies that drive real results. From crafting business solutions to analyzing merchant data, we're always up for a challenge and constantly pushing ourselves to learn and grow.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1708493342702,"descriptionPlain":"About The Role\n\nWe are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.\n","description":"<div><b style=\"font-size: 18px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.</span></div>","id":"192f57ad-633c-4006-a0df-09f148bb5ece","lists":[{"text":"What You Will Do","content":"<li>Develop and execute a data-driven business strategy that aligns with the overall merchant platform business objectives</li><li>Identify, develop, implement, and refine merchants-focused needs by collaborating with the Product team to provide a tech-enabled solution with focus on merchant money management</li><li>Conduct merchant-focused market research to understand the merchant’s business and money lifecycle, and craft presentations for the overall business strategy</li><li>Build strategic relationships with our bank partners throughout the life cycle of our strategic collaboration</li><li>Always be on top of market and regulatory trends, as well as the competitive landscape in the fintech industry</li>"},{"text":"What You Will Need","content":"<li>A Bachelor’s / Masters or an equivalent degree</li><li>Should have at least have 4 year working experience, experience working in tech or financial service companies is a plus</li><li>Strong business sense and problem-solving skills</li><li>Strong project management skill to manage complex projects; also can manage and prioritize multiple internal and external stakeholders</li><li>Strong communication skills, collaborative spirit, delighted to work with other stakeholders&nbsp;</li><li>Strong analytical thinking and data analytics ability</li><li>Good knowledge of SQL is a plus</li>"}],"text":"Business Analytics Lead, Money Management - Merchant Services - #9690","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 18px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.</span></div>","descriptionBodyPlain":"About The Role\n\nWe are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/192f57ad-633c-4006-a0df-09f148bb5ece","applyUrl":"https://jobs.lever.co/GoToGroup/192f57ad-633c-4006-a0df-09f148bb5ece/apply"},{"additionalPlain":"About The Team\n\nJoin GoPay team, a hub of innovation and collaboration, to revolutionize everyday experiences at scale, while embracing a culture that values creativity and meaningful impact. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone has access to high quality financial services. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 14px\">Join GoPay team, a hub of innovation and collaboration, to revolutionize everyday experiences at scale, while embracing a culture that values creativity and meaningful impact. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone has access to high quality financial services. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713256664040,"descriptionPlain":"Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy & driver execution. Having prior experience in data query & data analysis will be considered highly relevant for this role. \n","description":"<div><span style=\"font-size: 16px\">Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy &amp; driver execution. Having prior experience in data query &amp; data analysis will be considered highly relevant for this role.&nbsp;</span></div>","id":"e7e1c1fc-08b0-4539-abf0-84b5685c319a","lists":[{"text":"What You Will Do","content":"<li>Utilize existing tools, such as SQL, etc. to gather data relevant for analysis</li><li>Develop and Implement a data-driven business strategy that aligns with the overall objectives</li><li>Analyze market trends, competitive landscape &amp; customer needs to identify opportunities for business expansion</li><li>Create, monitor and analyze business performance metrics to assess the effectiveness of strategies and drive continuous growth</li><li>Collaborate with the marketing, engineering and product teams to develop integrated strategies</li><li>Be on top of execution of product and business initiatives</li>"},{"text":"What This Role Needs","content":"<li>A Bachelor’s / Masters or an equivalent degree</li><li>Should have at least have 1 year working experience, experience working in tech or financial service companies is a plus</li><li>Strong business sense and problem-solving skills</li><li>Strong project management skill to manage complex projects; also can manage and prioritize multiple internal and external stakeholders</li><li>Strong communication skills, collaborative spirit, delighted to work with other stakeholders</li><li>Strong analytical thinking and data analytics ability</li><li>Good knowledge of SQL is a must</li>"}],"text":"Business Associate, Transfers - Consumer Payment - #9865","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy &amp; driver execution. Having prior experience in data query &amp; data analysis will be considered highly relevant for this role.&nbsp;</span></div>","descriptionBodyPlain":"Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy & driver execution. Having prior experience in data query & data analysis will be considered highly relevant for this role. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/e7e1c1fc-08b0-4539-abf0-84b5685c319a","applyUrl":"https://jobs.lever.co/GoToGroup/e7e1c1fc-08b0-4539-abf0-84b5685c319a/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716278898371,"descriptionPlain":"We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. \n","description":"<div><span style=\"font-size: 16px\">We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. </span></div>","id":"2242125a-7155-4353-bc79-473d237d6808","lists":[{"text":"What You WIll Do","content":"<li>Be the expert in using data to measure and analyze business performance.</li><li>Explore business issues/opportunities, uncover insights and/or identify targeted areas for business growth.</li><li>Lead new data analytics capability rollouts and/or data-led initiatives throughout organization.&nbsp;</li><li>Monitor key metrics and alert the business on potential issues.</li><li>Analyze operational efficiency and build business models to guide decision-making.</li><li>Design market/business intelligence reports and performance measurement dashboards to share with senior management.</li><li>Focus on data analysis, report generation, and supporting more senior team members in data-related tasks.</li><li>Primarily responsible for querying databases, preparing datasets, and creating basic visualizations.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree in a quantitative field such as Computer Science, Statistics, Mathematics, Economics, or related fields.</li><li>Strong analytical and problem-solving skills.</li><li>Proficiency in SQL for data extraction.</li><li>Familiarity with data visualization tools such as Tableau, Power BI, or Looker.</li><li>Familiarity with Excel and PPT.</li><li>Basic understanding of statistical methods and techniques.</li><li>Excellent communication skills to convey insights to non-technical stakeholders.</li><li>Ability to work in a fast-paced environment and handle multiple tasks simultaneously.</li><li>Previous internship or coursework in business intelligence or analytics is a plus.</li><li>Basic understanding of business models in the field.</li>"}],"text":"Business Intelligence Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. </span></div>","descriptionBodyPlain":"We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/2242125a-7155-4353-bc79-473d237d6808","applyUrl":"https://jobs.lever.co/GoToGroup/2242125a-7155-4353-bc79-473d237d6808/apply"},{"additionalPlain":"Mobility Marketing has 20 members divided into the online ride hailing and logistic marketing team. Full of diverse backgrounds and locations, we provide the nourishment to sustain our business from the inside out. Our main responsibility is to ensure that we defend our position and continue to grow in Vietnam. \nAs a CRM, we run all things related to customer engagement and retention across the entire Gojek App. We aim to generate incremental impact from every interaction between our users and the company. How do we ensure this, you ask? By relying heavily on experiments and A/B testing for continuous improvement. Additionally, we collaborate with the talented people over in the Product, Marketing, Research, BI, Growth, Analytics, and Creative teams on a daily basis to ensure the alignment of insights, strategy, and business objectives, and to deliver the best user experience possible.\n\nOne of our team's biggest obstacles has been understanding our customers' needs and preferences towards our various services and predicting their future behaviors for preventive actions rather than reactive ones. After many weeks of research, collaboration, and trial and error, we figured out that the best way to tackle this issue was to integrate data science and machine learning into our approach, supported by campaign management tools that enable a seamless journey setup. Currently, our team has been busy working on a project surrounding automation and personalization, whose purpose is to enhance our user experience by offering relevant communication to support the larger goal in increasing Gojek active users.\n\nAs a team, we’re concerned with the growth of the company, and each other’s personal growth and well-being, too; we enjoy bonding over our shared love of workout routines, books, movies and any other hobbies.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 9pt\">Mobility Marketing has 20 members divided into the online ride hailing and logistic marketing team. Full of diverse backgrounds and locations, we provide the nourishment to sustain our business from the inside out. Our main responsibility is to ensure that we defend our position and continue to grow in Vietnam.&nbsp;</span></div><div><span style=\"font-size: 9pt\">As a CRM, we run all things related to customer engagement and retention across the entire Gojek App. We aim to generate incremental impact from every interaction between our users and the company. How do we ensure this, you ask? By relying heavily on experiments and A/B testing for continuous improvement. Additionally, we collaborate with the talented people over in the Product, Marketing, Research, BI, Growth, Analytics, and Creative teams on a daily basis to ensure the alignment of insights, strategy, and business objectives, and to deliver the best user experience possible.</span></div><div><br></div><div><span style=\"font-size: 9pt\">One of our team's biggest obstacles has been understanding our customers' needs and preferences towards our various services and predicting their future behaviors for preventive actions rather than reactive ones. After many weeks of research, collaboration, and trial and error, we figured out that the best way to tackle this issue was to integrate data science and machine learning into our approach, supported by campaign management tools that enable a seamless journey setup. Currently, our team has been busy working on a project surrounding automation and personalization, whose purpose is to enhance our user experience by offering relevant communication to support the larger goal in increasing Gojek active users.</span></div><div><br></div><div><span style=\"font-size: 9pt\">As a team, we’re concerned with the growth of the company, and each other’s personal growth and well-being, too; we enjoy bonding over our shared love of workout routines, books, movies and any other hobbies.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Ho Chi Minh City","team":"-","allLocations":["Ho Chi Minh City"]},"createdAt":1715224196708,"descriptionPlain":"As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.\n","description":"<div><span style=\"font-size: 9pt\">As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.</span></div>","id":"59548879-6e27-4764-9378-85f7f2003a91","lists":[{"text":"What you will do","content":"<li>Implement marketing tactical campaigns via inbound (Shuffle Card, Inbox, Chatbot) and outbound channels (e.g. Email, Push Notification)</li><li>Implement lifecycle automation programs via inbound (Shuffle Card, Inbox, Chatbot) and outbound channels (e.g. Email, Push Notification)</li><li>Launch/deployment is conducted in an efficient, timely, and high quality manner</li><li>Manage the creation and updating of emails, push notifications, landing pages, forms, and reports for campaigns and webpages</li><li>Develop communication templates for consistency and effectiveness in accordance with branding guidelines and best practices</li><div><br></div>"},{"text":"What you will need","content":"<li>A BS/MS in Engineering, Computer Science, Business, Marketing, or equivalent experience</li><li>At least 1 years of CRM marketing experience, preferably within the online mobile app, e-commerce, quick commerce, e-grocery,&nbsp; telecommunications, airlines, or other relevant service industry</li><li>Proficiency in launching CRM campaign/customer journey implementation and experimentation through advanced CRM tools (e.g. Braze, Leanplum, Clevertap, SalesForce)</li><li>Good knowledge of HTML/CSS, scripting, and SQL will be a plus</li><li>Strong analytical and quantitative skills; ability to use hard data and metrics to back up assumptions, recommendations, and drive actions (e.g. Strong knowledge of conducting experimentation and A/B testing)</li><li>Excellent written &amp; verbal communication in English and Vietnamese at the business level with strong presentation skills in order to represent the Marketing team in functional meetings</li><li>Ability to work effectively within a high-pressure environment where prioritization is essential</li><div><br></div>"}],"text":"CRM Executive - Vietnam","country":"VN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.</span></div>","descriptionBodyPlain":"As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/59548879-6e27-4764-9378-85f7f2003a91","applyUrl":"https://jobs.lever.co/GoToGroup/59548879-6e27-4764-9378-85f7f2003a91/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"HoldCo - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716264696268,"descriptionPlain":"\n","description":"<div><br></div>","id":"6d8ebb73-2348-423d-847e-b8a8408ac1ed","lists":[{"text":"What You Will Do","content":"<li>Gather business requirements to support BI projects.</li><li>Explore existing and new data sources and facilitate the integration to the Data Warehouse.</li><li>Design and develop Data Quality Framework across Data Platform.</li><li>Design, implement Data Model for enterprise data warehouse.</li><li>Classifying data based Data Governance policy and Data Access Framework.</li><li>Develop data definition and metrics and maintain the consistency across Data team.</li><li>Modify existing structured and unstructured data integration solutions for rapidly evolving business needs.</li><li>Collaborate with a cross-functional team to resolve data quality and operational issues.</li><li>Create conceptual models and data flow diagrams.</li><li>Participate with end users to gather requirements and consult on data integration solutions.</li><li>Receive and adhere to project delivery deadlines.&nbsp;&nbsp;</li><li>Migrate code across environments and leverage a source code management system.</li><li>Develop and maintain proper documentation for data pipeline and service.</li>"},{"text":"What you will need ","content":"<li>Bachelor's or Master's degree in Computer Science, Engineering, Information Systems, or related fields.</li><li>2-5 years of experience in data engineering, software engineering, or a similar role.</li><li>Proficiency in programming languages such as Python, Java, or Scala.</li><li>Solid understanding of SQL, database management systems, and data modeling concepts.</li><li>Experience with big data technologies such as Hadoop, Spark, or Kafka.</li><li>Hands-on experience with cloud platforms such as AWS, Azure, or Google Cloud Platform.</li><li>Strong problem-solving skills and attention to detail.</li><li>Ability to design and implement scalable data pipelines and ETL processes.</li><li>Excellent communication and collaboration skills to work effectively with cross-functional teams.</li><li>Deeper understanding of data engineering concept, programming language, and big data technology.</li>"}],"text":"Data Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><br></div>","descriptionBodyPlain":"\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6d8ebb73-2348-423d-847e-b8a8408ac1ed","applyUrl":"https://jobs.lever.co/GoToGroup/6d8ebb73-2348-423d-847e-b8a8408ac1ed/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"HoldCo - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716265340466,"description":"","descriptionPlain":"","id":"36d71dff-c9ac-44b8-b870-f74d941bd7d3","lists":[{"text":"What You Will Do","content":"<li>Design and implement complex data solutions, architecting data systems, and driving technical initiatives.</li><li>Optimize data infrastructure for performance, scalability, and reliability - working with large-scale data volumes &amp; distributed systems.</li><li>Modify existing structured and unstructured data integration solutions for rapidly evolving business needs.</li><li>Collaborate with a cross-functional team to resolve data quality and operational issues, as&nbsp; well as delivering solutions to meet business needs.</li><li>Participate with end users to gather requirements and consult on data integration solutions.</li><li>Design, build, and optimize data pipelines, ETL processes, and data infrastructure in the field.</li><li>Provide technical guidance and support to ensure the successful delivery of data projects, including troubleshooting and resolving technical challenges.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's or Master's degree in Computer Science, Engineering, Information Systems, or related fields.</li><li>5+ years of experience in data engineering, software engineering, or a similar role.</li><li>Expertise in programming languages such as Python, Java, or Scala.</li><li>Advanced knowledge of SQL, database management systems, and data warehousing concepts.</li><li>Extensive experience with big data technologies and distributed systems.</li><li>Proven track record of designing and implementing complex data pipelines and ETL processes.</li><li>Deep understanding of cloud-based data technologies and best practices.</li><li>Leadership abilities to mentor junior team members and lead technical initiatives.</li><li>Strong problem-solving and troubleshooting skills.</li><li>Ability to communicate technical concepts effectively to both technical and non-technical stakeholders.</li>"}],"text":"Data Engineer Lead","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/36d71dff-c9ac-44b8-b870-f74d941bd7d3","applyUrl":"https://jobs.lever.co/GoToGroup/36d71dff-c9ac-44b8-b870-f74d941bd7d3/apply"},{"additionalPlain":"About the team \nThe GoTo DPPO Team focuses on ensuring compliance with prevailing personal data protection laws and regulations along with best practices in protecting the personal data and privacy of individuals in the GoTo ecosystem. The team comprises personnel from various backgrounds (legal, IT/technical, risk and control, etc.) and promotes open communication and strong collaboration. Team members are held accountable for their tasks and are empowered to make changes to make things better.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 10pt\">About the team</b><span style=\"font-size: 10pt\">&nbsp;</span></div><div><span style=\"font-size: 10pt\">The GoTo DPPO Team focuses on ensuring compliance with prevailing personal data protection laws and regulations along with best practices in protecting the personal data and privacy of individuals in the GoTo ecosystem. The team comprises personnel from various backgrounds (legal, IT/technical, risk and control, etc.) and promotes open communication and strong collaboration. Team members are held accountable for their tasks and are empowered to make changes to make things better.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Security","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1685434808527,"descriptionPlain":"About the Role\nWorking as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.\n","description":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.</span></div>","id":"fa9b44db-1ec0-4856-873f-afe6dfcb9d22","lists":[{"text":"What you will do","content":"<li>Be the first point of contact for NakaTroops (ODS and eCommerce) for any data protection and privacy related matters.</li><li>Assess new projects/initiatives to identify any privacy risks and provide recommendations on required privacy measures to be incorporated into products and services to maintain user’s privacy.</li><li>Assists with remediation of data protection and privacy control deficiencies.</li><li>Collaborate with various teams in the organization, including business, product and engineering</li>"},{"text":"What you will need","content":"<li>Sound knowledge of personal data protection laws and regulations. At the very minimum, familiarity with Indonesia's UU Pelindungan Data Pribadi.&nbsp;</li><li>Proficient in both English and Bahasa (written and spoken).</li><li>Experience in the area of data protection and privacy is highly desirable.</li><li>Related certifications are also an advantage: CIPM, CIPP, CIPT</li><li>Good communication skills as the role requires interaction with various stakeholders.</li><li>Highly motivated to learn and develop, able to work in a fast-paced environment.</li>"}],"text":"Data Protection & Privacy Office","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt;\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.</span></div>","descriptionBodyPlain":"About the Role\nWorking as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/fa9b44db-1ec0-4856-873f-afe6dfcb9d22","applyUrl":"https://jobs.lever.co/GoToGroup/fa9b44db-1ec0-4856-873f-afe6dfcb9d22/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Security","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1687139215540,"descriptionPlain":"Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy\n","description":"<div><span style=\"font-size: 10pt\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy</span></div>","id":"481d69bc-7824-4c88-bc7c-c21902cbf131","lists":[{"text":"What will you do","content":"<li>Assist in building the Data Protection Framework based on the prevailing Personal Data Protection Laws &amp; Regulations for all GoTo Entities (this includes regulations from countries where GoTo entities operate)</li><li>Identifying the expected controls and processes that are required in order to be compliant to Personal Data Protection Laws &amp; Regulations</li><li>Monitor the rate of compliance of the various GoTo entities by performing active reviews and/or monitoring, identify any gaps and monitor remediation actions</li><li>Facilitate (supporting related teams in BUs) external audits and reviews that are related to Personal Data Protection (e.g. ISO 27701 audit)</li><li>Facilitate the handling of personal data incidents (reporting, response), if any.</li>"},{"text":"What you will need","content":"<li>Sound knowledge of personal data protection laws and regulations. At the very minimum, familiarity with Indonesia's UU Pelindungan Data Pribadi.&nbsp;</li><li>Proficient in both English and Bahasa (written and spoken).</li><li>Experience in risk &amp; control management (e.g. audit, enterprise risk management, operational risk management)</li><li>Experience in the area of data protection and privacy is highly desirable</li><li>Related certifications are also an advantage: CIPM, CIPP, CIPT</li><li>Good communication skills as the role requires interaction with various stakeholders</li><li>Highly motivated to learn and develop, able to work in a fast-paced environment.</li>"},{"text":"About the Team","content":"<li>The GoTo DPPO Team focuses on ensuring compliance with prevailing personal data protection laws and regulations along with best practices in protecting the personal data and privacy of individuals in the GoTo ecosystem. The team comprises personnel from various backgrounds (legal, IT/technical, risk and control, etc.) and promotes open communication and strong collaboration.</li><li>Team members are held accountable for their tasks and are empowered to make changes to make things better.</li>"}],"text":"Data Protection & Privacy Office - Strategy & Monitoring","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy</span></div>","descriptionBodyPlain":"Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy\n","hostedUrl":"https://jobs.lever.co/GoToGroup/481d69bc-7824-4c88-bc7c-c21902cbf131","applyUrl":"https://jobs.lever.co/GoToGroup/481d69bc-7824-4c88-bc7c-c21902cbf131/apply"},{"additionalPlain":"About the Team\n\nOur Data Warehouse team is one of the key teams to bring data into critical information and knowledge that can be used to make sound business resolutions. We are hardening the bridges by working closely with Product Engineers and Data Engineers to gather any new data point or capture data changes. And combining them by working closely with various and growing business teams to capture requirements and convert them into business impact.\n\nWe are a tight-knit group made up of culinarista, netflix enthusiasts, readers, and amateur gamers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Our Data Warehouse team is one of the key teams to bring data into critical information and knowledge that can be used to make sound business resolutions. We are hardening the bridges by working closely with Product Engineers and Data Engineers to gather any new data point or capture data changes. And combining them by working closely with various and growing business teams to capture requirements and convert them into business impact.</div><div><br></div><div>We are a tight-knit group made up of culinarista, netflix enthusiasts, readers, and amateur gamers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710917725702,"descriptionPlain":"About the Role\n\nAs a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.\n\nYour main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.\n\nBest yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>As a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.</div><div><br></div><div>Your main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.</div><div><br></div><div>Best yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.</div><div><br></div>","id":"6be8c0fe-d1e1-416f-8b8c-19d792255ff4","lists":[{"text":"What You Will Do","content":"<li>Handle End to End Data Pipelines from heterogeneous input to Data Warehouse, serving various multiple teams for analytical purposes</li><li>Develop scalable automation/script to handle growing data warehouse tasks</li><li>Become a data architect by implementing Data Modeling concepts and data governance policies based on data type and use case</li><li>Diagnose and solve data issues in our data pipelines look for the root cause of problems and envision a long-term solution</li><li>Responsible for managing a reliable Single Version of Truth and turning Data into critical information and knowledge that can be used to make sound business resolutions</li><li>Work closely with the data stakeholders to come up with a working data solution and accommodate their data needs</li><li>Define clear and well-scoped requirements documents, including specs and workflows, that are easily understood by technical and non-technical audiences</li><li>Consult with product and data engineers to ensure the developed data solutions match the business needs</li>"},{"text":"What You Will Need ","content":"<li>At least 2-3 years of experience in a Data Environment as a Data Warehouse Developer or Data Engineer</li><li>Deep knowledge related to Data Warehouse concepts, architecture, and data modeling</li><li>Advanced level SQL (Query, CRUD operation). Experience in cloud data warehouses (BigQuery, Redshift) is a plus</li><li>Enjoy writing code to solve any data problems, preferably in Python, and experience in Java and Go experiences is a plus</li><li>Experience in a range of ETL systems (Apache Airflow, Debezium, etc)</li><li>Basic knowledge in real-time data processing. Experience in Apache Kafka, and Apache Flink is a plus</li><li>Basic knowledge of containerization (Docker) and CI/CD (Gitlab CI)</li><li>Analytical and data-driven, you love digging into the data to know what’s happening and define &amp; measure success on every project</li>"}],"text":"Data Warehouse Engineer - Payments Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.</div><div><br></div><div>Your main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.</div><div><br></div><div>Best yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.</div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.\n\nYour main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.\n\nBest yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6be8c0fe-d1e1-416f-8b8c-19d792255ff4","applyUrl":"https://jobs.lever.co/GoToGroup/6be8c0fe-d1e1-416f-8b8c-19d792255ff4/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710749746948,"description":"","descriptionPlain":"","id":"abeeede5-8126-4e1d-b4e4-c5b4afbff43c","lists":[{"text":"What you will do","content":"<li>Devise and implement tailored digital marketing strategies to shape the Gojek brand and drive user acquisition and growth</li><li>Analyze market trends to identify growth opportunities and refine strategies accordingly</li><li>Collaborate cross-functionally to ensure alignment with business goals</li><li>Monitor and evaluate campaign performance to drive optimization</li><li>Stay updated on industry trends and technologies to drive innovation</li><li>Manage relationships with external partners and agencies to support initiatives</li><li>Contribute to overarching marketing strategies and brainstorming sessions.</li>"},{"text":"What you will need","content":"<li>3+ years of digital marketing experience</li><li>Proficiency in digital marketing tools and platforms</li><li>Strong analytical, communication, and problem-solving skills</li><li>Bachelor's degree in Marketing, Communications, or related field</li><li>Fluency in English, (with Vietnamese proficiency a plus).</li>"}],"text":"Digital Performance Marketing Specialist Gojek","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/abeeede5-8126-4e1d-b4e4-c5b4afbff43c","applyUrl":"https://jobs.lever.co/GoToGroup/abeeede5-8126-4e1d-b4e4-c5b4afbff43c/apply"},{"additional":"","additionalPlain":"","categories":{"department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716604187900,"description":"","descriptionPlain":"","id":"471c9704-cd3d-4cc3-9ddb-36f64cfa787b","lists":[{"text":"What you will do:","content":"<li>Facilitate clear communication with stakeholders to understand project requirements and expectations.</li><li>Utilize data-driven approaches to identify, analyze, and resolve complex business challenges.</li><li>Translate ambiguous problem statements into well-defined analytical questions and hypotheses.</li><li>Independently design and implement analytical frameworks to address business needs and drive improvements.</li><li>Implement scalable monitoring solutions that require a very minimum manual intervention while ensuring data accuracy and reliability</li>"},{"text":"What you will need:","content":"<li>Strong project management skills to balance the statistical &amp; long term strategies and tactical needs from regional team in achieving the targets</li><li>Superb business sense to transform an ambiguous business or product problem into a well-scoped and impactful analysis&nbsp;</li><li>Ability to independently select and implement the correct statistical test to answer business questions.</li><li>Solid experience in handling analytical using SQL, including both DDL and DML.</li><li>Experienced with job schedulers tools like Airflow or DBT.</li><li>Ability to code for data analysis in Python, R, or similar languages is advantageous.</li>"}],"text":"Driver Strategy Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/471c9704-cd3d-4cc3-9ddb-36f64cfa787b","applyUrl":"https://jobs.lever.co/GoToGroup/471c9704-cd3d-4cc3-9ddb-36f64cfa787b/apply"},{"additionalPlain":"About Us\n\nWe are a team of developers and product managers with diverse academic, professional and personal backgrounds but united by the passion to enrich Data Platform & Analytics at Gojek through sound methods and ease of use. Working alongside the Product Managers, BI Analytics and Product Engineers, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions. \n\nThis includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.\n\nAlong with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About Us</b></div><div><br></div><div><span style=\"font-size: 16px\">We are a team of developers and product managers with diverse academic, professional and personal backgrounds but united by the passion to enrich Data Platform &amp; Analytics at Gojek through sound methods and ease of use. Working alongside the Product Managers, BI Analytics and Product Engineers, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">This includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.</span></div><div><br></div><div><span style=\"font-size: 16px\">Along with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1714628452648,"descriptionPlain":"About the Role\n\nAs Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.    \n \nYou will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.\n\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style=\"font-size: 16px\">&nbsp;</span></div><div><span style=\"font-size: 16px\">You will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.</span></div><div><br></div>","id":"dfe98505-36d8-4467-aa36-df8599ab69d8","lists":[{"text":"What You Will Do","content":"<li>Assess and manage team performance through staff meetings, one on ones, and quarterly assessments</li><li>Mentor your engineers to ensure their growth and engagement in the team, evaluate team workload and develop a staffing plan, and assign projects and balance workload to ensure continuous delivery and higher predictability</li><li>Serve as primary interface to staffing team, creating job descriptions, identifying sources for candidates, conducting interviews and shepherding candidates through the process</li><li>Lead a team of Software Engineers focused on improving velocity and impact across Gojek’s diverse project areas and platforms</li><li>Become a partner to Product Managers on deciding vision, strategy and OKRs</li><li>Provide technical expertise throughout the product life cycle including design, implementation, and delivery of scalable build/test/release infrastructure</li>"},{"text":"What You Will Need","content":"<li>Having at least 8 years of relevant software development experience preferably with experience in data products, also at least 2 years of leading and mentoring an engineering team to success</li><li>Ability to understand and implement Continuous Integration and Continuous Delivery</li><li>Well versed with Agile methodologies, TDD and Test Engineering, and Automation</li><li>Ability to plan, prioritize, estimate and execute releases with a good degree of predictability</li><li>Ability to scope, review and refine user stories for technical completeness and to alleviate dependency risks</li><li>Ability to review the code and ensure code maintainability as part of new product enhancements.</li>"},{"text":"Bonus Points If","content":"<li>Understanding in data modeling for data warehouse, relational database, and non-relational database</li><li>Understanding in batch and stream data pipeline; Beam, Flink, Spark</li>"}],"text":"Engineering Manager - Data Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style=\"font-size: 16px;\">&nbsp;</span></div><div><span style=\"font-size: 16px;\">You will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.</span></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.    \n \nYou will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/dfe98505-36d8-4467-aa36-df8599ab69d8","applyUrl":"https://jobs.lever.co/GoToGroup/dfe98505-36d8-4467-aa36-df8599ab69d8/apply"},{"additionalPlain":"About the Team\n\nThe Marketplace Product Development team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace. We are responsible for the pillars of technology, science, and strategy across the supply and demand. More specifically, we optimally match customer orders across Gojek (Food, Transport, etc.) with the right driver partners at the right time and location. We are the brains of Gojek's on-demand nature, matching millions of orders a day. This supply and demand matching is the core problem that our Product Team tackles every day, designing products and services that solve this ever-evolving challenge. The efficiency of our matching technology directly impacts customer and driver-partner experience, as well as the unit economics of the platform.\n \nSome of the key problem statements that our team works on are: how to intelligently pair driver partners to customers to provide the quickest pickup times, how to make our service more affordable by pairing demand on overlapping routes, and how to fairly distribute customer orders across our driver base, just to name a few. \n \nCombating remote work has brought us even closer, with frequent catch-ups over tea and sharing ways we have been keeping ourselves sane. Along with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Marketplace Product Development team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace. We are responsible for the pillars of technology, science, and strategy across the supply and demand. More specifically, we optimally match customer orders across Gojek (Food, Transport, etc.) with the right driver partners at the right time and location. We are the brains of Gojek's on-demand nature, matching millions of orders a day. This supply and demand matching is the core problem that our Product Team tackles every day, designing products and services that solve this ever-evolving challenge. The efficiency of our matching technology directly impacts customer and driver-partner experience, as well as the unit economics of the platform.</div><div>&nbsp;</div><div>Some of the key problem statements that our team works on are: how to intelligently pair driver partners to customers to provide the quickest pickup times, how to make our service more affordable by pairing demand on overlapping routes, and how to fairly distribute customer orders across our driver base, just to name a few.&nbsp;</div><div>&nbsp;</div><div>Combating remote work has brought us even closer, with frequent catch-ups over tea and sharing ways we have been keeping ourselves sane. Along with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715062480243,"descriptionPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility & reliability to enable more business opportunities. \nEngineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. \n\nAs an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility &amp; reliability to enable more business opportunities.&nbsp;</div><div>Engineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. </div><div><br></div><div>As an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.</div><div><br></div><div><br></div>","id":"1098f20b-5c61-4b52-ac12-0c7d065e80db","lists":[{"text":"What you will do","content":"<li>Drives business strategy along with cross-functional counterparts &amp; works with team members to convert that into OKRs</li><li>Work closely with your counterparts to ensure that the team’s deliverables fit well into broader organization objectives</li><li>Represent and accountable for the technical output of the team and drive to improve specific business KPI</li><li>Ensures that knowledge is shared amongst the team and does not position themselves or others as a single point of failure</li><li>Crosses team and service boundaries to work across budgeting, legal, compliance, and security aspects of the team’s delivery</li><li>Monitors and adjusts team pace to instill urgency for success but protect from burnout.</li><li>Responsible for coaching, development, and career management for the team</li><li>Independently plans and executes changes to team staffing in service of company goals: identifying gaps, defining roles, and creating people-planning for the team.</li>"},{"text":"What Will You Need","content":"<li>Engineers typically acquire the skills, knowledge, and experience necessary to meet the expectations of this role with at least 10 years of relevant industry experience.</li><li>Track record of leading multidisciplinary teams. (dev / test / pm / data)Has demonstrated ability to successfully lead people, people managers, teams or projects multiple times in different contexts.</li><li>Well-versed with Agile methodologies, best practices of writing tests and Continuous Integration / Continuous Delivery.</li><li>Has strong expertise and hands-on experience in at least one engineering focus (front-end, back-end, mobile, data or systems)</li><li>Experience developing end-to-end products that leverage machine learning at scaleTrack record in building a team of talented engineers.&nbsp;</li><li>Excellent written &amp; verbal communication skills focused on improving collaboration, understanding &amp; information exchange across all stakeholders.</li>"}],"text":"Engineering Manager - Marketplace","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility &amp; reliability to enable more business opportunities.&nbsp;</div><div>Engineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. </div><div><br></div><div>As an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility & reliability to enable more business opportunities. \nEngineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. \n\nAs an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/1098f20b-5c61-4b52-ac12-0c7d065e80db","applyUrl":"https://jobs.lever.co/GoToGroup/1098f20b-5c61-4b52-ac12-0c7d065e80db/apply"},{"additionalPlain":"About The Team\n\nWorking in a team for an online groceries business is like conducting a symphony orchestra. Each member plays a crucial role, contributing their expertise to create a harmonious and efficient operation.\n\nIn this symphony of teamwork, each department relies on the others to create a seamless and unforgettable performance. Just as a well-executed symphony leaves the audience feeling uplifted and satisfied, our collaborative efforts aim to delight our customers and leave them coming back for an encore.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Working in a team for an online groceries business is like conducting a symphony orchestra. Each member plays a crucial role, contributing their expertise to create a harmonious and efficient operation.</span></div><div><br></div><div><span style=\"font-size: 16px\">In this symphony of teamwork, each department relies on the others to create a seamless and unforgettable performance. Just as a well-executed symphony leaves the audience feeling uplifted and satisfied, our collaborative efforts aim to delight our customers and leave them coming back for an encore.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716254712180,"descriptionPlain":"We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.\n","description":"<div><span style=\"font-size: 16px\">We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.</span></div>","id":"07d2ca8f-3a58-4d41-9ffe-ed72e8835433","lists":[{"text":"What You Will Do","content":"<li>Be the primary stakeholders for all things finance-related and provide decision support and business intelligence for the Groceries Business.</li><li>Lead analysis including performance and profitability of SKUs by category, brand, and hub level, and hub operating efficiency metrics (variable costs), return on marketing investment on promotional and marketing activities.</li><li>Oversee and improve the accruals process for costs associated with revenue, promotional spend, and marketing spend.</li><li>Able to recommend/drive margin improvement and cost-saving initiatives and help to promote a culture of efficiencies and financial accountability</li><li>Support and manage annual budgeting and monthly rolling forecast for your assigned product by liaising with key business stakeholders for valuable input</li><li>Develop financial plans and models based on an in-depth understanding of business needs, with the objective of achieving growth and profitability targets</li><li>Support business strategies by providing financial analysis/developing financial models to evaluate ad-hoc projects/initiatives</li>"},{"text":"What This Role Needs","content":"<li>Degree level qualification in Finance/Business</li><li>5-years experience in Finance/Accounting, at least 3 years in an FPA role</li><li>Strong skills with analytics tools (Tableau/Power BI) and analyzing large datasets/SQL</li><li>Proficient in Office (Powerpoint, Excel, Word)</li><li>Prior working experience in a technology company is a plus</li><li>Strong communication and interpersonal skills</li><li>Able to manage multiple stakeholders across various levels of seniority</li><li>Able to work independently with high attention to details</li>"}],"text":"Finance Business Partner - Groceries - #10043","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.</span></div>","descriptionBodyPlain":"We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/07d2ca8f-3a58-4d41-9ffe-ed72e8835433","applyUrl":"https://jobs.lever.co/GoToGroup/07d2ca8f-3a58-4d41-9ffe-ed72e8835433/apply"},{"additionalPlain":"About The Team\n\nThe Financial  Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF-regulated entities, with OJK  as the regulator. As a Financial Services  Compliance team, we are obliged to ensure the adherence of business units to Financial Services  system regulations and at the same time to help ensure the business units are in a strategic position to execute all the business initiative. We are a close-knit team who love to solve problems, eat good food, and taking extra care for each other.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Financial&nbsp; Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF-regulated entities, with OJK&nbsp; as the regulator. As a Financial Services&nbsp; Compliance team, we are obliged to ensure the adherence of business units to Financial Services&nbsp; system regulations and at the same time to help ensure the business units are in a strategic position to execute all the business initiative. We are a close-knit team who love to solve problems, eat good food, and taking extra care for each other.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Legal & Compliance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713511797674,"descriptionPlain":"About The Role\n\nThe Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.\n","description":"<div><b>About The Role</b></div><div><br></div><div>The Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.</div>","id":"da40c805-1fbd-4228-8059-b7729041021e","lists":[{"text":"What You Will Do","content":"<li>Responsible to Compliance and Regulatory Affairs matters in GoTo Financial&nbsp; P2P operations, which includes but not limited to business/product reporting and approval process with the regulators, compliance advisory to business unit, as well as regulatory assessment</li><li>Make sure that compliance is part of the process excellence within Goto Financial’s financial services business line.&nbsp;</li><li>Maintain the latest update of financial services regulations and&nbsp; provide/disseminate assessment on such regulations to the internal&nbsp; units in GoTo Financial</li><li>Be the substantive PiC of GoTo Financial in any external engagements with OJK, other regulators, industry associations and other external stakeholders</li><li>Giving continued support on the creation, standardization and implementation of P2P Compliance, policies, terms &amp; conditions, internal working procedures and standard operational guidelines;</li><li>Any other ad-hoc duties that may be required.</li>"},{"text":"What You Will Need","content":"<li>Bachelor Degree in Law/ Economics/ Accounting/ Computer Science/ Engineer. Having a master’s degree would be an advantage.</li><li>Possess certifications in Risk Management/ IT Audit will be an advantage.</li><li>At least 5 years of mixed experience in the area of economic/ payments policy/ regulatory compliance and past working experience in Bank Indonesia/ Otoritas Jasa Keuangan will be an advantage.&nbsp;</li><li>Advanced level of spoken and written both in English and Indonesian language to, self-initiating as well as a team player who are putting the team best interest above individuals’ objective</li><li>Excellent analytical skills with the capacity of identifying all risks and proactively choosing the best solutions, sound judgment, and attention to details.</li><li>Ability to multitask and adapt to work in a fast-paced team environment.&nbsp;</li><li>Well-developed communication skills (including oral, written and interpersonal skills) and the ability to liaise and negotiate in a variety of contexts, include builds credibility and strong relationships with internal and external stakeholders and counterparts</li>"}],"text":"FinServ Compliance Manager - #9918","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.</div>","descriptionBodyPlain":"About The Role\n\nThe Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/da40c805-1fbd-4228-8059-b7729041021e","applyUrl":"https://jobs.lever.co/GoToGroup/da40c805-1fbd-4228-8059-b7729041021e/apply"},{"additionalPlain":"As part of our strategy team, you'll dive deep into complex challenges, utilizing impact-sizing and issue trees to dissect problem statements and unveil transformative solutions.\n\nOur team thrives on collaboration, engaging with diverse stakeholders to ensure our strategies are not only effective but empathetically tailored to meet other stakeholders’ needs\n\nYour voice matters.\n\nOur GoFood’s Food Affordable business team is based in Jakarta and plays a crucial role in scaling the company’s affordable service in our Gojek ecosystem. On a day-to-day basis, we try to empathize with our unique untapped segment’s pain points, then design and implement freshly new, yet impactful and scalable business solutions to have them onboard with our service. Thus, our main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">As part of our strategy team, you'll dive deep into complex challenges, utilizing impact-sizing and issue trees to dissect problem statements and unveil transformative <a href=\"http://solutions.Our\">solutions.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://solutions.Our\">Our</a> team thrives on collaboration, engaging with diverse stakeholders to ensure our strategies are not only effective but empathetically tailored to meet other stakeholders’ needs</span></div><div><br></div><div><span style=\"font-size: 10pt\">Your voice <a href=\"http://matters.Our\">matters.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://matters.Our\">Our</a> GoFood’s Food Affordable business team is based in Jakarta and plays a crucial role in scaling the company’s affordable service in our Gojek ecosystem. On a day-to-day basis, we try to empathize with our unique untapped segment’s pain points, then design and implement freshly new, yet impactful and scalable business solutions to have them onboard with our service. Thus, our main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do.&nbsp;</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709115137182,"descriptionPlain":"As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.\n\nFor example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin? \n- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance. \n- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.\n\n","description":"<div><span style=\"font-size: 10pt\">As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.</span></div><div><br></div><div><span style=\"font-size: 10pt\">For example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin?&nbsp;</span></div><div><span style=\"font-size: 10pt\">- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance.&nbsp;</span></div><div><span style=\"font-size: 10pt\">- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.</span></div><div><br></div>","id":"306b0f44-a6f1-4f43-ba05-6e35695d70f3","lists":[{"text":"What you will do? ","content":"<li>Analyze and execute GoFood’s Affordable Food initiatives, strategies, and implementation, with a primary focus on the lower SES users</li><li>Analyze various data points, design experiments and test scalable solutions to drive business and strategic decision-making on supply <a href=\"http://initiatives.Collaborate\">initiatives.</a></li><li><a href=\"http://initiatives.Collaborate\">Collaborate</a> with the Product Management, Operations, and Sales Team to ensure seamless implementation of all related <a href=\"http://initiatives.Analysis\">initiatives.</a></li><li><a href=\"http://initiatives.Analysis\">Analysis</a> on the competitive intelligence insights and <a href=\"http://findings.Be\">findings.</a></li><li><a href=\"http://findings.Be\">Be</a> a reliable individual for multiple health metrics and analysis.</li><div><br></div>"},{"text":"What you will need? ","content":"<li>Required:&nbsp;</li><div>- Experience and understanding of SQL</div><div>- English proficiency&nbsp;</div><li>A BS/MS in Business, Engineering, Computer Science, Mathematics, Economics, Statistics, or equivalent experience</li><li>2+ years of experience within one or more of the following fields: Strategy Consulting, Investment Banking, Accounting, or relevant industries</li><li>A proactive and team-player attitude</li><li>Create a structured way of problem solving with MECE issue trees and impact sizing</li><li>Comfortable manipulating large amounts of raw data with an obsession to detail and accuracy of data</li><li>Strong project management skills to manage complex projects and to prioritize and effectively collaborate with multiple internal and external stakeholders&nbsp;</li><div><br></div>"}],"text":"Food Affordable Strategy Data Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.</span></div><div><br></div><div><span style=\"font-size: 10pt;\">For example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin?&nbsp;</span></div><div><span style=\"font-size: 10pt;\">- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance.&nbsp;</span></div><div><span style=\"font-size: 10pt;\">- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.</span></div><div><br></div>","descriptionBodyPlain":"As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.\n\nFor example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin? \n- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance. \n- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/306b0f44-a6f1-4f43-ba05-6e35695d70f3","applyUrl":"https://jobs.lever.co/GoToGroup/306b0f44-a6f1-4f43-ba05-6e35695d70f3/apply"},{"additionalPlain":"About The Team\n\nBeing part of the ODS FP&A consolidation team, you will be responsible for regular business reporting, including the preparation of weekly / monthly performance reviews. The team is task orientated, with the focus on ensuring things get done and problems get solved. There will also be opportunities to work with various teams and learn from the organization. \n","additional":"<div><b>About The Team</b></div><div><br></div><div>Being part of the ODS FP&amp;A consolidation team, you will be responsible for regular business reporting, including the preparation of weekly / monthly performance reviews. The team is task orientated, with the focus on ensuring things get done and problems get solved. There will also be opportunities to work with various teams and learn from the organization.&nbsp;</div>","categories":{"commitment":"Permanent","department":"ODS - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716181186480,"descriptionPlain":"About The Role\n\nWe are seeking an FP&A (Financial Planning & Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.\n\nYou will be challenged to provide a clear overview and analysis of the entire ODS P&L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.\n","description":"<div><b>About The Role</b></div><div><br></div><div>We are seeking an FP&amp;A (Financial Planning &amp; Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.</div><div><br></div><div>You will be challenged to provide a clear overview and analysis of the entire ODS P&amp;L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&amp;A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.</div>","id":"111ec429-1fa8-43ef-a9bc-94ad60444ea9","lists":[{"text":"What You Will Do","content":"<li>Responsible for regular business reporting, including the preparation of weekly / monthly performance reviews. Key tasks include preparation of the presentation deck, including commentary and analysis, ensuring the respective Finance Business Partners (FBPs) provide their inputs into the preparation template</li><li>Develop and maintain any new ODS level reports that might be required by management</li><li>Developing and documenting new FP&amp;A processes and policies, as well as looking to improve existing processes</li><li>Working with various Product/Function FBPs to support Business Unit level analytics requirements</li><li>Ad hoc analytics as required to support management decision making</li><li>Budgeting and Forecasting: Support the annual budgeting process including any ad-hoc / quarterly revisions. Including but not limited to template preparation, briefing sessions, ensuring timelines are met and submission into the budget system.&nbsp;</li>"},{"text":"What You Will Need","content":"<li>Degree-level qualification in Accounting/ Business / Quantitative fields of study</li><li>3-5 years experience in Finance, preferably in FP&amp;A role for 1-3 years</li><li>Proficient in financial modeling, to be able to take a business requirement and build a financial model around it</li><li>Able to work independently with strong attention to detail</li><li>Able to communicate effectively with multiple stakeholders across various levels of seniority, both written and verbal</li><li>Able to translate business requirements into financial view and vice versa</li><li>Think critically and in a structured manner</li><li>Basic knowledge of data modeling, and experience with Google BigQuery is a big plus.</li>"}],"text":"FP&A - Consolidation Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are seeking an FP&amp;A (Financial Planning &amp; Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.</div><div><br></div><div>You will be challenged to provide a clear overview and analysis of the entire ODS P&amp;L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&amp;A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.</div>","descriptionBodyPlain":"About The Role\n\nWe are seeking an FP&A (Financial Planning & Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.\n\nYou will be challenged to provide a clear overview and analysis of the entire ODS P&L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/111ec429-1fa8-43ef-a9bc-94ad60444ea9","applyUrl":"https://jobs.lever.co/GoToGroup/111ec429-1fa8-43ef-a9bc-94ad60444ea9/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705377654170,"descriptionPlain":"About The Role\n\nAt GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.\n","description":"<div><b>About The Role</b></div><div><br></div><div>At GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.</div>","id":"a3543985-6d2c-45cf-84f7-312ec7efed36","lists":[{"text":"What Will You Do","content":"<li>Write and deploy code that's clear, concise, performant, tested, and easy to understand by other teams and engineers</li><li>Participate in design reviews and own feature development from end to end</li><li>Try improving engineering standards, tooling, and processes after understanding our needs without jumping straight into standard practices</li><li>Deep dive and debug production issues across services and levels of the stack when needed</li><li>Coordinate and communicate with different internal/external teams daily—stay in close communication with the product manager and team lead to execute the feature roadmap efficiently</li>"},{"text":"What Will You Need","content":"<li>5+ years experience building consumer/merchant products; hands-on experience in developing, testing, and deploying applications</li><li>Proficiency with one or more programming languages like Java, Go, and Kotlin.</li><li>Understanding of concepts like HTTP/GRPC, idempotency, concurrency, asynchronous programming, fault tolerance and monitoring, performance, feature flags</li><li>Understanding how mobile/web applications interact with back-end and other systems. Experience in building frontend UIs is a bonus</li><li>Good understanding of SQL/NoSQL databases</li><li>Experience with monitoring tools and a good understanding of their concepts</li><li>Have some experience with infrastructure-related tools and concepts such as Kubernetes, Kafka, RDS, GCP</li><li>Excellent verbal and written communication skills</li><div><br></div>"}],"text":"Full Stack Engineer - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.</div>","descriptionBodyPlain":"About The Role\n\nAt GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a3543985-6d2c-45cf-84f7-312ec7efed36","applyUrl":"https://jobs.lever.co/GoToGroup/a3543985-6d2c-45cf-84f7-312ec7efed36/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1712032361628,"descriptionPlain":"Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan.\nIn this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","description":"<div><span style=\"font-size: 10pt\">Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash </span><a href=\"http://Loan.In\" style=\"font-size: 10pt\" class=\"postings-link\">Loan.</a></div><div><a href=\"http://Loan.In\" style=\"font-size: 10pt\" class=\"postings-link\">In</a><span style=\"font-size: 10pt\"> this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","id":"424140f5-5064-4ce2-8c4d-2b7ecbb14d51","lists":[{"text":"What you will do","content":"<li>Define growth initiatives that will create significant impact on transaction volume and user base, while at the same time helping increase LTV and retention of ecommerce users</li><li>Work closely with Tokopedia fintech team to execute initiatives, review performance, and propose improvements, such as voucher mechanics and communication channels</li><li>Work with the Product team to develop Product roadmap that will improve acquisition, engagement and retention of users</li><li>Collaborate with the Consumer Lending business teams for cross selling users to other use cases beyond ecommerce with LTV as main goalEngage with Finance, Legal and Compliance on any new major initiatives to ensure OJK compliance</li>"},{"text":"What you will need","content":"<li>&nbsp;Previous experience in ecommerce platform is a bonus</li><li>Good understanding of ecommerce business and lending products; has ability to articulate how lending products fit into an ecommerce ecosystem and their relevant use cases</li><li>Excellent collaborative skill and stakeholder management; has ability to engage people from different functions, culture and organizationsA self-starter</li>"}],"text":"Gopay Later Growth Senior Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash </span><a href=\"http://Loan.In\" style=\"font-size: 10pt;\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">Loan.</a></div><div><a href=\"http://Loan.In\" style=\"font-size: 10pt;\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">In</a><span style=\"font-size: 10pt;\"> this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","descriptionBodyPlain":"Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan.\nIn this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/424140f5-5064-4ce2-8c4d-2b7ecbb14d51","applyUrl":"https://jobs.lever.co/GoToGroup/424140f5-5064-4ce2-8c4d-2b7ecbb14d51/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709283679281,"descriptionPlain":"As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","description":"<div><span style=\"font-size: 10pt\">As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","id":"e694228e-5468-4193-9301-7aa79d1f62a4","lists":[{"text":"What You Will Do","content":"<li>Define growth initiatives that will create significant impact on transaction volume and user base, while at the same time helping increase LTV and retention of e-commerce users</li><li>Work closely with Tokopedia fintech team to execute initiatives, review performance, and propose improvements, such as voucher mechanics and communication channels</li><li>Work with the Product team to develop Product roadmap that will improve acquisition, engagement and retention of users</li><li>Collaborate with the Consumer Lending business teams for cross selling users to other use cases beyond ecommerce with LTV as main goal</li><li>Engage with Finance, Legal and Compliance on any new major initiatives to ensure OJK compliance</li>"},{"text":"What You Will Need","content":"<li>Previous experience in e-commerce platform is a bonus</li><li>Good understanding of e-commerce business and lending products; has ability to articulate how lending products fit into an ecommerce ecosystem and their relevant use cases</li><li>Excellent collaborative skill and stakeholder management; has ability to engage people from different functions, culture and organizations</li><li>A self-starter</li>"}],"text":"Growth Lead - Consumer Lending (E-Commerce)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","descriptionBodyPlain":"As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e694228e-5468-4193-9301-7aa79d1f62a4","applyUrl":"https://jobs.lever.co/GoToGroup/e694228e-5468-4193-9301-7aa79d1f62a4/apply"},{"additionalPlain":"About the Team\n\nThe Financial Services stream at Gojek is passionate about empowering our users with the tools to be financially responsible. The Growth team is at the center of the business, where we help direct the product toward the right solutions by tackling the right problems through exploratory data analyses and rapid experimentation. Imagine a blend of data analysis, marketing, statistical testing, and product management; that sweet spot is where we're at. We're a team that's always willing to get our hands dirty, meaning we're responsible for analyzing, designing, and also executing because we believe that high impact comes from high accountability. If you're a data whiz who enjoys the collaborative nature of solving business problems, then you might be our person.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Financial Services stream at Gojek is passionate about empowering our users with the tools to be financially responsible. The Growth team is at the center of the business, where we help direct the product toward the right solutions by tackling the right problems through exploratory data analyses and rapid experimentation. Imagine a blend of data analysis, marketing, statistical testing, and product management; that sweet spot is where we're at. We're a team that's always willing to get our hands dirty, meaning we're responsible for analyzing, designing, and also executing because we believe that high impact comes from high accountability. If you're a data whiz who enjoys the collaborative nature of solving business problems, then you might be our person.</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705907656882,"descriptionPlain":"About the Role\n\nAs a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty & cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>As a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty &amp; cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.</div><div><br></div>","id":"ac34e3be-5747-4371-ad39-4b61d62302ce","lists":[{"text":"What You Will Do","content":"<li>Lead the Growth Analytics team and drive prioritization, strategy, and focus on solutions to solve user problems across platforms. You will be collaborating with the Marketing team on a daily basis</li><li>Maintain rigor in analytical excellence in terms of data analytics, A/B test design, and appropriate statistical tests across the products</li><li>Liaise with other analytical chapters within the Financial Services Platform as well as across Gojek such as Data Science, Data Engineering, Data Governance, Risk Analytics, etc, to ensure that initiatives are aligned and data integrity standards are adhered to</li><li>Discover growth opportunities in the product from funnel conversion rates and user experience by exploring transaction data, customer activity within apps, and actual customer insights</li><li>Analyze our complex and ever-growing data, present insights, and propose strategic options to senior management to drive business decisions</li><li>Test and validate solutions through a proper experimentation process.</li>"},{"text":"What You Will Need ","content":"<li>At least 3 years of working experience in an analytical role (data analyst / BI/data science/statistician, etc)</li><li>Strong SQL skills with expertise in either Excel/Python/R</li><li>Strong business acumen and analytical thinking. Comfortable to translate high-level business requirements into structured analytical steps</li><li>Experience in planning, designing, and executing experiments that can help business growth to increase upper funnel, customer retention, and cross-selling. Also comfortable working with frequentist statistics to analyze experiment results</li><li>Strong data viz and data storytelling skills</li><li>Strong project management skills to manage projects; able to work together with relevant units, also can manage and prioritize multiple internal stakeholders</li><li>Hustle is essential, moving quickly and executing to allow for continual iteration is a core competency of our team.</li>"}],"text":"Growth Lead - GoPay Later","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty &amp; cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.</div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty & cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ac34e3be-5747-4371-ad39-4b61d62302ce","applyUrl":"https://jobs.lever.co/GoToGroup/ac34e3be-5747-4371-ad39-4b61d62302ce/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713765081862,"descriptionPlain":"As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.\n","description":"<div><span style=\"font-size: 10.5pt\">As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.</span></div>","id":"761415aa-89b7-4ffb-a19b-2b91ac4243b4","lists":[{"text":"What You Will Do","content":"<li>Lead the strategy and growth function for GoModal. You will be collaborating with the Marketing &amp; Product teams on a daily basis.</li><li>Maintain rigor in analytical excellence in terms of data analytics, A/B test design, and appropriate statistical tests across the product funnel from acquisition, adoption, retention to monetization.</li><li>Discover growth opportunities in the product from funnel conversion rates and user experience by exploring transaction data, customer activity within apps and actual customer insights.</li><li>Analyze our complex and ever-growing data, present insights, and propose strategic options to management to drive business decisions.</li><li>Test and validate solutions through proper experimentation process.</li><li>Importantly, using data to identify growth opportunities and problem solve so as to achieve business goals with metrics such as conversion rates of WL to submit KYC, adoption rate &amp; GTV (disbursement)</li>"},{"text":"What You Will Need","content":"<li>BS in Statistics, Math, Computer Science, Engineering, Economics, Business, or equivalent experience</li><li>At least 4 years of working experience in a growth or product role (growth marketing, data analyst, BI, strategy, etc).</li><li>Strong project management skill to manage complex projects; also can manage and prioritize multiple internal and external stakeholders.</li><li>Strong business acumen and analytical thinking. Comfortable to translate high-level business requirements into structured analytical steps.</li><li>Experienced planning, designing, and executing experiments. Also comfortable working with frequentist statistics to analyze experiment results.</li><li>Strong data visualization and data storytelling skills.</li><li>Hustle is essential, moving quickly and executing to allow for continual iteration is a core competency of our team.</li><li>Preferred but not required: Strong SQL skills with expertise in either Excel/Python/R&nbsp;</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Growth Lead (Merchant Lending)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10.5pt;\">As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.</span></div>","descriptionBodyPlain":"As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/761415aa-89b7-4ffb-a19b-2b91ac4243b4","applyUrl":"https://jobs.lever.co/GoToGroup/761415aa-89b7-4ffb-a19b-2b91ac4243b4/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager and data Science to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager and data Science to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1708332929934,"descriptionPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?\n","description":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?</div>","id":"4362376c-4d70-43fb-85c4-3734fc6eeff5","lists":[{"text":"What You Will Do","content":"<li>Discover growth opportunities from the interaction of GoFood and its merchants through all of the metrics by running data analysis from Gojek’s vast data resources including business data, transaction data, customer activity within apps, and actual customer insights</li><li>Introduce beneficial business changes through well-written strategy document; validate the hypotheses through A/B test or other robust experimentation method</li><li>Operate the product solution and define the program to achieve business objectives by combining multiple initiatives (e.g. promotion program, incentive product, and discovery product )</li><li>Optimize and automate solutions by leveraging Data Sciences and Product Resources</li><li>Proactively improve the operation process in the team and act on how to drive a faster, effective, and efficient execution process through third-party tool or in-house service</li>"},{"text":"What You Will Need","content":"<li>BS/MS in Engineering, Computer Science, Math, Economics, Statistics, or equivalent experience</li><li>Minimum 3 years of working experience&nbsp;</li><li>Data analytics capability, have a good knowledge of SQL and experimentation processes; High Proficiency in Python and R is a plus</li><li>Strong business acumen with successful experience influencing and leading cross-functional teams</li><li>End-to-end problem-solving mindset that can work in increments and exponents</li><li>Radical Candor leadership while also being a strong team player; possessing team synergy skills with a high level of enthusiasm in collaborating in a cross-functional team and can also balance attention to detail with swift execution</li><li>Experience in Growth, Product Management, and Data team is a plus</li>"}],"text":"Growth Ops  - GoFood","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?</div>","descriptionBodyPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?\n","hostedUrl":"https://jobs.lever.co/GoToGroup/4362376c-4d70-43fb-85c4-3734fc6eeff5","applyUrl":"https://jobs.lever.co/GoToGroup/4362376c-4d70-43fb-85c4-3734fc6eeff5/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714985249008,"descriptionPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div><div><br></div><div><br></div>","id":"2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e","lists":[{"text":"What You Will Do","content":"<li>Discover growth opportunities from the interaction of GoFood and its merchants through all of the metrics by running data analysis from Gojek’s vast data resources including business data, transaction data, customer activity within apps, and actual customer insights</li><li>Introduce beneficial business changes through well-written strategy document; validate the hypotheses through A/B test or other robust experimentation method</li><li>Operate the product solution and define the program to achieve the business objectives by combining multiple initiatives (e.g. promotion program, incentive product, and discovery product )</li><li>Optimize and automate solutions by leveraging Data Sciences and Product resourcesProactively improve the operation process in the team and act on how to drive a faster, more effective, and efficient execution process through third-party tools or in-house service</li>"},{"text":"What You Will Need ","content":"<li>BS/MS in Engineering, Computer Science, Math, Economics, Statistics, or equivalent experience</li><li>Minimum 3 years of working experience&nbsp;</li><li>Data analytics capability, have a good knowledge of SQL and experimentation processes; High Proficiency in Python and R is a plus</li><li>Strong business acumen and project management skills with successful experience in collaborating with cross-functional teams</li><li>End to end the problem-solving mindset that can work in increments and exponents</li><li>Experience in Growth, Product Management, and Data team is a plus</li>"}],"text":"Growth Planning & Operation - GoFood","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e","applyUrl":"https://jobs.lever.co/GoToGroup/2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e/apply"},{"additionalPlain":"Our Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.\nWe, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 16px\">Our Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.</span></div><div><span style=\"font-size: 16px\">We, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1559365441969,"descriptionPlain":"We are looking for a Head of Engineering for the Transport team. \nAs part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. \nYou will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. \nYou should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. \nYour ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","description":"<div><span style=\"font-size: 16px\">We are looking for a Head of Engineering for the Transport team. </span></div><div><span style=\"font-size: 16px\">As part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. </span></div><div><span style=\"font-size: 16px\">You will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. </span></div><div><span style=\"font-size: 16px\">You should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. </span></div><div><span style=\"font-size: 16px\">Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","id":"d606bc58-6765-4017-a0c0-3e4bcf0aeb99","lists":[{"text":"Responsibilities","content":"<li>GO-JEK is looking for an experienced technologist with a passion &amp; understanding of technology to lead its transportation product. Transport is one of the flagship products in GOJEK superapp. It is launched in Indonesia, Singapore and Vietnam.</li><div><br></div><li>As Head of Engineering of Transport, you will partner with GOJEK VP, Senior VP of technology, Transport Head of Business, Group Product Manager and other business stakeholders in the company to formulate a business strategy for Transport. You will work closely with PMs and Tech Leads in Transport to realize this strategy to make GOJEK a dominant player in markets.</li><div><br></div><li>Strategic thinking and strong business acumen along with deep technical expertise are essential in this role. We expect you to be well-versed in current technological trends and familiar with a variety of business concepts. If you are also an excellent communicator and public speaker, we’d like to meet you.</li><div><br></div><div>What you will do</div><div><br></div><li>Design and develop highly scalable, highly available, reliable, secure and fault tolerant systems with minimal guidance for one of the world's fastest growing company in the transportation industry</li><li>Translate business requirements into scalable and extensible design</li><li>Setup growth paths for the team and engage them in processes and practices that shall help scale engineering</li><li>Collaborate with cross functional teams and stakeholders (Business, Product, Data, UX, Platform, Devops etc.) to unlock the next phase of business growth.</li><li>Provide technology leadership to the team and foster engineering excellence.</li><li>Research new technologies and tools that enable building simplistic architecture for the next generation of Gojek services</li>"},{"text":"Experience and Skills","content":"<li>Should have at least 9 years of hands-on experience in designing, developing, testing and deploying applications at scale.</li><li>Proficient in System Design, Design patterns, database structure, Linux/Unix. Experience with functional programming and infrastructure management is a plus.</li><li>Well versed with Agile methodologies, TDD and Test Engineering and Automation.</li><li>Experience as people manager and passionate towards building and growing a high functioning team.&nbsp;</li><li>Excellent understanding of interactive application development paradigm, memory management, performance/resource optimisations, database interactions, network programming, concurrency and multithreading, fault tolerance, monitoring, security and operability of systems</li><li>Ability to pick up new technologies and independently navigate obstacles and find innovative solutions.</li><li>Ability to seamlessly switch focus between tasks and enthusiasm for seeking out learning opportunities.</li><li>Ability to build strong relationships within and beyond the team, enhancing knowledge expansion and problem-solving efforts, while also nurturing the same through the exchange of constructive feedback.</li>"}],"text":"Head of Engineering - Transport","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">We are looking for a Head of Engineering for the Transport team. </span></div><div><span style=\"font-size: 16px;\">As part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. </span></div><div><span style=\"font-size: 16px;\">You will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. </span></div><div><span style=\"font-size: 16px;\">You should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. </span></div><div><span style=\"font-size: 16px;\">Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","descriptionBodyPlain":"We are looking for a Head of Engineering for the Transport team. \nAs part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. \nYou will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. \nYou should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. \nYour ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d606bc58-6765-4017-a0c0-3e4bcf0aeb99","applyUrl":"https://jobs.lever.co/GoToGroup/d606bc58-6765-4017-a0c0-3e4bcf0aeb99/apply"},{"additionalPlain":"About The Team\n\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 14px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives.&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705905810213,"descriptionPlain":"The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.\n\nThis position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.\n","description":"<div><span style=\"font-size: 14px\">The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.</span></div><div><br></div><div><span style=\"font-size: 14px\">This position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.</span></div>","id":"70493d8a-7d7f-4660-b1ed-c792d0d765be","lists":[{"text":"What You Will Do","content":"<li>Developing and implementing commercial strategies in line with company goals and objectives, with the aim to accelerate growth</li><li>Managing senior members of the Sales (enterprise merchants, SMB and very small merchants), by extension, their teams</li><li>Managing existing client relationships - understanding their requirements, ensuring their needs are met</li><li>Designing and implementing new sales and merchant acquisition strategies</li><li>Collaborating with and coordinating diverse teams (e.g. marketing, sales, customer service)</li><li>Negotiating ongoing contracts with merchants,; managing and reviewing contracts and making recommendations regarding commerciality</li><li>Monitoring performance of commercial activities using key metrics and reporting to senior management</li><li>Assisting with the setting, managing, and monitoring financial targets and budget development</li><li>Establishing and maintaining long-term, profitable partnerships with key stakeholders</li>"},{"text":"What This Role Needs","content":"<li>At least 15 years of working experience in the related field</li><li>Must have experience leading at least two of the three merchant segments (Ent/key accounts, SMB, Unmanaged/long tail)</li><li>Experienced in managing a huge team size</li><li>Good to have -&nbsp; have managed P&amp;L&nbsp;</li><li>Strong Problem Solving capabilities</li><li>Agile and willing to adapt to rapidly changing situations/environments</li><li>Ability to manage multiple complex and matrixed sales engagements whilst always positioning the products at the center of the engagement</li><li>Demonstrated ability to build and maintain strong relationships with merchants</li><li>High energy and engagement ethos, self starter , out of the box thinker, able to stay motivated</li><li>An ability to quickly grasp key experiences and device spec and formulate a sales technique to overcome any objections</li><li>Excellent communication skills - presentation, negotiation, and closingExcellent in contract and commercial negotiation process</li><li>Experience in payment industry is a plus</li>"}],"text":"Head of Sales - Midtrans - #9618","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 14px;\">The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.</span></div><div><br></div><div><span style=\"font-size: 14px;\">This position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.</span></div>","descriptionBodyPlain":"The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.\n\nThis position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/70493d8a-7d7f-4660-b1ed-c792d0d765be","applyUrl":"https://jobs.lever.co/GoToGroup/70493d8a-7d7f-4660-b1ed-c792d0d765be/apply"},{"additionalPlain":"About The Team\n\nThe Sales & Marketing team consistently strives to implement solutions that allow our merchant partners in Indonesia to sell products both online and offline. We also work to improve the merchant-partner experience through product innovation and integration with the rest of the Gojek ecosystem.\n\nOne of our main goals is to strengthen our market share in Indonesia, combining strategy with local insights to propel our business onward and upwards. Furthermore, we maintain a holistic view of GoTo Financial’s business and payment solutions within the region, constantly striving better to understand the sales region's issues from the ground up and provide solutions and actionable steps forward. Lastly, We ensure our platform is at the top of the minds of merchants while improving our merchant’s life and their experiences using our services.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 14px\">The Sales &amp; Marketing team consistently strives to implement solutions that allow our merchant partners in Indonesia to sell products both online and offline. We also work to improve the merchant-partner experience through product innovation and integration with the rest of the Gojek ecosystem.</span></div><div><br></div><div><span style=\"font-size: 14px\">One of our main goals is to strengthen our market share in Indonesia, combining strategy with local insights to propel our business onward and upwards. Furthermore, we maintain a holistic view of GoTo Financial’s business and payment solutions within the region, constantly striving better to understand the sales region's issues from the ground up and provide solutions and actionable steps forward. Lastly, We ensure our platform is at the top of the minds of merchants while improving our merchant’s life and their experiences using our services.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715061667066,"descriptionPlain":"Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","description":"<div><span style=\"font-size: 14px\">Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","id":"1b45618e-9fc6-4462-95c0-c89e99f739d4","lists":[{"text":"What You Will Do","content":"<li>Develop comprehensive sales strategies and oversee the end-to-end planning process to ensure optimal results while maintaining efficiency</li><li>Define Objectives and Key Results (OKRs), metrics, and targets for the sales team to drive performance and success</li><li>Design and implement incentive schemes, conduct end-to-end calculations and perform industry benchmarking to enhance sales effectiveness</li><li>Lead the go-to-market sales strategy for special projects and new products, aligning with partner needs and market demands</li><li>Utilize data-driven analysis to derive actionable insights, fostering accelerated growth and increased operational efficiency</li><li>Collaborate cross-functionally with sales, product, marketing, and other stakeholders to align strategies derived from data-driven analysis and execute plans effectively</li>"},{"text":"What This Role Needs","content":"<li>Minimum 5 years of relevant working experience in strategy, business development, management consulting, or other related roles that require strong analytical skills, problem-solving, and business acumen</li><li>A structured and analytical thinking process to develop frameworks, project charters, and prioritization</li><li>Strong business sense and ability to articulate complex analysis results to a wide range of audiences and translate the results into actionable business insights</li><li>Proficiency in basic modeling - market sizing, business projection, and scenario analysis</li><li>Good presentation skills, especially the ability to present during problem-solving sessions with other stakeholders (working-level or leadership), are essential</li><li>Solid track record of stakeholder management</li>"}],"text":"Head of Sales Strategy - Merchant Services - #9993","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 14px;\">Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","descriptionBodyPlain":"Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/1b45618e-9fc6-4462-95c0-c89e99f739d4","applyUrl":"https://jobs.lever.co/GoToGroup/1b45618e-9fc6-4462-95c0-c89e99f739d4/apply"},{"additionalPlain":"Joining GoTo Financial (GTF) means becoming an integral part of a collaborative and dynamic team culture that values transparency, innovation, and teamwork. As a member of the GTF IT Governance, Risk, and Compliance (IT GRC) team, you'll find yourself immersed in an environment where your contributions are not only recognized but celebrated. You'll work alongside dedicated professionals within the GTF Compliance team, sharing insights, expertise, and best practices to ensure that our IT operations meet regulatory standards and industry requirements. Reporting directly to one of GTF's Head of IT GRC, you'll have the opportunity to learn from seasoned leaders in the field while also contributing your own unique perspective. Together, we'll continue to push the boundaries of innovation and set new standards for IT governance, risk management, and compliance in the financial industry.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>Joining GoTo Financial (GTF) means becoming an integral part of a collaborative and dynamic team culture that values transparency, innovation, and teamwork. As a member of the GTF IT Governance, Risk, and Compliance (IT GRC) team, you'll find yourself immersed in an environment where your contributions are not only recognized but celebrated. You'll work alongside dedicated professionals within the GTF Compliance team, sharing insights, expertise, and best practices to ensure that our IT operations meet regulatory standards and industry requirements. Reporting directly to one of GTF's Head of IT GRC, you'll have the opportunity to learn from seasoned leaders in the field while also contributing your own unique perspective. Together, we'll continue to push the boundaries of innovation and set new standards for IT governance, risk management, and compliance in the financial industry.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713930486899,"descriptionPlain":"About The Role\n\nJoin our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. \n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Join our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. </span></div>","id":"36caef5f-7a1c-4326-80b4-8c146060ac70","lists":[{"text":"What You Will Do","content":"<li>Develop and maintaining IT policies, standards and procedures according to applicable internal and external requirements, including the applicable regulations in Indonesia an other countries where GTF operate;</li><li>Develop and maintain compliance, governance and risk-related IT and business process flow;</li><li>Coordinating with compliance team to ensure that every initiative, development and collaboration are comply with the standards and regulations (internal and external);</li><li>Conduct routine evaluation of policies and procedures implementation and ensure best practice risk mitigation and assessment functions are maintained to comply with the company's strategy;</li><li>Coordinate with related IT work units to follow up on data requests and internal audit findings, external audits and regulators;</li><li>Develop the process and conduct the activities to safekeep or archive of every IT development document in a regular basis;</li><li>Implementing a good governance organization using the ISO27001, ISO 27701, PCI DSS framework and other relevant Technology &amp; Security best practices;</li><li>Develop and implement the RBAC and least privilege of access management in the GTF technology stack</li><li>Act as a Subject Matter Expert to the stakeholders and provide relevant &amp; applicable consultation for addressing the IT GRC requirement in lending product &amp; services.&nbsp;</li>"},{"text":"What You Will Need","content":"<li>A minimum of 5 years experiences as Information Security, IT Governance, Risk and Compliance (IT GRC) or IT Auditors;</li><li>Demonstrate excellent communication and writing skills and proficient with English written and spoken</li><li>Experienced in developing and maintaining IT and/or information security policies and procedures;</li><li>Excellent knowledge in developing risk management and IT framework, BIA, BCP and BCM Framework</li><li>Experienced in report document development and delivery;</li><li>Experienced in dealing with regulatory audit to represent the organization IT GRC operations;</li><li>Having good knowledge with local and regional payment &amp;&nbsp; lending regulatory requirements and how they impact IT policies (having experience is preferred);</li><li>Having excellent experience with ISO 27001, ITIL. COBIT, and PCI-DSS standards;</li><li>One or more of the following or equivalent certifications preferred: CISA, CRISC, ITIL, COBIT is preferred</li>"}],"text":"IT GRC Senior Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Join our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. </span></div>","descriptionBodyPlain":"About The Role\n\nJoin our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/36caef5f-7a1c-4326-80b4-8c146060ac70","applyUrl":"https://jobs.lever.co/GoToGroup/36caef5f-7a1c-4326-80b4-8c146060ac70/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714985286126,"descriptionPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","id":"f77e2886-beb3-4cb1-a333-48376830053e","lists":[{"text":"What You Will Do","content":"<li>Discover growth opportunities from the interaction of GoFood and its merchants through all of the metrics by running data analysis from Gojek’s vast data resources including business data, transaction data, customer activity within apps and actual customer insights</li><li>Introduce beneficial business changes through well-written strategy document; validate the hypotheses through A/B test or other robust experimentation method</li><li>Operate the product solution and defines the program to achieve business objective by combining multiple initiatives (e.g. promotion program, incentive product, and discovery product )</li><li>Optimize and automate solutions by leveraging Data Sciences and Product resources</li><li>Proactively improve the operation process in the team and act on how to drive a faster, effective, and efficient execution process through third-party tool or in-house service</li>"},{"text":"What You Will Need","content":"<li>BS/MS in Engineering, Computer Science, Math, Economics, Statistics, or equivalent experience</li><li>Minimum 1 year of working experience&nbsp;</li><li>Data analytics capability, have a good knowledge of SQL and experimentation processes; High Proficiency in Python and R is a plus</li><li>End to end the problem-solving mindset that can work in increments and exponents</li><li>Radical Candor leadership while also being a strong team player; possessing team synergy skills with a high level of enthusiasm in collaborating in a cross-functional team and can also balance attention to detail with swift execution</li><li>Experience in Growth, Product Management, and Data team is a plus</li>"}],"text":"Jr. Manager of Ads Sales Assisted Growth Ops","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f77e2886-beb3-4cb1-a333-48376830053e","applyUrl":"https://jobs.lever.co/GoToGroup/f77e2886-beb3-4cb1-a333-48376830053e/apply"},{"additionalPlain":"About the team\n\nOur Tax team, a subsidiary of the Finance Accounting and Tax team, consists of around 22 people who are all based in Indonesia. Working alongside the Finance Operations, we are predominantly concerned with ensuring all tax regulations have been followed properly and maintaining that tax compliances are regulated. If you have any questions about finance, accounting, or tax, we are your people!\n\n","additional":"<div><b>About the team</b></div><div><br></div><div>Our Tax team, a subsidiary of the Finance Accounting and Tax team, consists of around 22 people who are all based in Indonesia. Working alongside the Finance Operations, we are predominantly concerned with ensuring all tax regulations have been followed properly and maintaining that tax compliances are regulated. If you have any questions about finance, accounting, or tax, we are your people!</div><div><br></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715657454177,"descriptionPlain":"About the Role\n\nAs our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>As our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.</div><div><br></div><div><br></div>","id":"33a32026-3986-42fb-9ddc-a45e1053c9e0","lists":[{"text":"What you will do","content":"<li>Maintain day-to-day tax compliance matters; including preparation of monthly and annual tax calculation/payment/returns, i.e. WHT, VAT, CIT)</li><li>Provide tactical solutions on main tax issues</li><li>Follow procedures and timelines to operate tax compliance matters</li><li>Provide support in the event of the tax audit, financial audit, due diligence, or any tax dispute process (e.g. collate the required data/documents for the said processes)</li><li>Ensure the application of tax treaty rate treatment for WHT purposes is valid, e.g. review and follow-up DGT Forms in relation to overseas vendors</li>"},{"text":"What you will need","content":"<li>Bachelor of Economics (majoring in Accounting or Management) or Bachelor of Social Science (majoring in Fiscal Administration) with a minimum GPA of <a href=\"http://3.00\">3.00</a> (<a href=\"http://4.00\">4.00</a> scale)</li><li>Oral &amp; written English skills (basic level)</li><li>Ability to work in a fast-paced, rapidly changing, and high-growth organization</li><li>Able to work well individually and as a team player</li>"}],"text":"Junior Tax Officer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/33a32026-3986-42fb-9ddc-a45e1053c9e0","applyUrl":"https://jobs.lever.co/GoToGroup/33a32026-3986-42fb-9ddc-a45e1053c9e0/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715584452832,"descriptionPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","description":"<div><b style=\"font-size: 16px\">About the team:</b></div><div><span style=\"font-size: 16px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","id":"d6ac496c-e0ad-4669-b594-ede9bf8d55f9","lists":[{"text":"What you will do:","content":"<li>Act as the lead point of contact for all account matters, anticipate the client’s needs, work within the company to ensure deadlines for the client are met, and help the client succeed,</li><li>Resolve account issues and complaints,</li><li>Plan and present reports on account progress, goals, and periodic initiatives to share with team leaders and peers on a regular basis,</li><li>Provide full visibility into the sales pipeline at every stage of engagement, and take the account into the next level by increasing Midtrans’ share in online payments,</li><li>Develop a strong understanding of the e-commerce and digital commerce market and be the first person that a client calls for escalation,</li><li>Work closely with the Partnership and Banking teams to ensure rapport and collaboration between partners and clients,</li><li>Responsible for administrative duties, such as preparing reports, preparing price quotes, maintaining and approving the entire agreements and forms.</li>"},{"text":"What you will need:","content":"<li>Bachelor’s degree in Business Management, Sales, Communication or related academic area,</li><li>A minimum of 3 years of experience in business management, sales, or project management is mandatory. </li><li>Prior experience in e-commerce and managing key accounts will be a plus point,</li><li>Fluency in both Bahasa and English is required,Able to multitask, prioritize, and manage time efficiently,</li><li>Ability to negotiate, persuade and influence others,</li><li>Excellent interpersonal, communication, presentation and analytical skills,</li><li>Proficient computer skills, and experience with CRM software and the Microsoft Office Suite, with emphasis on superior Excel skills,</li><li>Proven ability to maintain projects and maintain effective relations with accounts or partners.</li>"}],"text":"Key Account Manager #9874","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the team:</b></div><div><span style=\"font-size: 16px;\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","descriptionBodyPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/d6ac496c-e0ad-4669-b594-ede9bf8d55f9","applyUrl":"https://jobs.lever.co/GoToGroup/d6ac496c-e0ad-4669-b594-ede9bf8d55f9/apply"},{"additionalPlain":"About the Team \n\nThe Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team </b></div><div><br></div><div>The Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715066306660,"descriptionPlain":"About the Role \n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n","description":"<div><b>About the Role </b></div><div><br></div><div>As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</div>","id":"81fac6c8-76c8-4867-88c3-7aeb6f6d0c72","lists":[{"text":"What You Will Do ","content":"<li>Create from scratch or significantly Improve automation code structure and framework architecture in terms of maintainability, execution speed, review, and coverage</li><li>Writes, co-writes, and reviews test design/plan documentation&nbsp;</li><li>Drives the design/code review process for test automation, seeking and providing constructive feedback</li><li>Accountable for ensuring that their squad has strong sets of documentation and journals of how their test design and architecture/product evolves over time</li><li>Lead the effort of planning projects, split the complex initiatives into smaller tasks in both team and cross-team initiatives</li><li>Mentors other engineers on an individual basis and guide them with their career development</li><li>Actively participates in the hiring process for SDET candidates (by doing code reviews, meeting candidates, attending recruiting events)</li>"},{"text":"What You Will Need","content":"<li>8-10+ years experience in working with Web, Mobile, and API Testing in both manual &amp; automation testing, test methodologies, and principles</li><li>Well-versed with a programming language (preferably JAVA). Should be comfortable working on any of these Selenium, Cucumber BDD, Appium, RestAssured, SQL, TestNG, CI/CD pipelines, Postman , Mocking tools&nbsp;Experienced with tools such as Git, Jira , Maven/ Gradle &amp; Test case management tool&nbsp;</li><li>Solid analytical &amp; problem-solving skills and experience of working in an Agile environment</li><li>Great interpersonal and communication skills as needs to closely work with remote teams spread across multiple countries&nbsp;Understanding of working and Testing in a microservices environment&nbsp;</li><li>Knowledge of Performance Testing is a plus</li>"}],"text":"Lead SDET - Automation Engineering Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</div>","descriptionBodyPlain":"About the Role \n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/81fac6c8-76c8-4867-88c3-7aeb6f6d0c72","applyUrl":"https://jobs.lever.co/GoToGroup/81fac6c8-76c8-4867-88c3-7aeb6f6d0c72/apply"},{"additionalPlain":"About the Team :\n\nGoFood is a vertical in Gojek that helps customers to order food online from their choice of restaurants using customer apps and web platforms. On a day to day basis teams are involved in brainstorming and developing solutions for different optimisations that bring efficiency in the ecosystem making the Food Ordering journey smooth for our customers.\n\n\n","additional":"<div>About the Team :</div><div><br></div><div>GoFood is a vertical in Gojek that helps customers to order food online from their choice of restaurants using customer apps and web platforms. On a day to day basis teams are involved in brainstorming and developing solutions for different optimisations that bring efficiency in the ecosystem making the Food Ordering journey smooth for our customers.</div><div><br></div><div><br></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715763990572,"descriptionPlain":"About the role :\n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood team, you will be building experiences for GoFood's Users. \n\n\n\n","description":"<div>About the role :</div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood team, you will be building experiences for GoFood's Users.&nbsp;</div><div><br></div><div><br></div><div><br></div>","id":"b1f917e0-a9a0-4a3c-a4c3-505e41c1f034","lists":[{"text":"What You Will Do","content":"<li>Be responsible for the overall solution architecture of the products/services that you will be working on</li><li>Code, Design, prototype, perform reviews and consult in the process of building highly scalable, reliable, and fault-tolerant systems</li><li>As our senior technologist continuously refactor applications and architectures to maintain high-quality levels, be actively involved in formulating product roadmap and defining the OKRs of the team</li><li>Continue to stay abreast of the latest technologies in distributed systems, caching and research new technologies, tools that enable building the next generation systems</li><li>Act as an engineer that enjoys writing readable, concise, reusable, extensible code every day</li><li>Discuss, articulate requirements with product management and scope,&nbsp;</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 8 years of hands-on experience in designing, developing, testing, and deploying large scale applications, microservices in any language or stack (preferably golang)</li><li>At least 1 year of experience in leading a team of engineers</li><li>Good skill in design, development, testing and deploying applications on Golang or Erlang or Ruby or Java large-scale applications</li><li>Has an in-depth understanding of at least one programming language and framework</li><li>Excellent attitude and passion working in a team with willingness to learn</li><li>Able to collaborate well with multiple stakeholders in parallel to align &amp; unblock the team</li><li>Experience in building low latency, high volume REST API requests handling</li><li>Experience in working with relational databases (like postgres)</li><div><br></div>"}],"text":"Lead Software Engineer - Gofood","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>About the role :</div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood team, you will be building experiences for GoFood's Users.&nbsp;</div><div><br></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the role :\n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood team, you will be building experiences for GoFood's Users. \n\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/b1f917e0-a9a0-4a3c-a4c3-505e41c1f034","applyUrl":"https://jobs.lever.co/GoToGroup/b1f917e0-a9a0-4a3c-a4c3-505e41c1f034/apply"},{"additionalPlain":"About the Team \n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. \n\nAt the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company. \n\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team </b></div><div><br></div><div>We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. </div><div><br></div><div>At the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company.&nbsp;</div><div><br></div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1711535878605,"descriptionPlain":"About the Role \n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","id":"3ff4035e-6ad8-46c4-ac71-cf1fee12b49a","lists":[{"text":"What You Will Do","content":"<li>Build and manage a highly scalable, reliable and cost effective application infrastructure at Gojek, forming the backbone of our diverse distributed systems</li><li>Be a role model in technical excellence, helping Gojek engineers deliver top-quality applications without worrying about underlying infrastructure</li><li>Enhance code quality and product performance through continuous improvement and innovation</li><li>Collaborate and communicate effectively with teams across multiple geographies</li><li>Share your knowledge and expertise to strengthen teams knowledge of the platform so they can support themselves</li><li>Regularly refactor your work to maintain high-quality design and architecture following industry best practices</li><div><br></div>"},{"text":"What You Will Need","content":"<li>Atleast 7+ years of relevant experience . Hands on in any object oriented or functional programming language i.e. Java, Golang, Clojure, Python, Ruby etc building applications from scratch</li><li>Deep understanding of distributed systems fundamentals, large scale systems, observability stack, prometheus fundamentals, opentelemetry, container technologies, internet routing and load balancing</li><li>Experience in working with end to end Observability stack. Hands on experience in building and managing the telemetry pipeline at large scale</li><li>Experience in handling, scaling and optimizing high throughput systems</li><li>Prior experience with Grafana stack, Cortex, SLI/SLO platforms is a plus</li><li>Prior experience with AWS, GCP, Azure etc. is a plus</li><li>Deep knowledge of Linux as a production environment, container technologies. e.g. Docker</li><li>Working Experience with cluster orchestrators and schedulers (Kubernetes)</li><li>Experience with infrastructure automation tools like chef, ansible, helm</li><li>Have worked on production distributed systems and have an understanding of microservices architecture, RESTful services, CI/CD</li>"}],"text":"Lead Software Engineer - Observability team","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3ff4035e-6ad8-46c4-ac71-cf1fee12b49a","applyUrl":"https://jobs.lever.co/GoToGroup/3ff4035e-6ad8-46c4-ac71-cf1fee12b49a/apply"},{"additionalPlain":"About The Team\n\nOur GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. \n\nOur service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.\n\nAs a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Our service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.</span></div><div><br></div><div><span style=\"font-size: 10pt\">As a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710229189158,"descriptionPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 10pt\">You will take the wheel in building, operating, and maintaining our developer platform called </span><a href=\"http://GoPay.sh\" style=\"font-size: 10pt\" class=\"postings-link\">GoPay.sh</a><span style=\"font-size: 10pt\"> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</span></div>","id":"c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5","lists":[{"text":"What You Will Do","content":"<li>Translate our product’s goals into iterative MVPs, evaluate, and then refactor into a scalable and extensible design</li><li>Pair with team members on functional and nonfunctional requirements and spread design philosophy, goals, and improvements to code quality across the team</li><li>Design and develop highly scalable, highly available, reliable, secure, and fault-tolerant systems with minimal guidance</li><li>Collaborate with cross-functional teams (Product, DevOps, UX, Data Engineering, QA, etc) on planning and execution</li><li>Manage automated build/test/deployment environments</li><li>Continuously discover, evaluate, and implement new technologies to maximize development</li><li>Deploy, monitor, maintain, and fix products currently in production</li>"},{"text":"What You Will Need","content":"<li>At least 6+ years of relevant software development experience in designing, developing, testing, and deploying applications for large-scale applications</li><li>Deep understanding of Microservices (HTTP &amp; GRPC), and programming languages like Java, Golang, Ruby, and Clojure (and a willingness to learn others)</li><li>Experience with Spring Boot or Hibernate is a big plus</li><li>Experience with cryptography (PKI &amp; HSM) is a big plus</li><li>Experience with Postgresql, Kafka, Kubernetes, GCP &amp; DevOps: Gitlab CI, Terraform</li><li>Proficiency in OOP, SQL, and Design Patterns; experience with functional programming is a plus</li><li>Strong data modeling experience in Relational and NoSQL databases</li><li>Ability to implement Continuous Integration and Continuous Delivery; well-versed with Agile methodologies, TDD and Test Engineering and Automation</li><li>Ability to design and implement low-latency RESTful/GRPC services</li>"}],"text":"Lead Software Engineer - Payments Data Products & Infra","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 10pt;\">You will take the wheel in building, operating, and maintaining our developer platform called </span><a href=\"http://GoPay.sh\" style=\"font-size: 10pt;\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">GoPay.sh</a><span style=\"font-size: 10pt;\"> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</span></div>","descriptionBodyPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5","applyUrl":"https://jobs.lever.co/GoToGroup/c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5/apply"},{"additionalPlain":"About The Team\n\nOur Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.\n\nWe pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.</div><div><br></div><div>We pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Public Policy & Government Relations","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713944910535,"descriptionPlain":"About The Role\n\nThe individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges. \n","description":"<div><b>About The Role</b></div><div><br></div><div>The individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges.&nbsp;</div>","id":"cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5","lists":[{"text":"What You Will Do","content":"<li>Relationship Building: Proactively establish and strengthen relationships with government officials, nonprofit groups, and other key institutions across Indonesia and Southeast Asia.</li><li>Policy Development: Collaborate with multiple stakeholders to develop a strategic and actionable public policy plan that aligns with organizational goals.</li><li>Internal Coordination: Work closely with internal teams within GoTo’s group of companies to ensure cohesive strategy execution across various sectors.</li><li>Project Leadership: Lead multiple projects in partnership with government institutions, focusing on Tech and the Digital Economy.</li><li>Networking and Alliance Building: Cultivate and leverage relationships with a broad network including government, non-government stakeholders, civil society, thought leaders, industry associations, and think tanks to forge strategic alliances.</li><li>Project Management: Oversee public policy projects that involve cross-functional teams and external stakeholders, ensuring successful outcomes and alignment with broader business objectives.</li>"},{"text":"What You Will Need","content":"<li>Bachelor’s degree in Law, Politics, International Relations, or Economics from a reputable university; Master’s degree preferred.</li><li>At least five years in a managerial role within public policy and government relations, or in sectors such as law firms, think tanks, civil society organizations, or government.</li><li>Established network among government stakeholders with a proven impact on policy decisions.</li><li>Strong analytical, problem-solving, communication skills, and independent project management capabilities.</li>"}],"text":"Manager of Food & Groceries Regulatory","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges.&nbsp;</div>","descriptionBodyPlain":"About The Role\n\nThe individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5","applyUrl":"https://jobs.lever.co/GoToGroup/cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5/apply"},{"additionalPlain":"About The Team\n\nOur Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.\n\nWe pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.</div><div><br></div><div>We pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Public Policy & Government Relations","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713944717592,"descriptionPlain":"About The Role\n\nThe individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.\n","description":"<div><b>About The Role</b></div><div><br></div><div>The individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.</div>","id":"cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e","lists":[{"text":"What You Will Do","content":"<li>Develop strategic communications plans to advance the company’s policy advocacy initiatives.</li><li>⁠Lead the creation, execution and dissemination of media publications, social media contents, policy briefs, researches, op-eds, policy dialogues and other activities aiming to educate policy makers, the media and the general public in relation to the company’s policy initiatives.&nbsp;</li><li>⁠Prepare proactive and reactive communications for policy and regulatory issues.</li><li>⁠Prepare the company’s spokesperson for media and public engagements related to policy and regulatory issues.&nbsp;</li>"},{"text":"Whay You Will Need","content":"<li>Bachelor’s degree in Journalism, Law, Politics, International Relations, Economics or Social Sciences from a reputable university;&nbsp;</li><li>At least eight years in a managerial role within media companies or public policy and government relations, or in sectors such as think tanks, civil society organizations, or government which focus on policy advocacy through public channels.</li><li>Established network among media stakeholders with a proven impact on policy decisions.</li><li>Strong analytical, problem-solving, communication skills, and independent project management capabilities.</li>"}],"text":"Manager of Policy Communication","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.</div>","descriptionBodyPlain":"About The Role\n\nThe individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e","applyUrl":"https://jobs.lever.co/GoToGroup/cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e/apply"},{"additionalPlain":"About The Team\n\nOur Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation & rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.\n\nCurrently, our team has been working on a lot of innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.\n\nGoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food, watching TV shows or sharing our hobbies.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation &amp; rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.</div><div><br></div><div>Currently, our team has been working on a lot of innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.</div><div><br></div><div>GoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food, watching TV shows or sharing our hobbies.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707726960069,"description":"","descriptionPlain":"","id":"8d38e7a3-89eb-4d80-997d-b08404b0e1a0","lists":[{"text":"What You Will Do","content":"<li>Create analytics and insight generation initiatives by understanding the behavior, usage, and attitude of the customer towards the products in order to generate market insight, define opportunities, and drive growth</li><li>Craft and implement all consolidated campaign and business reporting requirements to monitor GoFood's performance through strong collaboration with key stakeholders</li><li>Present a holistic view on market and competitive insights to allow effective and strategic decision-making process</li><li>Discover GoFood consumers’ in-app and transaction behavior, and provide actionable insights and strategies to reach target acquisitions and monthly transacting users</li><li>Conduct GoFood consumer research initiatives, including consumer segmentation and movement tracking</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree from reputable universities or equivalent practical experience</li><li>1-3 years of experience working as a data analyst, business intelligence analyst, or growth analyst in technology, FMCG, start-up, or telecommunication industry</li><li>Must be highly proficient in analytical tools such as Excel, SQL, Google Data Studio. Python is a plus.</li><li>Ability to translate complex ideas into simple and intuitive communication, and balance deep analytical rigor with actionable insights</li><li>Strong understanding of marketing and analytical concepts such as segmentation, customer lifecycle, retargeting, attribution models, prediction, and A/B testing</li><li>Experience preparing and developing a campaign report or various complex business reports</li><li>Experience developing user segmentation and executing user nudging and CRM or Digital Marketing campaigns</li>"}],"text":"Marketing Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/8d38e7a3-89eb-4d80-997d-b08404b0e1a0","applyUrl":"https://jobs.lever.co/GoToGroup/8d38e7a3-89eb-4d80-997d-b08404b0e1a0/apply"},{"additionalPlain":"About The Team\n\nOur Media Intelligence team consists of 4 people handling media analysis and research projects. Our main responsibility is to provide insights that drive our media strategy. How does one achieve this, you may ask? By continuously monitoring conversations of our brands and competitors both in conventional and social media. \n\nAs a team, we’re concerned with the company's growth and each other’s personal growth and well-being, too. We enjoy getting to know each other by talking about everything. For real, our weekly conversations range from social media trends to series worth binge-watching on the weekend. But whether you like movies or not, we’d be stoked to have you join the team!\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Media Intelligence team consists of 4 people handling media analysis and research projects. Our main responsibility is to provide insights that drive our media strategy. How does one achieve this, you may ask? By continuously monitoring conversations of our brands and competitors both in conventional and social media.&nbsp;</div><div><br></div><div>As a team, we’re concerned with the company's growth and each other’s personal growth and well-being, too. We enjoy getting to know each other by talking about everything. For real, our weekly conversations range from social media trends to series worth binge-watching on the weekend. But whether you like movies or not, we’d be stoked to have you join the team!</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Internship","department":"HoldCo - Corporate Affairs","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714309535469,"descriptionPlain":"About The Role\n\nJoin us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.\nTo deliver the tasks, you must be able to work full-time from Monday to Friday.\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>Join us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.</div><div>To deliver the tasks, you must be able to work full-time from Monday to Friday.</div><div><br></div>","id":"7ad0a551-f26b-4eb8-9849-cc04ac5dba4d","lists":[{"text":"What You Will Do","content":"<li>Monitor corporate news and other related information across channels (print, online, and social media).</li><li>Gather and analyze data from media monitoring to gain insights into public perception of the company and its performance.</li><li>Extract data and present interesting information from findings.</li><li>Identify trends and issues relevant to the company’s needs.</li><li>Collaborate to provide data-driven insights for other teams</li>"},{"text":"What You Will Need","content":"<li>Undergraduate students, preferably from Economics, Business, Computer Science, Marketing, Public Relations or Literature.</li><li>High proficiency in English and Bahasa Indonesia, both written and verbal.</li><li>A critical thinker, observant, and detail-oriented with vast knowledge of current issues and trends.</li><li>High willingness to learn.</li><li>Comfortable handling large data sets.</li><li>Knowledge in Ms Excel.</li><li>A collaborative team member as well as an independent self-starter.</li>"}],"text":"Media Intelligence Intern","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>Join us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.</div><div>To deliver the tasks, you must be able to work full-time from Monday to Friday.</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nJoin us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.\nTo deliver the tasks, you must be able to work full-time from Monday to Friday.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7ad0a551-f26b-4eb8-9849-cc04ac5dba4d","applyUrl":"https://jobs.lever.co/GoToGroup/7ad0a551-f26b-4eb8-9849-cc04ac5dba4d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713245102772,"descriptionPlain":"As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment\n","description":"<div>As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment</div>","id":"3f4f687f-8599-4d5c-96d5-8af234c3b09d","lists":[{"text":"What You Will Do","content":"<li>Identify and define business opportunities that aligns with the overall merchant services business objectives</li><li>Translate business opportunities into a fit problem statement and able to measure the priority of the problem&nbsp;</li><li>Collaborate with Product Team to develop a merchant focused product in onboarding and support&nbsp;</li><li>Develop Go-To Market plan and oversee the product adoption from funnel conversion rates and merchant experiences during the process.&nbsp;</li><li>Monitoring the product life cycle and continuously improved the product with a data driven decision making process</li><li>Engaged sales and ops team to deliver the best onboarding and support experience for merchants</li>"},{"text":"What You Will Need","content":"<li>At least 5 years of working experience, experience in product and project management is a plus.&nbsp;</li><li>Possess a strong sense of agency in navigating and creating clarity in ambiguous situations.</li><li>Ability to break down complex problems, identify use cases and solutions, and thrive in unstructured environments.</li><li>Comprehensive understanding of data, design, research, and business processes, with the ability to effectively collaborate with diverse teams.</li><li>Strong analytical and quantitative skills, with the capability to utilize data and metrics to support requirements and features.</li><li>Effective communication skills to articulate strategy, insights, priorities, and plans coherently to all levels of management.</li><li>Meticulous attention to detail, with a commitment to upholding high standards and managing multiple, competing priorities concurrently with minimal supervision.</li>"}],"text":"Onboarding & Support Business Lead","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment</div>","descriptionBodyPlain":"As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3f4f687f-8599-4d5c-96d5-8af234c3b09d","applyUrl":"https://jobs.lever.co/GoToGroup/3f4f687f-8599-4d5c-96d5-8af234c3b09d/apply"},{"additionalPlain":"About The Team\n\nThe Operations team executes and manages the day-to-day requirements of keeping Gojek up and running. We’re responsible for the overall experience of our community, and that everyone gets the utmost “Gojek” experience. In particular, we’re in charge of overseeing our driver-partner growth, retention, regulatory compliance and profitability targets, and ensuring that we offer our driver-partners and riders a delightful and meaningful experience.The Trust & Safety team is responsible for maintaining and improving the integrity of our platform by managing critical cases as well as proactively initiating campaigns to improve public trust. We operate on a 24-hour monitoring rhythm for all of our channels and are the first responders for incidents that may have a major business impact. The team is unwavering in its commitment to ensuring strict compliance with the dynamic regulations that govern the ride-hailing industry. Through ongoing vigilance and proactive measures, we contribute to fostering a secure and trustworthy platform for our users and stakeholders.If you are passionate about maintaining platform integrity, responding to critical incidents, and ensuring regulatory compliance in a dynamic environment, we welcome your application to join our dedicated Trust & Safety team.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">The Operations team executes and manages the day-to-day requirements of keeping Gojek up and running. We’re responsible for the overall experience of our community, and that everyone gets the utmost “Gojek” experience. In particular, we’re in charge of overseeing our driver-partner growth, retention, regulatory compliance and profitability targets, and ensuring that we offer our driver-partners and riders a delightful and meaningful </span><a href=\"http://experience.The\" style=\"font-size: 10pt\" class=\"postings-link\">experience.The</a><span style=\"font-size: 10pt\"> Trust &amp; Safety team is responsible for maintaining and improving the integrity of our platform by managing critical cases as well as proactively initiating campaigns to improve public trust. We operate on a 24-hour monitoring rhythm for all of our channels and are the first responders for incidents that may have a major business impact. The team is unwavering in its commitment to ensuring strict compliance with the dynamic regulations that govern the ride-hailing industry. Through ongoing vigilance and proactive measures, we contribute to fostering a secure and trustworthy platform for our users and </span><a href=\"http://stakeholders.If\" style=\"font-size: 10pt\" class=\"postings-link\">stakeholders.If</a><span style=\"font-size: 10pt\"> you are passionate about maintaining platform integrity, responding to critical incidents, and ensuring regulatory compliance in a dynamic environment, we welcome your application to join our dedicated Trust &amp; Safety team.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1708072107075,"descriptionPlain":"If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust & Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain. \n\nEmploying your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.\n\n","description":"<div><span style=\"font-size: 16px\">If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust &amp; Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">Employing your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.</span></div><div><br></div>","id":"6f3368c9-6e84-489c-add3-4ad1fd4b9519","lists":[{"text":"What You Will Do","content":"<li>Provide regular analysis and reports on operational performance including compliance, escalations, quality, risk, and KPI tracking to guide decision-making and devise proactive solutions</li><li>Collaborate with cross-functional teams to build, automate, and improve on the availability, integrity, accuracy, and reliability of reporting, data logging, and data pipelines to be secure and compliant</li><li>Liaise with internal and external stakeholders for regulatory and compliance reports whenever needed, including issue investigation and report verification</li><li>Create and maintain performance management dashboards, visualizations, and trackers for Operations</li><li>Develop data-driven business insights and work with cross-functional teams to identify opportunities and implement new product features or system enhancements related to Trust &amp; Safety</li><li>Identify operational weaknesses and opportunities to help improve or innovate new processes and projects to drive user and vehicle quality, customer experience, and compliance to regulatory requirements</li><li>Prepare regulatory compliance reports to ensure adherence to relevant data protection, Insurance, earnings and safety regulations</li><li>Implement and maintain a good data management system to ensure the integrity, confidentiality, and availability of trust and safety-related data.</li>"},{"text":"What You Will Need","content":"<li>At least 2 years of experience in analytics and operations/compliance-related role</li><li>A wizard at working on and analyzing large datasets, with the ability to translate quantitative findings into action plan, demonstrated through understanding of&nbsp; statistical methods and modeling techniques.</li><li>Strong stakeholder and project management capabilities, with great attention to detail</li><li>Resilience and ability to take initiative in our constantly-changing fast-paced environment</li><li>Strong knowledge of SQL, Python, Google Suite, and MS Excel (advanced) is required</li><li>Experience in BI tools such as Tableau, Metabase, or Data Studio is a plus</li><li>Prior experience in the tech industry is a plus.</li>"}],"text":"Operations Analyst, Data Operations (Trust & Safety)","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust &amp; Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px;\">Employing your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.</span></div><div><br></div>","descriptionBodyPlain":"If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust & Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain. \n\nEmploying your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6f3368c9-6e84-489c-add3-4ad1fd4b9519","applyUrl":"https://jobs.lever.co/GoToGroup/6f3368c9-6e84-489c-add3-4ad1fd4b9519/apply"},{"additionalPlain":"About The Team\n\nThe Payment Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF regulated entities with Bank Indonesia as the regulator. As a Payment Compliance team, we are obliged to ensure the adherence of internal divisions/units to payments system regulations, and at the same time to help ensure the business units are in a strategic position to execute all the business initiatives. \n\nThe Payment Compliance team itself combines  youthful energy and responsibility as expected from mature individuals. We foster a healthy and conducive environment for the members to share their opinions and thoughts and we promote high responsibility for each task assigned to all team members. All of those are critical aspects for the team to be able to interact, make sound judgment and give advice to many other functions within the GoTo ecosystem. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Payment Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF regulated entities with Bank Indonesia as the regulator. As a Payment Compliance team, we are obliged to ensure the adherence of internal divisions/units to payments system regulations, and at the same time to help ensure the business units are in a strategic position to execute all the business initiatives.&nbsp;</div><div><br></div><div>The Payment Compliance team itself combines&nbsp; youthful energy and responsibility as expected from mature individuals. We foster a healthy and conducive environment for the members to share their opinions and thoughts and we promote high responsibility for each task assigned to all team members. All of those are critical aspects for the team to be able to interact, make sound judgment and give advice to many other functions within the GoTo ecosystem.&nbsp;</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Legal & Compliance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713511717571,"descriptionPlain":"About The Role\n\nThe Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of  ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. \n","description":"<div><b>About The Role</b></div><div><br></div><div>The Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of&nbsp; ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. </div>","id":"19489ced-76de-411a-8205-8aebdef22d4c","lists":[{"text":"What You Will Do","content":"<li>Support Compliance and Regulatory Affairs matter in GoTo Financial&nbsp; Payments operations, which includes but not limited to business/product reporting and approval process with the regulators, compliance advisory assistance to business unit, as well as technical regulatory assessment</li><li>Provide Compliance advisory assistance for offline and online payments operations, in both consumer and merchant-facing operation</li><li>Create and maintain the latest update of payments regulations databases and&nbsp; provide/disseminate assessment on such regulations to the internal&nbsp; units in GoTo Financial</li><li>Provide assistance and support to the Head of Compliance and Senior Manager of Payments Compliance in any external engagements with Bank Indonesia, other regulators, industry associations and other external stakeholders</li><li>Give continuous support on the creation, standardization and implementation of Payments Compliance, policies, terms &amp; conditions, internal working procedures and standard operational guidelines;</li><li>Any other ad-hoc duties that may be required.</li>"},{"text":"What You Will Need","content":"<li>Bachelor Degree in Law and Accounting. Having a master’s degree would be an advantage.</li><li>Possess certifications in Risk Management/ IT Audit will be an advantage.</li><li>At least 4 years of mixed experience in the area of payments policy/ regulatory compliance and past working experience in Bank Indonesia/ Otoritas Jasa Keuangan will be an advantage.&nbsp;</li><li>Intermediate level of spoken and written skills both in English and Indonesian language.</li><li>Excellent analytical skills and attention to details with the capacity of identifying risks and proactively choosing the best solutions, and sound judgment.</li><li>Ability to multitask and adapt to work in a fast-paced team environment.&nbsp;</li><li>Well-developed communication skills (including oral, written and interpersonal skills) and the ability to liaise and negotiate in a variety of contexts, include builds credibility and strong relationships with internal and external stakeholders and counterparts</li>"}],"text":"Payments Compliance Manager - #9917","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of&nbsp; ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. </div>","descriptionBodyPlain":"About The Role\n\nThe Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of  ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/19489ced-76de-411a-8205-8aebdef22d4c","applyUrl":"https://jobs.lever.co/GoToGroup/19489ced-76de-411a-8205-8aebdef22d4c/apply"},{"additionalPlain":"Our data team is part of GoToFinancial Consumer Lending and mainly supports two products: GopayLater and GopayPinjam. The team includes members from offices in Jakarta, Singapore, Bangalore, and Beijing. We collaborate closely with the Risk, Finance, Growth, and Product teams, assisting them with their data requests on a daily basis.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">Our data team is part of GoToFinancial Consumer Lending and mainly supports two products: GopayLater and GopayPinjam. The team includes members from offices in Jakarta, Singapore, Bangalore, and Beijing. We collaborate closely with the Risk, Finance, Growth, and Product teams, assisting them with their data requests on a daily basis.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714372709159,"descriptionPlain":"As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser\n","description":"<div><span style=\"font-size: 10pt\">As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser</span></div>","id":"44117b68-3ece-40ac-91c1-920caadfe5dd","lists":[{"text":"What You Will Do","content":"<li>Design and construct scalable streaming or batch data pipelines to meet various business requirements.</li><li>Establish reliable monitoring and alerting systems to assess data pipeline performance.</li><li>Identify potential bottlenecks in the system and optimize as needed.</li><li>Manage the data science infrastructure to streamline model development and deployment.</li><li>Mentor team members by conducting code reviews and sharing knowledge.</li>"},{"text":"What You Will Need","content":"<li>Experience with streaming processing and Change Data Capture (CDC) tools such as Debezium, Flink, Kafka, etc. is necessary.</li><li>Good experience with infrastructure, including Cloud Computing, Linux OS, Networks, Docker, RDBMS, and NoSQL Databases is desirable.</li><li>Proficiency in Python and SQL is expected.</li><li>Must be self-driven, with a strong sense of ownership, and capable of working independently to solve problems and develop solutions.</li><li>Project management skills to successfully drive large-scale projects from initiation to completion are needed.</li><li>Excellent communication skills, including proficiency in English, are required.</li><li>Understanding of machine learning techniques and algorithms is advantageous.</li>"}],"text":"Principal Data Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser</span></div>","descriptionBodyPlain":"As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser\n","hostedUrl":"https://jobs.lever.co/GoToGroup/44117b68-3ece-40ac-91c1-920caadfe5dd","applyUrl":"https://jobs.lever.co/GoToGroup/44117b68-3ece-40ac-91c1-920caadfe5dd/apply"},{"additionalPlain":"About the Team\n\nThe Marketplace Supply Team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace, which deeply impacts the everyday experiences of our customers (riders) and drivers. We are responsible for the pillars of technology, science, and strategy across the supply-and-demand, matching of over two billion global orders in 2019. The gist of our role is to oversee that Gojek's millions of customers are paired with the right drivers at the optimum price at the right time. This supply and demand matching is the core problem that our Product Team tackles every day. \n\nWe are a tight-knit group made up of avid readers, amateur gamers, coffee connoisseurs and (guilty) reality show watchers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company! \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Marketplace Supply Team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace, which deeply impacts the everyday experiences of our customers (riders) and drivers.&nbsp;We are responsible for the pillars of technology, science, and strategy across the supply-and-demand, matching of over two billion global orders in 2019. The gist of our role is to oversee that Gojek's millions of customers are paired with the right drivers at the optimum price at the right time. This supply and demand matching is the core problem that our Product Team tackles every day.&nbsp;</div><div><br></div><div>We are a tight-knit group made up of avid readers, amateur gamers, coffee connoisseurs and (guilty) reality show watchers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!&nbsp;</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1698659054507,"descriptionPlain":"About the Role\n\nRoll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity. In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity.&nbsp;In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.</div><div><br></div><div><br></div>","id":"a54f9d2d-4b2d-43c3-bb82-c6705beefbcf","lists":[{"text":"What You Will Do ","content":"<li>Be solely responsible for the entire life-cycle of high complexity projects or features including engineering design, development, and deployment within their stream</li><li>Ensure the planning &amp; timely delivery of work within their stream, under the guidance from more experienced engineers</li><li>Improve code structure and architecture in service of test ability and maintainability, and; write, co-write, and review design documentation. Participate in the design review process, seeking and providing constructive criticism</li><li>Be accountable for the operationalization of the tracking and reporting of at least one execution metric (like code coverage, velocity)</li><li>Split complex engineering task into smaller components which can be developed by other engineers on the team</li><li>Mentor other engineers on an individual basis and participate in the hiring process</li>"},{"text":"What You Will Need","content":"<li>At least 8 years of relevant, hands-on experience with Clojure, Golang, or Java</li><li>Able to go into depth across tech stack used in the product</li><li>Experience working on large-scale event-driven micro-services architecture with an active use of Kafka and can architect solutions based on this pattern</li><li>Familiarity with basic programming principles such as SOLID and TDD</li><li>Intermediate experience with Linux OS and is able to troubleshoot issues</li><li>Understands why we need to test code and has implemented tests</li><li>Able to understand/discuss design and performance trade offs in complex systems</li>"}],"text":"Principal Software Engineer - Marketplace","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity.&nbsp;In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nRoll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity. In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a54f9d2d-4b2d-43c3-bb82-c6705beefbcf","applyUrl":"https://jobs.lever.co/GoToGroup/a54f9d2d-4b2d-43c3-bb82-c6705beefbcf/apply"},{"additionalPlain":"About the Team\n\nOur Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.\nWe, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 16px\"><b>About the Team</b></span></div><div><br></div><div><span style=\"font-size: 16px\">Our Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.</span></div><div><span style=\"font-size: 16px\">We, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715060912791,"descriptionPlain":"About the Role\n\nWe are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","description":"<div><span style=\"font-size: 16px\"><b>About the Role</b></span></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","id":"426f18b4-739e-4da0-a74b-446c349c0a31","lists":[{"text":"What You Will Do","content":"<li>Design and develop highly scalable, highly available, reliable, secure and fault tolerant systems with minimal guidance for one of the world's fastest growing company in the transportation industry</li><li>Translate business requirements into scalable and extensible design</li><li>Pair with team members on functional and nonfunctional requirements and spread design philosophy, goals and improve the code quality across the team</li><li>Collaborate with cross functional teams (Mobile, DevOps, UX, QA etc.) on execution and delivery</li><li>Partner with the team to define and execute the feature roadmap</li><li>Provide technology leadership to the team and foster engineering excellence</li><li>Research new technologies and tools that enable building simplistic architecture for the next generation of Gojek services</li>"},{"text":"What You Will Need","content":"<li>Should have at least 7 years of hands-on experience in designing, developing, testing and deploying applications at scale</li><li>Proficient in System Design, Design patterns, database structure, Linux/Unix. Experience with functional programming and infrastructure management is a plus</li><li>Well versed with Agile methodologies, TDD and Test Engineering and Automation</li><li>Excellent understanding of interactive application development paradigm, memory management, performance/resource optimizations, database interactions, network programming, concurrency and multithreading, fault tolerance, monitoring, security and operability of systems</li><li>Ability to pick up new technologies and independently navigate obstacles and find innovative solutions</li><li>Ability to seamlessly switch focus between tasks and enthusiasm for seeking out learning opportunities</li><li>Ability to build strong relationships within and beyond the team, enhancing knowledge expansion and problem-solving efforts, while also nurturing the same through the exchange of constructive feedback</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Principal Software Engineer (Backend) - Transport","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\"><b>About the Role</b></span></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","descriptionBodyPlain":"About the Role\n\nWe are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/426f18b4-739e-4da0-a74b-446c349c0a31","applyUrl":"https://jobs.lever.co/GoToGroup/426f18b4-739e-4da0-a74b-446c349c0a31/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1698941092552,"descriptionPlain":"About the Role:\n\nAs a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem. By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.\n","description":"<div><b>About the Role:</b></div><div><br></div><div>As a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem.&nbsp;By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.</div>","id":"35da9d16-f619-4a14-a715-9033bb36eb7f","lists":[{"text":"What You Will Do","content":"<li>Solve problems for the customers to help them get financial inclusion and help customers increase their balance sheet with the best experience in Indonesia</li><li>Collaborate closely with customers and stakeholders, utilizing data-driven insights to meet their evolving needs</li><li>Drive product decisions using data analytics, A/B testing, and user insights to achieve measurable outcomes</li><li>Take full ownership of our product portfolio, using data to guide strategic direction and improvements</li><li>Develop and execute data-informed product roadmaps, setting clear, data-backed objectives</li><li>Stay at the forefront of industry trends, competitor analysis, and regulatory changes through data-driven research</li><li>Work in tandem with engineering, design, and marketing teams to ensure data-backed product launches</li><li>Prioritize user experience enhancements based on data analysis, boosting customer satisfaction and retention</li><li>Use data-driven decision-making to prioritize features, enhancements, and optimizations that make an impact</li>"},{"text":"What You Will Need","content":"<li>At least 4 years of experience as a Product Manager, preferably in a consumer-facing product</li><li>Ability to set your own targets, ask for help when you need it, and are always looking to learn something new</li><li>Strong communication skills: Ability to summarize complex and technical topics to a wide range of audiences</li><li>You are a self-starter, you love to understand systems inside out and make it your mission to deliver quality products</li><li>Fast &amp; Agile: Ability to excel in a constantly changing and rapidly growing workplace</li><li>Data-Driven: When making decisions you leverage technical resources and data to support hypotheses. You are skilled at SQL and understand basic statistics, but you also know when to step back from the rabbit hole of ‘too many metrics’</li><li>Domain Knowledge: Experience in Fintech and Lending is a plus</li>"}],"text":"Product Manager 2 - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role:</b></div><div><br></div><div>As a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem.&nbsp;By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.</div>","descriptionBodyPlain":"About the Role:\n\nAs a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem. By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/35da9d16-f619-4a14-a715-9033bb36eb7f","applyUrl":"https://jobs.lever.co/GoToGroup/35da9d16-f619-4a14-a715-9033bb36eb7f/apply"},{"additionalPlain":"About The Team\n\nOur Product Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation & rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.\nCurrently, our team has been working on a lot of product innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.\n\nGoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food and sharing our hobbies.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Product Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation &amp; rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.</div><div>Currently, our team has been working on a lot of product innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.</div><div><br></div><div>GoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food and sharing our hobbies.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707306211878,"descriptionPlain":"About The Role\n\nFasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.\n","description":"<div><b>About The Role</b></div><div><br></div><div>Fasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.</div>","id":"68d7d220-1f05-49ea-9f34-fffe0ef75aea","lists":[{"text":"What You Will Do","content":"<li>Develop and execute integrated campaign plans that include activations across many formats and channels (e.g. video, interactive, social).&nbsp;</li><li>Collaborate with the GoFood business team in conceptualizing, designing and building strategies and campaigns to reach GoFood business goals and visions.</li><li>Partner with the creative and media team to develop robust and relevant communication for our different segments, using various drivers to impact growth according to the different personas.</li><li>Collaborate with the Product team to not only develop and execute strong GTMs for new product launches, but also become an integral partner in sharing input and consumer insights for product development.</li><li>Creating engaging and informative contents for digital marketing, website, blog, social media, and any other content marketing channels that the business might leverage to improve the conversion funnel particularly for the non active or dormant users, supported by branding, copywriter and creative teams.&nbsp;</li><li>Identifying improvement areas for the incumbent marketing process or user journey and implementing the changes required for it. Including but not limited to CRM user journey, performance marketing, and social media engagement.</li><li><br></li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree from reputable universities or equivalent practical experience.</li><li>5-6 years of experience working as a product marketing manager, analytics manager, or strategy &amp; planning manager in technology, start-up or FMCG.</li><li>Experience in crafting marketing, communication and business strategy.</li><li>Experience in end-to-end campaign development, from planning, executing and reporting.</li><li>Experience working with cross-functional/cross-discipline stakeholders, and drafting and leading communication plans for internal stakeholders.</li><li>Experience with solving problems and thinking strategically in order to translate user tension into business opportunities for company growth.</li><li>Experience in brand health tracking on the reporting, trend monitoring and developing an improvement plan.</li>"}],"text":"Product Marketing Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>Fasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.</div>","descriptionBodyPlain":"About The Role\n\nFasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/68d7d220-1f05-49ea-9f34-fffe0ef75aea","applyUrl":"https://jobs.lever.co/GoToGroup/68d7d220-1f05-49ea-9f34-fffe0ef75aea/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713779183047,"descriptionPlain":"You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","id":"a062b588-6d29-4628-aa01-2e9e4a6da8f0","lists":[{"text":"What You Will Do","content":"<li>To support Region CE Manager to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver District target completed orders and active users.</li><li>Managing all day to day marketing executional activities from all districts &amp; branches&nbsp; needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in districts &amp; branches are delivered with given standard of accuracy, completeness, timeliness as per the standard package and local initiatives.&nbsp;</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis.</li><li>Internally work with direct responsibility to deliver district executions and targets with close coordination with Region CE Manager in executing events, exhibits, and other activities.</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results.</li><li>Be responsible for setting the integrated communications plan and ensure consistency of messaging and brand communications. Working closely with the sales, government relations, and operations team.</li>"},{"text":"What You Will Need","content":"<li>Bachelor degree, with GPA &gt; 3.2 or equivalent</li><li>Preferably majoring in Marketing Management or Business</li><li>At least 3-4 years of working experience in marketing</li><li>Solid experience in partnership and digital marketing</li><li>Strong analytical and planning skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</li><li>Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</li>"},{"text":"About the Team","content":"<li>Our Regional Consumer Engagement team is a family of 17 people based in Indonesia, specifically in Jabodetabek region. We oversee all things and act as a center of excellence for partnerships and increasing potential visibility in respective region POI or malls and work to create (consumer engagement and brand awareness. It’s our job to ensure that all engagement activities run seamlessly. One of the biggest challenges we had to face is to ensure gojek domination is consistent across Jabodetabek region. We eventually resolved it by doing close coordination with HQ and the regional team. Currently, we’re busy at work on various projects, including one about POI domination, merchants branding.</li>"}],"text":"Region Consumer Engagement Associate (Marketing) - Jabodetabek","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","descriptionBodyPlain":"You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a062b588-6d29-4628-aa01-2e9e4a6da8f0","applyUrl":"https://jobs.lever.co/GoToGroup/a062b588-6d29-4628-aa01-2e9e4a6da8f0/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705298233347,"descriptionPlain":"As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div><span style=\"font-size: 9pt\">As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","id":"63b9af16-d876-43e2-8f29-3abb844379e9","lists":[{"text":"What Will You Do","content":"<li>To support Region CE Senior Manager to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver District target completed orders and active users</li><li>Managing all day to day marketing executional activities from all districts &amp; branches&nbsp; needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in districts &amp; branches are delivered with given standard of accuracy, completeness, timeliness as per the standard package and local initiatives</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis</li><li>Internally work with direct responsibility to deliver district executions and targets with close coordination with Region CE Manager in executing events, exhibits, and other activities</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results</li><li>Be responsible for setting the integrated communications plan and ensure consistency of messaging and brand communications Working closely with the sales, government relations, and operations team</li>"},{"text":"What Will You Need","content":"<li>Bachelor degree from top university or&nbsp; any well-known universities from each region or abroad with GPA &gt; 3.2 or equivalent</li><li>Preferably majoring in Marketing Management or Business</li><li>At least 5-7 years of working experience in marketing</li><li>Solid experience in partnership and digital marketing</li><li>Strong analytical and planning skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</li><li>Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</li>"}],"text":"Region Consumer Engagement Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","descriptionBodyPlain":"As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/63b9af16-d876-43e2-8f29-3abb844379e9","applyUrl":"https://jobs.lever.co/GoToGroup/63b9af16-d876-43e2-8f29-3abb844379e9/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715919574159,"descriptionPlain":"About The Role\n\nRegional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">Regional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.</span></div>","id":"ea0f2d5a-c9d5-4202-ac91-a671b128bfb4","lists":[{"text":"What You Will Do:","content":"<li>Develop tailored-local plan to educate and engage merchants in his/her territory based on their lifecycle stages, i.e: create partnerships, weekly gatherings, collaborate with marketing team for local programs</li><li>Ensure the local plan to be executed by district, branch &amp; satellite teams for both managed &amp; unmanaged merchants</li><li>Liaise with HQ Merchant Engagement Team to develop and execute nationwide/main local key program and initiatives</li><li>Liaise with product team in HQ (GoFood, GoPay, etc.) for the execution of region-centric projects</li><li>Gather and develop key insights to continuously improve practices and standard of merchant engagement activities</li><div><br></div>"},{"text":"What You Will Need","content":"<li>Bachelor's degree in any field (Top tier University is preferable) </li><li>5-7 years of experience within mid-to-senior management function (FMCG, and Telecommunication company)</li><li>Strong network and knowledge about the city</li><li>Excellence to bridge, develop and maintain good relationships with key partners such as but not limited to local/regional government stakeholders, 3rd party partners, merchant associations, communities</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Excellent communication skills and proficiency in English</li><li>Experienced in managing a big team, as well as strong in people development and mentoring / coaching would be a plus point</li><li>Fact-based/number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Region Merchant Development Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">Regional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.</span></div>","descriptionBodyPlain":"About The Role\n\nRegional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ea0f2d5a-c9d5-4202-ac91-a671b128bfb4","applyUrl":"https://jobs.lever.co/GoToGroup/ea0f2d5a-c9d5-4202-ac91-a671b128bfb4/apply"},{"additionalPlain":"You will spend 50%-60% of your working hours on analysis and dashboard creation. The remaining is for presentation, coordination, team development and others. You will join a large team (over 50 members) with many moving parts. You are here to help simplify the complexity.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 16px\">You will spend 50%-60% of your working hours on analysis and dashboard creation. The remaining is for presentation, coordination, team development and others. You will join a large team (over 50 members) with many moving parts. You are here to help simplify the complexity.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714965919146,"descriptionPlain":"About The Role\n\nRegion Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.\n\nIn this role you will answer and create data dashboards for various questions such as: \n1. “How should we define driver service quality and how to measure it?”\n2. “How to detect if there is any anomaly in the dataset?”\n3. “Which city has been underperforming, why, and how can we address it?”\n\n\n\n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Region Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.</span></div><div><br></div><div><span style=\"font-size: 16px\">In this role you will answer and create data dashboards for various questions such as:&nbsp;</span></div><div><span style=\"font-size: 16px\">1. “How should we define driver service quality and how to measure it?”</span></div><div><span style=\"font-size: 16px\">2. “How to detect if there is any anomaly in the dataset?”</span></div><div><span style=\"font-size: 16px\">3. “Which city has been underperforming, why, and how can we address it?”</span></div><div><br></div><div><br></div><div><br></div>","id":"29c083cb-0dda-4ce1-9513-788f00e8f482","lists":[{"text":"What You Will Do:","content":"<li>Answer consultant-level questions such as “how can we increase adoption rate of a driver apps feature from x% to y% within 3 months?” and “how can we create profiling segments for millions of Gojek accounts”</li><li>Build fairly complex quantitative model to help predict business outcome</li><li>Write fairly complex SQL query on daily basis</li><li>Create user-friendly dashboards with softwares such as Metabase or Tableau</li><li>Assist the Regional Operations Manager to coordinate implementation of initiatives across cities</li><li>Teach and coach the city-level team members on how to do business analytics</li>"},{"text":"What You Will Need:","content":"<li>At least 2-5 years of relevant analytics role, preferably from consulting firms and technology companies or any institutions with complex and large database</li><li>Quantitative academic degrees e.g. engineering, mathematics, economics with&nbsp;strong academic record (GPA &gt;3.5)</li><li>Strong in SQL query, dashboard creation, and structured problem-solving</li><li>Experience in using data analytic tools like BigQuery, Tableau, Metabase</li><li>Proficient English (you will read a lot of technical documentation written in English)</li><li>Go getter personality (when there is blocker you must find your way around it, including having to do ground visit and interviewing drivers when necessary)</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Region Operations Associate","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Region Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.</span></div><div><br></div><div><span style=\"font-size: 16px;\">In this role you will answer and create data dashboards for various questions such as:&nbsp;</span></div><div><span style=\"font-size: 16px;\">1. “How should we define driver service quality and how to measure it?”</span></div><div><span style=\"font-size: 16px;\">2. “How to detect if there is any anomaly in the dataset?”</span></div><div><span style=\"font-size: 16px;\">3. “Which city has been underperforming, why, and how can we address it?”</span></div><div><br></div><div><br></div><div><br></div>","descriptionBodyPlain":"About The Role\n\nRegion Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.\n\nIn this role you will answer and create data dashboards for various questions such as: \n1. “How should we define driver service quality and how to measure it?”\n2. “How to detect if there is any anomaly in the dataset?”\n3. “Which city has been underperforming, why, and how can we address it?”\n\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/29c083cb-0dda-4ce1-9513-788f00e8f482","applyUrl":"https://jobs.lever.co/GoToGroup/29c083cb-0dda-4ce1-9513-788f00e8f482/apply"},{"additionalPlain":"About The Team\n\nAs an Region Operations Manager, he/she will work as a center of excellence for Operations stream in the Regions. He/she will work very intensively and collaborate with HQ Driver Core, other Region Operations Managers across regions as well as Area Operations Managers from each Area. He/she also will work closely with the Analytics team to analyze Operations data to get valuable insight and recommendation for business.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">As an Region Operations Manager, he/she will work as a center of excellence for Operations stream in the Regions. He/she will work very intensively and collaborate with HQ Driver Core, other Region Operations Managers across regions as well as Area Operations Managers from each Area. He/she also will work closely with the Analytics team to analyze Operations data to get valuable insight and recommendation for business.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713428751727,"descriptionPlain":"About the Role \n\nRegion Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.\n","description":"<div><b><span style=\"font-size: 10pt\">About the Role </span></b></div><div><br></div><div><span style=\"font-size: 10pt\">Region Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.</span></div>","id":"0489939a-c571-4d5f-adaa-95ceac8912c5","lists":[{"text":"What You Will Do: ","content":"<li>Responsible for completed orders and profit and loss target achievement</li><li>Provide analytics to support operations team such as Supply Reliability, Fraud rules, Driver’s Engagement etc. at the regional level</li><li>Deploy defined strategies from operations perspective during the process of establishing the new area of service as well as optimizing existing area</li><li>Ensure SOP and legal compliances in the region</li><li>Support Regional Operation Head to oversee all districts and branches operations</li><li>Analyze driver states &amp; measure efficiency of various driver badges to generate more high quality drivers in the region</li><li>Support Regional Operation Head in product changes roll out in the region</li>"},{"text":"What You Will Need:","content":"<li>Having at least 5 years experience in supply chain, preferably at the managerial level and from Multi National Company or similar experience in the Ride Hailing/ On Demand Service Industry</li><li>Strong analytical thinking and problem solving skills using various improvement tools and methods (preferably have prior exposure to SQL)</li><li>Having good understanding about supply and demand planning</li><li>Able to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Lead team / project as well as persuade stakeholders to ensure speed &amp; quality of project / initiative</li><li>Proficiency in to converse in English</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Region Operations Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b><span style=\"font-size: 10pt;\">About the Role </span></b></div><div><br></div><div><span style=\"font-size: 10pt;\">Region Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.</span></div>","descriptionBodyPlain":"About the Role \n\nRegion Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/0489939a-c571-4d5f-adaa-95ceac8912c5","applyUrl":"https://jobs.lever.co/GoToGroup/0489939a-c571-4d5f-adaa-95ceac8912c5/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709635110438,"description":"","descriptionPlain":"","id":"fc862fb7-6833-49c3-96c7-c8ee71cd0fe4","lists":[{"text":"What You Will Do","content":"<li>Understand problems reported to stakeholders or knowledge gaps in their understanding of our merchants</li><li>Assist your manager/lead by grooming research requests by asking questions that help uncover the scope and complexity</li><li>Collaboratively creating and socializing the research plan with all the related stakeholders</li><li>Build discussion guides for generative interviews and evaluative interviews with participants. Such as in-depth interviews, concept tests, focus group discussions, usability tests</li><li>Organize effective data collection by collaborating with partners and vendors in the field</li><li>Conduct and participate in data analysis and synthesis sessions with peers</li><li>Build research reports to convey findings</li><li>Present the research report to stakeholders</li><li>Keep the research repository and insights banks updated for our relevant topics</li>"},{"text":"What You Will Need","content":"<li>At least 3 years of experience or more in any field of Research, knowledge in Market research, Brand Research, and User Experience (UX) Research is a plus</li><li>Experience in hybrid research methods; with experience in qualitative and quantitative research methods (more exposure in qualitative projects is preferable, but quant exposure is welcome)</li><li>Project management skills in designing, executing, and delivering research independently from start to finish</li><li>Understanding the various functions that enable tech companies to be more successful</li><li>Comfortable with the culture that empowers autonomy and fluency in navigating uncertainty</li><li>Good communication, storytelling, and influencing skills to work with different levels of stakeholders and users in English and Bahasa Indonesia (written and verbal)</li><li>Empathy to connect with stakeholders and users with various backgrounds and openness to learning from and sharing your skill set with others</li><li>Exposure to payment gateways, e-commerce, point-of-sales products, and industries related to merchant products is a big plus.</li>"}],"text":"Researcher - Merchant Services","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/fc862fb7-6833-49c3-96c7-c8ee71cd0fe4","applyUrl":"https://jobs.lever.co/GoToGroup/fc862fb7-6833-49c3-96c7-c8ee71cd0fe4/apply"},{"additionalPlain":"About The Team\n\nThe team is split across 2 locations supporting different business activities that GTF operates in.  Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The team is split across 2 locations supporting different business activities that GTF operates in.&nbsp; Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710738954272,"descriptionPlain":"About The Role\n\nWe are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","description":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","id":"60d37414-287e-4552-a0d0-accf1737d0ce","lists":[{"text":"What You Will Do","content":"<li>Key fraud analyst to the business teams for the assigned product lines - conducting deep dives and analysis on risk related issues.</li><li>Close monitoring of risk metrics, underlying drivers - and the overall business metrics</li><li>Assess, validate and optimize risk rules - to ensure best outcome of risk/reward and to meet stated risk target metrics</li><li>Develop risk platform solutions that will balance the various requirements from the product lines but yet maintain a holistic view of the customer experience</li>"},{"text":"What You Will Need","content":"<li>3-4 years of related payment risk experience, preferably on the acquiring side and e-wallets</li><li>Able to assess issues and recommend solutions both at the strategic and tactical levels - balancing the business vision and practical implementation considerations.</li><li>Intermediate proficiency in using GSuite and other data skills (SQL, BigQuery etc)</li><li>Proactively builds trust-based relationships with stakeholders while maintaining the ability to remain objective</li><li>Strong understanding of risk solutions, product implementation - on the business side</li>"}],"text":"Risk Analyst - Payments #9746","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","descriptionBodyPlain":"About The Role\n\nWe are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","hostedUrl":"https://jobs.lever.co/GoToGroup/60d37414-287e-4552-a0d0-accf1737d0ce","applyUrl":"https://jobs.lever.co/GoToGroup/60d37414-287e-4552-a0d0-accf1737d0ce/apply"},{"additionalPlain":"In this role, you will get the opportunity to work together with other teams (risk analyst, GTM and Collection) to find the best solutions to our business problems leveraging big data and machine learning tools.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">In this role, you will get the opportunity to work together with other teams (risk analyst, GTM and Collection) to find the best solutions to our business problems leveraging big data and machine learning tools.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1704856901936,"description":"","descriptionPlain":"","id":"5611e062-e094-4da3-ab1c-75c85cf62194","lists":[{"text":"What You Will Do","content":"<li>Combine technical and business knowledge to develop innovative data science solutions</li><li>Rapidly prototype solutions and contribute to product and feature discussions</li><li>Analyze large volumes of data and generate actionable insights</li><li>Experiment with different ML techniques and research the latest technologies (e.g. LLM) to determine the best approach</li><li>Own end-to-end solutions, from formulating the technical problem to deployment of the solution as part of a cross-functional team of scientists, analysts, product managers, and engineers&nbsp;</li>"},{"text":"What you will need","content":"<li>3+ years of experience developing ML solutions</li><li>Strong quantitative and problem-solving skills</li><li>Solid understanding of Statistics/ML fundamentals and experience in Python, R</li><li>Communication skills to engage with business stakeholders to understand their needs and effectively communicate the results of the analytical solutions</li><li>Ability to write clear and concise technical documentation</li><li>Masters in a quantitative discipline (good to have - Experienced - Bachelor)</li>"}],"text":"Risk Data Scientist","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/5611e062-e094-4da3-ab1c-75c85cf62194","applyUrl":"https://jobs.lever.co/GoToGroup/5611e062-e094-4da3-ab1c-75c85cf62194/apply"},{"additionalPlain":"About The Team\n\nThe team is split across 2 locations supporting different business activities that GTF operates in.  Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The team is split across 2 locations supporting different business activities that GTF operates in.&nbsp; Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713334327811,"descriptionPlain":"About The Role\n\nWe are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","description":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","id":"a61cda6c-82fd-4daf-aabf-3db91e01684f","lists":[{"text":"What You Will Do","content":"<li>Key fraud analyst to the business teams for the assigned product lines - conducting deep dives and analysis on risk related issues.</li><li>Close monitoring of risk metrics, underlying drivers - and the overall business metrics</li><li>Assess, validate and optimize risk rules - to ensure best outcome of risk/reward and to meet stated risk target metrics</li><li>Develop risk platform solutions that will balance the various requirements from the product lines but yet maintain a holistic view of the customer experience</li>"},{"text":"What You Will Need","content":"<li>5-8 years of related payment risk experience, preferably on the mobile apps and e-wallets</li><li>Able to assess issues and recommend solutions both at the strategic and tactical levels - balancing the business vision and practical implementation considerations.</li><li>Intermediate proficiency in using GSuite and other data skills (SQL, BigQuery etc)</li><li>Proactively builds trust-based relationships with stakeholders while maintaining the ability to remain objective</li><li>Strong understanding of risk solutions, product implementation - on the business sid</li>"}],"text":"Risk Manager - Payments #9868","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","descriptionBodyPlain":"About The Role\n\nWe are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","hostedUrl":"https://jobs.lever.co/GoToGroup/a61cda6c-82fd-4daf-aabf-3db91e01684f","applyUrl":"https://jobs.lever.co/GoToGroup/a61cda6c-82fd-4daf-aabf-3db91e01684f/apply"},{"additionalPlain":"About The Team\n\n- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management\n- Team members are from diverse background and cultures, providing a open and inclusive environment to develop\n- The working style in the team is productive and outcome-driven\n- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management</div><div>- Team members are from diverse background and cultures, providing a open and inclusive environment to develop</div><div>- The working style in the team is productive and outcome-driven</div><div>- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713511923769,"description":"","descriptionPlain":"","id":"e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59","lists":[{"text":"What You Will Do","content":"<li>Perform underwriting and post-loan management data analysis, output policy decisions based on it, actively monitor results, and effectively iterate the policies</li><li>Conduct user segmentation, pricing sensitivity check &amp; risk-based pricing on consumer lending products</li><li>Analyze user behaviors in the ecosystem, do problem-solving, and provide proposals to the management on risk control, UX improvement, and onboarding channel management&nbsp;</li><li>Prepare Risk reporting, position reporting, monitoring dashboards, and present recommendations</li><li>Support credit business growth by defining &amp; analyzing possible risks and consequences, and designing processes to eliminate and mitigate</li><li>Work closely with other business stakeholders and share insights of risk management</li>"},{"text":"What You Will Need","content":"<li>Have experience in lending business at least 2 years</li><li>Have experience in conducted detailed risk assessments&nbsp;</li><li>Have experience in analyzing documents, statistics, reports and trends of both internal &amp; external data</li><li>Have good communication and adaptive skills, be responsible and discipline in data providing</li><li>Have knowledge and experience of working with SQL, if proficient will be a big advantage. Python is a bonus item</li><li>Independent, organized, highly analytical and proactive</li>"}],"text":"Risk Strategy - Consumer Lending #9919","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59","applyUrl":"https://jobs.lever.co/GoToGroup/e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59/apply"},{"additionalPlain":"About The Team\n\n- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management\n- Team members are from diverse background and cultures, providing a open and inclusive environment to develop\n- The working style in the team is productive and outcome-driven\n- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process\n","additional":"<div><b>About The Team</b></div><div><br></div><div>- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management</div><div>- Team members are from diverse background and cultures, providing a open and inclusive environment to develop</div><div>- The working style in the team is productive and outcome-driven</div><div>- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process</div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1715764385486,"description":"","descriptionPlain":"","id":"e33b73ae-63e2-4e9c-aff9-03e9127e4e4e","lists":[{"text":"What You Will Do","content":"<li>Perform underwriting and post-loan management data analysis, output policy decisions based on it, actively monitor results, and effectively iterate the policies</li><li>Conduct user segmentation, pricing sensitivity check &amp; risk-based pricing on consumer lending products</li><li>Analyze user behaviors in the ecosystem, do problem-solving, and provide proposals to the management on risk control, UX improvement, and onboarding channel management&nbsp;</li><li>Prepare Risk reporting, position reporting, monitoring dashboards, and present recommendations</li><li>Support credit business growth by defining &amp; analyzing possible risks and consequences, and designing processes to eliminate and mitigate</li><li>Work closely with other business stakeholders and share insights of risk management</li>"},{"text":"What You Will Need","content":"<li>Have experience in lending business at least 2 years</li><li>Have experience in conducted detailed risk assessments&nbsp;</li><li>Have experience in analyzing documents, statistics, reports and trends of both internal &amp; external data</li><li>Have good communication and adaptive skills, be responsible and discipline in data providing</li><li>Have knowledge and experience of working with SQL, if proficient will be a big advantage. Python is a bonus item</li><li>Independent, organized, highly analytical and proactive</li>"}],"text":"Risk Strategy - Consumer Lending #9919","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/e33b73ae-63e2-4e9c-aff9-03e9127e4e4e","applyUrl":"https://jobs.lever.co/GoToGroup/e33b73ae-63e2-4e9c-aff9-03e9127e4e4e/apply"},{"additionalPlain":"About The Team\n\nStep into our dynamic team– a powerhouse of talent, crafting strategies that drive impact at scale in the nation's booming digital economy. Imagine: each of us is like a unique puzzle piece, coming together to form a cohesive vision for success. From strategy to execution, we're a well-oiled machine, working seamlessly to empower Gojek’s nationwide sales team.\nBut it's not just about work. We believe in fostering joy and connection, whether over a meal or through shared laughter. Working with us means guidance and support, while maintaining your independence and flexibility. Together, we'll navigate challenges and seize opportunities, all while empowering Indonesians to face the digital revolution forward.\nReady to join a team shaping the future of sales strategy and be the drivers of change in Indonesia's digital landscape? Join us and be part of something extraordinary!\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Step into our dynamic team– a powerhouse of talent, crafting strategies that drive impact at scale in the nation's booming digital economy. Imagine: each of us is like a unique puzzle piece, coming together to form a cohesive vision for success. From strategy to execution, we're a well-oiled machine, working seamlessly to empower Gojek’s nationwide sales team.</span></div><div><span style=\"font-size: 10pt\">But it's not just about work. We believe in fostering joy and connection, whether over a meal or through shared laughter. Working with us means guidance and support, while maintaining your independence and flexibility. Together, we'll navigate challenges and seize opportunities, all while empowering Indonesians to face the digital revolution forward.</span></div><div><span style=\"font-size: 10pt\">Ready to join a team shaping the future of sales strategy and be the drivers of change in Indonesia's digital landscape? Join us and be part of something extraordinary!</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710312757111,"descriptionPlain":"About The Role\n\nJoin our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">Join our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","id":"a5f5f567-0e95-4763-8c50-c4dcfb0b757e","lists":[{"text":"What You Will Do","content":"<li>Develop comprehensive sales strategies and oversee the end-to-end planning process to ensure optimal results while maintaining efficiency levels.</li><li>Define Objectives and Key Results (OKRs), metrics, and targets for the sales team to drive performance and success.</li><li>Design and implement incentive schemes, conduct end-to-end calculations, and perform industry benchmarking to enhance sales effectiveness.</li><li>Lead the go-to-market sales strategy for special projects and new products, aligning with partner needs and market demands.</li><li>Utilize data-driven analysis to derive actionable insights, fostering accelerated growth and increased operational efficiency.</li><li>Collaborate cross-functionally with product, marketing, sales, and other stakeholders to align strategies derived from data-driven analysis and execute plans effectively.</li><li>Represent the Sales Strategy team in industry events, trainings, and workshops as necessary&nbsp;Provide regular and ad-hoc impact reports and analyses to senior management, offering insights into performance and growth opportunities for the business.</li>"},{"text":"What You Will Need","content":"<li>4 years+ relevant working experience in strategy,&nbsp; business development, management consulting or other related roles that require strong analytical skills, problem-solving, and business acumen</li><li>A structured and analytical thinking process to develop frameworks, project charters and prioritization</li><li>Strong business sense and ability to articulate complex analysis results to a wide range of audiences and translate the results to actionable business insights</li><li>Proficiency in basic modeling - market sizing, business projection, scenario analysis.</li><li>Have good presentation skills - esp. the ability to present during problem solving session with other stakeholders (working-level or leadership)&nbsp;</li><li>Solid track record of stakeholder management</li><li>Proficiency in SQL/query is preferred, but not mandatory (still essential in executing the role, and will need to learn basic SQL on-the-job)</li>"}],"text":"Sales Strategy Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">Join our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","descriptionBodyPlain":"About The Role\n\nJoin our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a5f5f567-0e95-4763-8c50-c4dcfb0b757e","applyUrl":"https://jobs.lever.co/GoToGroup/a5f5f567-0e95-4763-8c50-c4dcfb0b757e/apply"},{"additionalPlain":"The Sales Excellence team is an integral part of the Greater Sales Team, and based in HQ Office Jakarta, Indonesia. We work closely with both the Sales Strategy, product, function teams as well as the Sales team in the regions. Our primary focus is to ensure that the company’s KRs are achieved by providing the support to the sales and sales support teams needed to excel in their job, which could vary from solving merchant’s onboarding issues, improving business processes, to supporting GoFood campaigns.\n\nIn the past, our team has created the automated consolidated performance monitoring dashboard from scratch that became the compass of the sales team.When our scope is broadened to include Enterprise sales team, we not only replicate the performance dashboard but also revamped the data structure to make consistent with the rest of the sales team. Going forward, we expect to do more analytical projects that could help guide the sales team and improve their efficiency.\n\nIn our spare time, you can find us binge watching all kinds of shows on Netflix (from Documentaries all the way to K Dramas!). On top of that, we are a tight-knit, fun-loving, collaborative and hardworking individuals who enjoy each other's company, especially over good food and good conversation :) (because who doesn’t?)\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">The Sales Excellence team is an integral part of the Greater Sales Team, and based in HQ Office Jakarta, Indonesia. We work closely with both the Sales Strategy, product, function teams as well as the Sales team in the regions. Our primary focus is to ensure that the company’s KRs are achieved by providing the support to the sales and sales support teams needed to excel in their job, which could vary from solving merchant’s onboarding issues, improving business processes, to supporting GoFood <a href=\"http://campaigns.In\">campaigns.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://campaigns.In\">In</a> the past, our team has created the automated consolidated performance monitoring dashboard from scratch that became the compass of the sales <a href=\"http://team.When\">team.When</a> our scope is broadened to include Enterprise sales team, we not only replicate the performance dashboard but also revamped the data structure to make consistent with the rest of the sales team. Going forward, we expect to do more analytical projects that could help guide the sales team and improve their <a href=\"http://efficiency.In\">efficiency.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://efficiency.In\">In</a> our spare time, you can find us binge watching all kinds of shows on Netflix (from Documentaries all the way to K Dramas!). On top of that, we are a tight-knit, fun-loving, collaborative and hardworking individuals who enjoy each other's company, especially over good food and good conversation :) (because who doesn’t?)</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714365620212,"descriptionPlain":"As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team \n","description":"<div><span style=\"font-size: 10pt\">As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team </span></div>","id":"f39be622-e287-41df-bcb2-7389478a1be4","lists":[{"text":"What you will do","content":"<li>Oversee the performance tracking and monitoring of the whole Enterprise Sales Team</li><li>Ensure that the Enterprise Sales team has all the data they need to achieve their target for all KRs</li><li>Act as a consultant and discuss with the EKAMs on the business needs/challenges that their merchants are facing</li><li>Provide data and data driven insights to EKAMs to help address said challenges</li><li>Assist in performing periodical business analysis, tailored to each merchant based on their business needs</li><li>Assist in the daily tasks and smooth operations of Enterprise Sales Support</li><li>Liaise with HO team for merchant x sales account management, target, tracker, etc</li><li>Liaise with other teams (e.g. BI, Salestech) when there is new KRs / data point that needs to be analysed</li><div><br></div>"},{"text":"What you will need","content":"<li>At least 2 years of relevant experience in data analytics&nbsp;</li><li>Good business acumen, able to develop analysis with good storyline and flow</li><li>Proficient in SQL, Google BigQuery and the reporting thereof is an advantage</li><li>Proficient in handling large amount of data using tools/softwares such as google sheet, metabase and datastudio</li><li>Great communication and understanding skill, able to explain technical terms in simple, understandable manner</li><li>Experienced in working with multiple stakeholders from different backgrounds with good level of empathy</li><li>High interest and eagerness to analyse different parts of businesses to help achieve growth</li><li>Clear understanding of Gojek services and the tech industry</li><div><br></div>"}],"text":"Sales Support Senior Associate, Enterprise","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team </span></div>","descriptionBodyPlain":"As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team \n","hostedUrl":"https://jobs.lever.co/GoToGroup/f39be622-e287-41df-bcb2-7389478a1be4","applyUrl":"https://jobs.lever.co/GoToGroup/f39be622-e287-41df-bcb2-7389478a1be4/apply"},{"additionalPlain":"About Us\n\n Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About Us</b></div><div><br></div><div><span style=\"font-size: 16px\">&nbsp;Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.</span></div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1698657930091,"descriptionPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","id":"376aefd9-6d6c-4e57-8040-a3b0dd416d26","lists":[{"text":"What You Will Do","content":"<li>Conduct feature and exploratory tests on Mobile apps (Android, iOS)and API. Engage in continuous automation throughout agile development iterations to ensure zero defects</li><li>Work closely with the cross-functional product team, including PMs, Designers, Developers, and QA managers right from the inception of features</li><li>Create and execute the test cases for features with minimum guidance and maintain and add new cases in automation frameworks on either UI/API test level and reduce manual efforts during regression testing&nbsp;</li><li>Participate in iteration planning, providing input on required testing tasks, processes, and associated effort for the selected user stories</li><li>Design, develop and execute test automation for relevant areas of ownership independently</li><li>Contribute to automation framework development (Libraries / new features / extensions)</li><li>Provide automated test coverage for corner cases, revenue, impact, usability, backend services, and exploratory testing</li><li>As a fast learner and team player, you’re comfortable teaching yourself new skills quickly and can thrive in a complex and fast-paced environment while making strong technical individual contributions</li>"},{"text":"What You Will Need","content":"<li>2 to 4 years of experience in the field of professional testing</li><li>Good prior experience in Manual &amp; Automation test methodologies</li><li>Sound knowledge of testing/automating the tests at different layers of the application</li><li>Comfortable writing clean code in one programming language (Java/Kotlin is a plus)</li><li>Good Understanding of Tools like Selenium, Appium, Cucumber BDD, TestNG Maven/Gradle, and CI/CD tools like Jenkins, GitLab, etc</li><li>Should have exposure to tools like Postman, Charles Proxy/MITM&nbsp;</li><li>Working knowledge of Git</li><li>Experience in developing test automation framework from scratch is a big plus</li>"}],"text":"SDET - Automation Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/376aefd9-6d6c-4e57-8040-a3b0dd416d26","applyUrl":"https://jobs.lever.co/GoToGroup/376aefd9-6d6c-4e57-8040-a3b0dd416d26/apply"},{"additionalPlain":"About our Team\n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About our Team</b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1700733541559,"descriptionPlain":"About the Role:\n\nWe are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,  you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.\n\n\n","description":"<div><b>About the Role:</b></div><div><br></div><div>We are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,&nbsp; you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.</div><div><br></div><div><br></div>","id":"472ae629-87cb-4f8c-bb69-eae35cf3751e","lists":[{"text":"What you’ll do","content":"<li>Develop and implement test automation tools and frameworks to ensure continuous testing of product features</li><li>Collaborate with product managers and engineers to understand requirements, document test cases, and define rollout/release strategies</li><li>Perform performance, load, and scalability testing for new features and product releases.</li><li>Debug and diagnose defects uncovered during testing to determine root causes. Log bugs accurately and communicate issues clearly to engineering teams</li><li>Monitor systems in production to identify and troubleshoot defects or anomalous behavior.</li><li>Stay up-to-date with new testing methodologies and tools</li><div><br></div><div><br></div>"},{"text":"What you’ll need","content":"<li>5+ years experience in a QA, SDET or DevX role, with expertise in test automation</li><li>Proficiency with one or more programming languages like Java, Go, Kotlin, Python</li><li>Experience testing complex distributed systems and microservices architectures</li><li>Understanding of SQL and NoSQL databases</li><li>Familiarity with technologies like Kafka, Docker, Kubernetes</li><li>Knowledge of financial systems, mobile apps, or SaaS products is a plus</li><li>Excellent verbal and written communication skills</li>"}],"text":"SDET - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role:</b></div><div><br></div><div>We are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,&nbsp; you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role:\n\nWe are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,  you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/472ae629-87cb-4f8c-bb69-eae35cf3751e","applyUrl":"https://jobs.lever.co/GoToGroup/472ae629-87cb-4f8c-bb69-eae35cf3751e/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1716277072995,"descriptionPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"0169bd4d-f352-4162-8e8e-2c09df5b8db4","lists":[{"text":"What Will You Do","content":"<li>Attend daily standup meetings, do sprint planning/backlog reviews, and communicate project/development status to internal and external teams in a timely fashion;</li><li>Analyze and estimate product features defined by the Product Manager/Product Owner from a testing point of view;</li><li>Build, contribute, and maintain automated test suites and frameworks on Apps and API utilizing Java/JavaScript or similar.</li><li>Ability to understand product feature requirements and test them effectively.</li><li>Ability to work on Functional, automation testing for Web, APIs, and mobile apps both Android and iOS.</li><li>Work with Business, Product, and Dev teams in close coordination.</li><li>Well-versed with Agile methodology, SDLC, and STLC.</li>"},{"text":"What You Will Need","content":"<li>Preferably 2-5 years of experience in professional testing in /API/Web using RestAssured with Java, Appium (Android &amp; iOS) Selenium, or similar frameworks where the experience in service virtualization / WebServices-API testing through POSTMAN or any similar tool.</li><li>Basic knowledge of Java, test Parallelisation (API and App), cross-browser coverage, Selenium with Java, and Reporting Plugins i.e. Allure, and Extent.</li><li>Hands-on experience with Rest Assured, Selenium/Appium, IntelliJ, and TestNG or similar frameworks.</li><li>Agile / Scrum / Kanban experience Soft Skills and ability to work and communicate with cross-functional teams.</li><li>Experience in CI/CT using Jenkins or similar continuous integration, release, and change management tools i.e. GIT or similar GitLab.</li><li>Good analytical, problem solving and debugging skills</li>"}],"text":"SDET Engineer - Consumer Experience (Bangalore)","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/0169bd4d-f352-4162-8e8e-2c09df5b8db4","applyUrl":"https://jobs.lever.co/GoToGroup/0169bd4d-f352-4162-8e8e-2c09df5b8db4/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716293425375,"descriptionPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"7b320e00-3745-4478-8097-93405566819d","lists":[{"text":"What Will You Do","content":"<li>Attend daily standup meetings, do sprint planning/backlog reviews, and communicate project/development status to internal and external teams in a timely fashion;</li><li>Analyze and estimate product features defined by the Product Manager/Product Owner from a testing point of view;</li><li>Build, contribute, and maintain automated test suites and frameworks on Apps and API utilizing Java/JavaScript or similar.</li><li>Ability to understand product feature requirements and test them effectively.</li><li>Ability to work on Functional, automation testing for Web, APIs, and mobile apps both Android and iOS.</li><li>Work with Business, Product, and Dev teams in close coordination.</li><li>Well-versed with Agile methodology, SDLC, and STLC.</li>"},{"text":"What You Will Need","content":"<li>Preferably 2-5 years of experience in professional testing in /API/Web using RestAssured with Java, Appium (Android &amp; iOS) Selenium, or similar frameworks where the experience in service virtualization / WebServices-API testing through POSTMAN or any similar tool.</li><li>Basic knowledge of Java, test Parallelisation (API and App), cross-browser coverage, Selenium with Java, and Reporting Plugins i.e. Allure, and Extent.</li><li>Hands-on experience with Rest Assured, Selenium/Appium, IntelliJ, and TestNG or similar frameworks.</li><li>Agile / Scrum / Kanban experience Soft Skills and ability to work and communicate with cross-functional teams.</li><li>Experience in CI/CT using Jenkins or similar continuous integration, release, and change management tools i.e. GIT or similar GitLab.</li><li>Good analytical, problem solving and debugging skills</li>"}],"text":"SDET Engineer - Consumer Experience (Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7b320e00-3745-4478-8097-93405566819d","applyUrl":"https://jobs.lever.co/GoToGroup/7b320e00-3745-4478-8097-93405566819d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716279174071,"descriptionPlain":"\nJoin our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.\n","description":"<div><br></div><div><span style=\"font-size: 16px\">Join our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.</span></div>","id":"f1204bec-20bc-447e-b01c-74ac912b16da","lists":[{"text":"What You Will Do","content":"<li>Be the expert in using data to measure and analyze business performance.</li><li>Explore business issues/opportunities, uncover insights and/or identify targeted areas for business growth.</li><li>Lead new data analytics capability rollouts and/or data-led initiatives throughout organization.</li><li>Monitor key metrics and alert the business on potential issues.</li><li>Analyze operational efficiency and build business models to guide decision-making.</li><li>Design market/business intelligence reports and performance measurement dashboards to share with senior management.</li><li>Able to analyze business performance following the analysis framework.</li><li>Able to create reports/ dashboards individually.</li><li>Collaborates with business stakeholders to gather requirements and deliver actionable insights.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's or Master's degree in Computer Science, Statistics, Business Administration, or a related field.</li><li>2-5 years of experience in a BI or analytics role.</li><li>Proficiency in SQL and database management systems like MySQL, SQL Server, or Oracle.</li><li>Advanced knowledge of data modeling and data warehousing concepts.</li><li>Strong understanding of business processes and the ability to translate business requirements into technical solutions.</li><li>Familiarity with cloud platforms such as AWS, Azure, or Google Cloud Platform.</li><li>Experience with BI reporting tools and dashboard development.</li><li>Proven ability to work with cross-functional teams and manage stakeholders.</li><li>Familiarity with business operations in the field.</li>"}],"text":"Senior Business Intelligence","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><br></div><div><span style=\"font-size: 16px;\">Join our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.</span></div>","descriptionBodyPlain":"\nJoin our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f1204bec-20bc-447e-b01c-74ac912b16da","applyUrl":"https://jobs.lever.co/GoToGroup/f1204bec-20bc-447e-b01c-74ac912b16da/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1704858182467,"description":"","descriptionPlain":"","id":"acc8cca4-0f98-4c31-8d24-76446d0ce0c5","lists":[{"text":"What You Will Do?","content":"<li>Create business impact by working on strategic initiatives in Gojek focussed on analysis and experimentation.&nbsp;</li><li>Build &amp; maintain dashboards for tracking business performance and product adoption.</li><li>Deliver insight, analysis using statistical tools, data visualization, and business use case to product and business team.</li><li>Partner closely with Product Managers and Business teams to help them make decisions.</li><li>Handle Gojek Product and Business team in identifying product or business opportunities and support in product delivery such as experimentation.</li><li>Automate data extraction by creating denormalized tables or data mart based on business or product requirement.</li>"},{"text":"What You Will Need?","content":"<li>At least 3 years of working experience with basic statistics or product analytics. Furthermore with a strong business sense and data-driven role background</li><li>Expert in SQL , data visualization and dashboarding .&nbsp;</li><li>Comfortable working both independently with minimal guidance and in a team setting</li><li>Ability to use critical thinking daily to manage daily tasks while being goal-oriented</li><li>Ability to transform an ambiguous business or product problem into a well-scoped and impactful analysis; able to design simple experiments</li><li>Exposure to visualization and dashboarding tools like&nbsp; &nbsp;Tableau, Metabase, Google Data Studio, Clevertap, Python, etc is a plus.</li>"},{"text":"About The Team","content":"<li>Our Data Analyst team currently consists of 40+ people based in India and Indonesia who run Southeast Asia’s leading Gojek business. We oversee all things data and work to become a thought partner for our Business Users, Product Team, and Decision Makers. It’s our job to ensure that they have a structural approach to data-driven problem-solving. Right now, our focus revolves: how to make customers, drivers, and merchants happy and delighted. We have so far created millions of dollar impact across different journeys of customers, drivers and merchants</li><div><br></div><li>We work with the PMs hand-in-glove - be it constructing a new machine learning solution or brainstorming on a problem like how do we reduce the wait time for the drive, how do we improve assortment, should we treat convenience seeking customer differently from value seeking customer etc</li><div><br></div><li>As a team, we’re concerned not only with the growth of the company, but each other’s personal and professional growths, too. Along with us coming from diverse backgrounds, we often have fun sessions to talk about everything and anything from data information to our current movie list.</li><div><br></div>"}],"text":"Senior Data Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/acc8cca4-0f98-4c31-8d24-76446d0ce0c5","applyUrl":"https://jobs.lever.co/GoToGroup/acc8cca4-0f98-4c31-8d24-76446d0ce0c5/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1707296213776,"description":"","descriptionPlain":"","id":"f680021a-b5cc-43ea-a048-255827353a92","lists":[{"text":"What You Will Do?","content":"<li>Create business impact by working on strategic initiatives in Gojek focussed on analysis and experimentation.&nbsp;</li><li>Build &amp; maintain dashboards for tracking business performance and product adoption.</li><li>Deliver insight, analysis using statistical tools, data visualization, and business use case to product and business team.</li><li>Partner closely with Product Managers and Business teams to help them make decisions.</li><li>Handle Gojek Product and Business team in identifying product or business opportunities and support in product delivery such as experimentation.</li><li>Automate data extraction by creating denormalized tables or data mart based on business or product requirement.</li>"},{"text":"What You Will Need?","content":"<li>At least 3 years of working experience with basic statistics or product analytics. Furthermore with a strong business sense and data-driven role background</li><li>Expert in SQL , data visualization and dashboarding .&nbsp;</li><li>Comfortable working both independently with minimal guidance and in a team setting</li><li>Ability to use critical thinking daily to manage daily tasks while being goal-oriented</li><li>Ability to transform an ambiguous business or product problem into a well-scoped and impactful analysis; able to design simple experiments</li><li>Exposure to visualization and dashboarding tools like&nbsp; &nbsp;Tableau, Metabase, Google Data Studio, Clevertap, Python, etc is a plus.</li>"},{"text":"About The Team","content":"<li>Our Data Analyst team currently consists of 40+ people based in India and Indonesia who run Southeast Asia’s leading Gojek business. We oversee all things data and work to become a thought partner for our Business Users, Product Team, and Decision Makers. It’s our job to ensure that they have a structural approach to data-driven problem-solving. Right now, our focus revolves: how to make customers, drivers, and merchants happy and delighted. We have so far created millions of dollar impact across different journeys of customers, drivers and merchants</li><div><br></div><li>We work with the PMs hand-in-glove - be it constructing a new machine learning solution or brainstorming on a problem like how do we reduce the wait time for the drive, how do we improve assortment, should we treat convenience seeking customer differently from value seeking customer etc</li><div><br></div><li>As a team, we’re concerned not only with the growth of the company, but each other’s personal and professional growths, too. Along with us coming from diverse backgrounds, we often have fun sessions to talk about everything and anything from data information to our current movie list.</li><div><br></div>"}],"text":"Senior Data Analyst - India","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/f680021a-b5cc-43ea-a048-255827353a92","applyUrl":"https://jobs.lever.co/GoToGroup/f680021a-b5cc-43ea-a048-255827353a92/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"HoldCo - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716264950378,"description":"","descriptionPlain":"","id":"73e71b86-d53f-4841-92ec-4bd09a0ef479","lists":[{"text":"What You Will Do","content":"<li>explore existing and new data sources and facilitate the integration to the Data Warehouse.</li><li>Design and develop Data Quality Framework across Data Platform.</li><li>Design, implement Data Model for enterprise data warehouse.</li><li>Classifying data based Data Governance policy and Data Access Framework.</li><li>Develop data definition and metrics and maintain the consistency across the Data team.</li><li>Modify existing structured and unstructured data integration solutions for rapidly evolving business needs..</li><li>Collaborate with a cross-functional team to resolve data quality and operational issues, as&nbsp; well as delivering solutions to meet business needs.</li><li>Create conceptual models and data flow diagrams.</li><li>Participate with end users to gather requirements and consult on data integration solutions.</li><li>Receive and adhere to project delivery deadlines.&nbsp;&nbsp;</li><li>Migrate code across environments and leverage a source code management system.</li><li>Design, build, and optimize data pipelines, ETL processes, and data infrastructure in the field.</li><li>Develop and maintain proper documentation for data pipeline and service.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's or Master's degree in Computer Science, Engineering, Information Systems, or related fields.</li><li>2-5 years of experience in data engineering, software engineering, or a similar role.</li><li>Proficiency in programming languages such as Python, Java, or Scala.</li><li>Solid understanding of SQL, database management systems, and data modeling concepts.</li><li>Experience with big data technologies such as Hadoop, Spark, or Kafka.</li><li>Hands-on experience with cloud platforms such as AWS, Azure, or Google Cloud Platform.</li><li>Strong problem-solving skills and attention to detail.</li><li>Ability to design and implement scalable data pipelines and ETL processes.</li><li>Excellent communication and collaboration skills to work effectively with cross-functional teams.</li><li>Deeper understanding of data engineering concept, programming language, and big data technology.</li>"}],"text":"Senior Data Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/73e71b86-d53f-4841-92ec-4bd09a0ef479","applyUrl":"https://jobs.lever.co/GoToGroup/73e71b86-d53f-4841-92ec-4bd09a0ef479/apply"},{"additionalPlain":"About The Team\n\nOur GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. \n\nOur service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.\n\nAs a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Our service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.</span></div><div><br></div><div><span style=\"font-size: 10pt\">As a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710229562529,"descriptionPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nAs a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.\n","description":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div><span style=\"font-size: 10pt\">As a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.</span></div>","id":"10dbc666-80f8-4250-85ee-59fa92d056aa","lists":[{"text":"What You Will Do","content":"<li>Build and maintain data products for the data engineering platform for the data infrastructure and streaming services.</li><li>Write code that is clear, concise, performant, tested and easily understood by others</li><li>Containerization and deployment of microservices on Kubernetes</li><li>Design and deploy the data products on the Google Cloud Platform</li><li>Collaborate with the data team and business teams to understand their requirements</li><li>Auto-scaling and monitoring performance of the streaming Infrastructure and applications by using Prometheus and Grafana or similar tools</li>"},{"text":"What You Will Need","content":"<li>A minimum of 4+ years of experience in a software engineer role, coupled with a graduate degree in a relevant field such as Computer Science.</li><li>Hands-on experience in writing code in either Java or Golang.</li><li>Basic understanding of containerization, including Docker or Kubernetes.</li><li>Good understanding of database structures and data warehousing principles.</li><li>Strong analytical skills, the ability to work effectively in cross-functional teams, meticulous attention to detail, self-motivation, adaptability, and a strong sense of ownership</li><li>Strong interpersonal and communication skills</li>"}],"text":"Senior Data Engineer (Data Platform) - Payments Data Products & Infra","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div><span style=\"font-size: 10pt;\">As a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.</span></div>","descriptionBodyPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nAs a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/10dbc666-80f8-4250-85ee-59fa92d056aa","applyUrl":"https://jobs.lever.co/GoToGroup/10dbc666-80f8-4250-85ee-59fa92d056aa/apply"},{"additionalPlain":"About The Team\nThe GTF Data Science team builds critical data science/ML models to make GoPay a safe, trusted and fun way to do payments. Our team members come from diverse backgrounds, and use mathematics, statistics, machine learning, deep learning to solve some of the toughest business problems in GoPay. We are passionate about data science, innovation, and their impacts to the business\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><span style=\"font-size: 10pt\">The GTF Data Science team builds critical data science/ML models to make GoPay a safe, trusted and fun way to do payments. Our team members come from diverse backgrounds, and use mathematics, statistics, machine learning, deep learning to solve some of the toughest business problems in GoPay. We are passionate about data science, innovation, and their impacts to the business</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1684915963454,"descriptionPlain":"About the Role\nAs a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.\n","description":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt\">As a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.</span></div>","id":"a539cdc1-109f-48e8-9b24-1a831b735f01","lists":[{"text":"What Will You Do","content":"<li>Combine technical and business knowledge to develop innovative data science solutions</li><li>Rapidly prototype solutions and contribute to product and feature discussions</li><li>Analyze large volume of data and generate actionable insights</li><li>Experiment with different ML techniques and research the latest technologies (e.g. LLM) to determine the best approach</li><li>Own end-to-end solutioning, from formulating the technical problem to deployment of the solution as part of a cross-functional team of scientists, analysts, product managers, and engineers</li>"},{"text":"What You Will Need","content":"<li>6+ years of experience developing ML solutions, 2-3 years of <b>fraud risk experience in account takeover, scam, and abuse</b></li><li>Strong quantitative and problem-solving skills</li><li>Solid understanding of Statistics/ML fundamentals and experience in Python, R</li><li>Communication skills to engage with business stakeholders to understand their needs and effectively communicate the results of the analytical solutions</li><li>Ability to write clear and concise technical documentation</li><li>Ph.D. or Masters in a quantitative discipline (good to have - Experienced - Bachelor)</li>"}],"text":"Senior Data Scientist","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt;\">As a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.</span></div>","descriptionBodyPlain":"About the Role\nAs a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a539cdc1-109f-48e8-9b24-1a831b735f01","applyUrl":"https://jobs.lever.co/GoToGroup/a539cdc1-109f-48e8-9b24-1a831b735f01/apply"},{"additionalPlain":"About The Team:\nThe GoPay Data Science team builds critical ML components/models that go into the engineering systems, making GoPay a safe, trusted, and fun way to make payments. Our team members come from varied backgrounds and bring with them a wide set of skills (mathematics, statistics, machine learning, deep learning, etc.), which we apply to some of the toughest business problems at GoPay. We are enthusiastic about both data science techniques and methods, as well as the business impact of our models, and have numerous internal forums where sharing, discussions, and presentations by team members occur.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>About The Team:</div><div>The GoPay Data Science team builds critical ML components/models that go into the engineering systems, making GoPay a safe, trusted, and fun way to make payments. Our team members come from varied backgrounds and bring with them a wide set of skills (mathematics, statistics, machine learning, deep learning, etc.), which we apply to some of the toughest business problems at GoPay. We are enthusiastic about both data science techniques and methods, as well as the business impact of our models, and have numerous internal forums where sharing, discussions, and presentations by team members occur.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1713498936579,"descriptionPlain":"As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.\n","description":"<div><span style=\"font-size: 10pt\">As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.</span></div>","id":"cc1c5265-723f-48c1-a04d-b07cc49b3e42","lists":[{"text":"What you will do?","content":"<li>Work with data like images, videos, speech and real-time sensor data, etc.</li><li>Design, train, optimize, and deploy deep learning/computer vision models.</li><li>Develop unit tests, documentation for features, and evaluate and benchmark model performance and quality.</li><li>Communicate effectively between the business team and the engineering team to gather and implement project requirements.</li><li>Own the end-to-end process, from defining the technical problem to deploying the solution in collaboration with engineers.</li><li>Participate in internal and external conferences and workshops.</li>"},{"text":"What you will need?","content":"<li>5+ years of experience in developing Deep Learning/Computer Vision and classic ML models for practical applications.</li><li>Familiar with deep learning frameworks, such as PyTorch, Python, C++, NCNN, etc.</li><li>Have practical knowledge of image/video processing techniques and deep learning in the computer vision domain.</li><li>Proven track record in top-tier open data science/deep learning competitions and/or contributions to deep learning/data science frameworks.</li><li>Familiarity with working knowledge in Android/iOS or GCP.</li><li>Strong communication skills to understand business stakeholders' needs and to effectively convey the results of analytical solutions.</li><li>Ability to write clear and concise technical documentation.</li>"}],"text":"Senior Data Scientist - Computer Vision - KYC","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.</span></div>","descriptionBodyPlain":"As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/cc1c5265-723f-48c1-a04d-b07cc49b3e42","applyUrl":"https://jobs.lever.co/GoToGroup/cc1c5265-723f-48c1-a04d-b07cc49b3e42/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705919854389,"descriptionPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","description":"<div><span style=\"font-size: 10pt\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","id":"33ecd052-8ff7-45aa-b712-d1060cef1c8d","lists":[{"text":"What You Will Do","content":"<li>Understand business concerns and formulate them as technical problems that can be solved using data and math/stats/ML</li><li>Work with Product managers, Machine Learning Engineers, and Business Users to build, deploy, and scale Data Science solutions on Driver Experience and Earning related initiatives at Gojek that impact the driver’s livelihood</li><li>Use your experience in Data Science, Machine Learning, Software Engineering, distributed systems to rapidly prototype and deploy the systems to production</li><li>Work with Business teams to continuously refine, improve the systems to cater to ever-changing Gojek need</li><li>sAnalyze large volume data and generate insights that will be actionable</li><li>Design and conduct experiments to measure the impact of ML solutions or product features launched by Gojek Marketplace Team (Pricing and Matchmaking) </li>"},{"text":"What You Will Need","content":"<li>Bachelor's/Master’s Degree in Computer Science, Statistics, Operation research or other quantitative fields, with 3-5 years of relevant experience</li><li>Hands-on experience in Statistics/ML fundamentals and demonstrated experience in <b>Python</b>, SQL, and basic visualization tools</li><li>Solid knowledge of Data Science and Machine Learning fundamentals, with proven experience to formulate Data Science solutions to business problems</li><li>Ability to write clear and concise technical documentation</li><li>Experience in taking Data Science models to production&nbsp;</li><li>Expertise to conduct analysis independently for a business problem through data manipulation, formulation of hypotheses, design and statistical analysis of experiments to test them</li>"},{"text":"Knowing the Following Would be a Bonus","content":"<li>Preferably, has domain experience in Machine Learning Engineering&nbsp;</li><li>Experience in Operation Research&nbsp;Experience in remote development using cloud platforms (GCS, AWS, Azure) and data processing frameworks/ schedulers (Flink, Airflow)&nbsp;</li><li>Experience in software engineering workflow (version control using Git, CI/CD)</li><li>Prior experience with dbt is a plus</li>"}],"text":"Senior Data Scientist - Marketplace","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","descriptionBodyPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/33ecd052-8ff7-45aa-b712-d1060cef1c8d","applyUrl":"https://jobs.lever.co/GoToGroup/33ecd052-8ff7-45aa-b712-d1060cef1c8d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1705993404249,"descriptionPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","description":"<div><span style=\"font-size: 10pt\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","id":"86673189-b5e2-4ace-b1a3-5ab20f14d84d","lists":[{"text":"What You Will Do","content":"<li>Understand business concerns and formulate them as technical problems that can be solved using data and math/stats/ML</li><li>Work with Product managers, Machine Learning Engineers, and Business Users to build, deploy, and scale Data Science solutions on Driver Experience and Earning related initiatives at Gojek that impact the driver’s livelihood</li><li>Use your experience in Data Science, Machine Learning, Software Engineering, distributed systems to rapidly prototype and deploy the systems to production</li><li>Work with Business teams to continuously refine, improve the systems to cater to ever-changing Gojek need</li><li>sAnalyze large volume data and generate insights that will be actionable</li><li>Design and conduct experiments to measure the impact of ML solutions or product features launched by Gojek Marketplace Team (Pricing and Matchmaking) </li>"},{"text":"What You Will Need","content":"<li>Bachelor's/Master’s Degree in Computer Science, Statistics, Operation research or other quantitative fields, with 3-5 years of relevant experience</li><li>Hands-on experience in Statistics/ML fundamentals and demonstrated experience in <b>Python</b>, SQL, and basic visualization tools</li><li>Solid knowledge of Data Science and Machine Learning fundamentals, with proven experience to formulate Data Science solutions to business problems</li><li>Ability to write clear and concise technical documentation</li><li>Experience in taking Data Science models to production&nbsp;</li><li>Expertise to conduct analysis independently for a business problem through data manipulation, formulation of hypotheses, design and statistical analysis of experiments to test them</li>"},{"text":"Knowing the Following Would be a Bonus","content":"<li>Preferably, has domain experience in Machine Learning Engineering&nbsp;</li><li>Experience in Operation Research&nbsp;Experience in remote development using cloud platforms (GCS, AWS, Azure) and data processing frameworks/ schedulers (Flink, Airflow)&nbsp;</li><li>Experience in software engineering workflow (version control using Git, CI/CD)</li><li>Prior experience with dbt is a plus</li>"}],"text":"Senior Data Scientist - Marketplace (India)","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","descriptionBodyPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/86673189-b5e2-4ace-b1a3-5ab20f14d84d","applyUrl":"https://jobs.lever.co/GoToGroup/86673189-b5e2-4ace-b1a3-5ab20f14d84d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1713852044349,"descriptionPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","description":"<div><span style=\"font-size: 10pt\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","id":"34f6146a-c482-407c-a31c-72ac9bb90a7c","lists":[{"text":"What You Will Do","content":"<li>Understand business concerns and formulate them as technical problems that can be solved using data and math/stats/ML</li><li>Work with Product managers, Machine Learning Engineers, and Business Users to build, deploy, and scale Data Science solutions on Driver Experience and Earning related initiatives at Gojek that impact the driver’s livelihood</li><li>Use your experience in Data Science, Machine Learning, Software Engineering, distributed systems to rapidly prototype and deploy the systems to production</li><li>Work with Business teams to continuously refine, improve the systems to cater to ever-changing Gojek need</li><li>Analyze large volume data and generate insights that will be actionable</li><li>Design and conduct experiments to measure the impact of ML solutions or product features launched by Gojek Marketplace Team (Pricing and Matchmaking) </li>"},{"text":"What You Will Need","content":"<li>Bachelor's/Master’s Degree in Computer Science, Statistics, Operation research or other quantitative fields, with 3-5 years of relevant experience</li><li>Hands-on experience in Statistics/ML fundamentals and demonstrated experience in <b>Python</b>, SQL, and basic visualization tools</li><li>Solid knowledge of Data Science and Machine Learning fundamentals, with proven experience to formulate Data Science solutions to business problems</li><li>Ability to write clear and concise technical documentation</li><li>Experience in taking Data Science models to production&nbsp;</li><li>Expertise to conduct analysis independently for a business problem through data manipulation, formulation of hypotheses, design and statistical analysis of experiments to test them</li>"},{"text":"Knowing the Following Would be a Bonus","content":"<li>Preferably, has domain experience in Machine Learning Engineering&nbsp;</li><li>Experience in Operation Research&nbsp;Experience in remote development using cloud platforms (GCS, AWS, Azure) and data processing frameworks/ schedulers (Flink, Airflow)&nbsp;</li><li>Experience in software engineering workflow (version control using Git, CI/CD)</li><li>Prior experience with dbt is a plus</li>"}],"text":"Senior Data Scientist - Marketplace (Singapore)","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","descriptionBodyPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/34f6146a-c482-407c-a31c-72ac9bb90a7c","applyUrl":"https://jobs.lever.co/GoToGroup/34f6146a-c482-407c-a31c-72ac9bb90a7c/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707210044551,"descriptionPlain":"Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment.\n","description":"<div><span style=\"font-size: 10pt\">Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment.</span></div>","id":"c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69","lists":[{"text":"What You Will Do","content":"<li>Handle end-to-end data pipelines from heterogeneous input and output for analytical purposes</li><li>Become data architect by implementing appropriate data modeling concepts depending on data type and use cases</li><li>Responsible for managing a single version of truth and turning data into critical information and knowledge that can be used to make sound business decisions</li><li>Define clear and well-scoped requirements documents, including specs and workflows, that are easily understood by technical and non-technical audiences</li><li>Work with data stakeholders (Product Managers, Product/Business Analysts and Product Engineers) to ship data warehouse features and data product improvements</li><li>Contribute to the product strategy and execute on the prioritized roadmap</li><li>Mentoring &amp; develop junior team members in the team</li>"},{"text":"What You Will Need","content":"<li>Have at least 4 years experience in data environment as Data Warehouse Developer</li><li>Advanced in SQL and data warehouse concepts</li><li>Advanced in more than one programming language, especially Python or Go or Java</li><li>Have experiences working with batch / real-time data processing, data modeling concepts, and implementation</li><li>Have experiences working in GCP data environment such as GCS &amp; Bigquery</li><li>Analytical and data-driven, you love digging into the data to understand what’s happening and define &amp; measure success on every project</li><li>Good communication &amp; interpersonal skills</li>"}],"text":"Senior Data Warehouse Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment.</span></div>","descriptionBodyPlain":"Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69","applyUrl":"https://jobs.lever.co/GoToGroup/c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69/apply"},{"additionalPlain":"About The Team\n\nOur Data Warehouse team is based in Jakarta & Bangalore. Working alongside stakeholders, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions. This includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.\n\nOur team works hard but plays hard, too. We mean the latter in a literal sense, because we're a team full of musicians! We have 2 pianists, 1 guitarist, 1 drummer, more than 2 male singers, 1 female singer, 1 Rockstar, and 1 dangdut singer (yes, you read it right ). So, you best believe that we have several karaoke nights together! Even if you aren't musically inclined, no fear. We love bonding over card games (Werewolf is a team favorite), and even hosting mini talent shows for our own entertainment. Join us and show your hidden skills!\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our Data Warehouse team is based in Jakarta &amp; Bangalore. Working alongside stakeholders, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions. This includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.</span></div><div><br></div><div><span style=\"font-size: 10pt\">Our team works hard but plays hard, too. We mean the latter in a literal sense, because we're a team full of musicians! We have 2 pianists, 1 guitarist, 1 drummer, more than 2 male singers, 1 female singer, 1 Rockstar, and 1 dangdut singer (yes, you read it right ). So, you best believe that we have several karaoke nights together! Even if you aren't musically inclined, no fear. We love bonding over card games (Werewolf is a team favorite), and even hosting mini talent shows for our own entertainment. Join us and show your hidden skills!</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1713498805305,"descriptionPlain":"Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment. \n\nGrowth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey & it will be good for your career growth forward.\n","description":"<div><span style=\"font-size: 10pt\">Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Growth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey &amp; it will be good for your career growth forward.</span></div>","id":"2b430ba4-210e-4db6-a63e-c11459a0304f","lists":[{"text":"","content":"<li>Handle end-to-end data pipelines from heterogeneous input and output for analytical purposes</li><li>Become data architect by implementing appropriate data modeling concepts depending on data type and use cases</li><li>Responsible for managing a single version of truth and turning data into critical information and knowledge that can be used to make sound business decisions</li><li>Define clear and well-scoped requirements documents, including specs and workflows, that are easily understood by technical and non-technical audiences</li><li>Work with data stakeholders (Product Managers, Product/Business Analysts and Product Engineers) to ship data warehouse features and data product improvements</li><li>Contribute to the product strategy and execute on the prioritized roadmap</li><li>Mentoring &amp; develop junior team members in the team</li>"},{"text":"","content":"<li>Have at least 4 years experience in data environment as Data Warehouse Developer</li><li>Advanced in SQL and data warehouse concepts</li><li>Advanced in more than one programming language, especially Python or Go or Java</li><li>Have experiences working with batch / real-time data processing, data modeling concepts, and implementation</li><li>Have experiences working in GCP data environment such as GCS &amp; Bigquery</li><li>Analytical and data-driven, you love digging into the data to understand what’s happening and define &amp; measure success on every project</li><li>Good communication &amp; interpersonal skills</li><li>You’re passionate about your customers and always bring questions back to what will serve them best</li>"}],"text":"Senior Data Warehouse Engineer - India","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment. </span></div><div><br></div><div><span style=\"font-size: 10pt;\">Growth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey &amp; it will be good for your career growth forward.</span></div>","descriptionBodyPlain":"Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment. \n\nGrowth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey & it will be good for your career growth forward.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2b430ba4-210e-4db6-a63e-c11459a0304f","applyUrl":"https://jobs.lever.co/GoToGroup/2b430ba4-210e-4db6-a63e-c11459a0304f/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We served more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting-pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solution, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We served more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting-pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solution, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1706508052225,"descriptionPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","id":"da8d4a37-f5a4-4436-8743-58c787781285","lists":[{"text":"What You Will Do","content":"<li>Take ownership of one of OKR related to demand and growth that leads to revenue and profitability from one of Gojek product’ business; defines the strategy and roadmap for the team to achieve it by combining multiple initiatives (e.g., content/communication, vouchers/promotion, product changes)</li><li>Discover growth opportunities in the business metrics and customer metrics by exploring business data, transaction data, customer activity within apps and actual customer insights</li><li>Build predictive model or clustering model to allocate the promo allocation efficiently</li><li>Run multiple experiments to validate hypothesis in fast pace iteration cycle</li><li>Drives the team for prioritization, strategy, and focus on solutions to solve user problems</li><li>Introduce beneficial business changes through well-written strategy documents and validate the strategy and hypotheses through robust experimentation and statistical approach</li><li>Optimize and automate solutions by leveraging Data Sciences resources</li><li>Perform feedback loop and retroactive analysis of the team performance and operation to evaluate and improve their impact on Gojek’'s North Star Metrics</li><li>Proactively review the operation process in the team and act on how to drive a faster, effective, and efficient execution process</li><li>Present findings to senior management to drive business and strategic decision-making on feature prioritization and impact analysis.</li>"},{"text":"What You Will Need","content":"<li>BS/MS in Engineering, Computer Science, Math, Statistics, or equivalent experience</li><li>Minimum 5 years of working experience with a minimum of 1-2 year of leadership experience</li><li>Proficiency in data analysis tools and programming languages such as Python, R, SQL, and data visualization tools like Tableau or Power BI. Strong analytical skills to interpret complex data sets and extract actionable insights</li><li>High proficiency in Experiment and Hypothesis Testing for multiple scenarios of business</li><li>High proficiency in Descriptive Analytics, Predictive Analytics, Clustering analytics</li><li>Understanding of business operations, strategies, and objectives. The Consumer Analytics Lead should be able to connect analytical insights to business goals and contribute to overall decision-making</li><li>Data Management: Familiarity with data collection, storage, and management best practices</li><li>Strong business acumen with successful experience influencing and leading cross-functional teams</li><li>End to end the problem-solving mindset that can work in increments and exponents</li><li>Radical Candor leadership while also a strong team player; possessing team synergy skills with a high level of enthusiasm in collaborating in a cross-functional team and can also balance attention to detail with swift execution</li><li>Strong project management skills to manage complex projects, also can manage and prioritize multiple internal and external stakeholders</li><li>Experience in a SaaS, Marketplace, Food Delivery, or other technology company is a plus</li>"}],"text":"Senior Growth Manager - Food & Ads","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","descriptionBodyPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/da8d4a37-f5a4-4436-8743-58c787781285","applyUrl":"https://jobs.lever.co/GoToGroup/da8d4a37-f5a4-4436-8743-58c787781285/apply"},{"additionalPlain":"About The Team\n\nOur GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. \n\nOur service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.\n\nAs a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Our service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.</span></div><div><br></div><div><span style=\"font-size: 10pt\">As a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710231191389,"descriptionPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","description":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div>You will take the wheel in building, operating, and maintaining our developer platform called <a href=\"http://GoPay.sh\" class=\"postings-link\">GoPay.sh</a> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</div>","id":"43fa73a0-3946-4921-8dd1-8dbdf5a9726e","lists":[{"text":"What You Will Do","content":"<li>Design, build, and improve the mobile experiences for one of the world's fastest-growing mobile apps</li><li>Partner with the product management team to define and execute the feature roadmap</li><li>Coordinate with cross-functional teams (Backend, DevOps, Design, etc.) on planning and execution</li><li>Proactively manage stakeholders' communication related to deliverables, risks, changes, and dependencies</li><li>Helping out in the onboarding process by sharing contexts and pairing with new members of the team</li><li>Start mentoring or guiding SE1Communicate, collaborate, and work effectively across cross-functional teams in a global environment</li>"},{"text":"What You Will Need","content":"<li>Should have at least 4-5+ years of experience with Android development</li><li>Proficient in Kotlin programming, Java, and Android APIs</li><li>Strong knowledge of Android app architecture and implementation</li><li>Ability to write model code for functional and nonfunctional requirements and help improve the code quality standard across the team</li><li>Working experience with popular libraries for networking, async, image loading, etc</li><li>Well-versed with Agile methodologies, TDD, and Test Engineering and Automation.</li>"}],"text":"Senior Mobile Engineer (Android) - Payments Data Products & Infra","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div>You will take the wheel in building, operating, and maintaining our developer platform called <a href=\"http://GoPay.sh\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">GoPay.sh</a> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</div>","descriptionBodyPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/43fa73a0-3946-4921-8dd1-8dbdf5a9726e","applyUrl":"https://jobs.lever.co/GoToGroup/43fa73a0-3946-4921-8dd1-8dbdf5a9726e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1713853876174,"descriptionPlain":"As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.\n","description":"<div><span style=\"font-size: 11pt\">As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.</span></div>","id":"c54483cb-dd68-43c3-9fe5-623dbb6db56f","lists":[{"text":"What you will do","content":"<li>Design large-scale AI/ML products/systems impacting millions of customers</li><li>Establish best practices for data science methodologies, tools, and technologies to ensure high-quality deliverables and efficient workflows.</li><li>Mentored and coach junior data scientists, providing guidance on technical skills, project management, and career development.</li><li>Led the design, development, and execution of Proof of Concepts (POCs) using emerging data technologies to solve complex business problems.</li><li>Drive and ensure that MLOps practices are being followed in solutions</li><li>Collaborate with cross-functional teams across data and engineering to come up with solutions to complex problem statements.</li><li>Stay current on industry trends and advancements in data science, machine learning, and artificial intelligence, and assess their potential impact on our projects and processes.</li><li>Contribute to thought leadership initiatives such as white papers, conference presentations, and blog posts to showcase our expertise and drive industry recognition.</li><li>Act as a subject matter expert on data science topics, providing guidance and support to internal teams.</li>"},{"text":"What You Will Need","content":"<li>Advanced degree (Master’s or PhD) in Data science.</li><li>Proven track record of success in a data science role, with at least 12 years of experience in applied machine learning, predictive modeling, and data analysis.</li><li>Expertise in programming languages such as Python, R, or Scala, as well as proficiency with data manipulation and visualization libraries (e.g., pandas, NumPy, matplotlib, seaborn).</li><li>Strong understanding of statistical concepts and techniques, with experience applying them to real-world problems.</li><li>Experience with big data technologies such as Hadoop, Spark, or Flink, and proficiency in SQL and/or NoSQL databases.</li><li>Excellent communication and interpersonal skills, with the ability to effectively convey complex technical concepts to both technical and non-technical audiences.</li><li>Leadership experience, including the ability to mentor and coach junior team members and drive cross-functional collaboration.</li><li>A passion for learning and innovation, with a desire to stay ahead of the curve in the rapidly evolving field of data science and technology.</li>"},{"text":"Plus Point","content":"<li>Experience with ride-hailing, quick commerce or food delivery domain.</li><li>Experience working with unstructured or semi-structured data and human-in-the-loop data operations.</li><li>Experience with distributed systems</li>"},{"text":"About the team","content":"<li>Our Data Science team currently consists of 40+ people based in India, Indonesia and Singapore who run Southeast Asia’s leading Gojek business. We oversee all things data and work to become a thought partner for our Business Users, Product Team, and Decision Makers. It’s our job to ensure that they have a structural approach to data-driven problem-solving. Right now, our focus revolves: how to make customers, drivers, and merchants happy and delighted. We have so far created millions of dollar impact across different journeys of customers, drivers and merchants</li><div><br></div><li>We work with the Engineering, PMs and strategy functions hand-in-glove - be it constructing a new product or brainstorming on a problem like how do we reduce the wait time for the drive, how do we improve assortment, should we treat convenience seeking customer differently from value seeking customer etc</li><div><br></div><li>As a team, we’re concerned not only with the growth of the company, but each other’s personal and professional growths, too. Along with us coming from diverse backgrounds, we often have fun sessions to talk about everything and anything from data information to our current movie list.</li>"}],"text":"Senior Principal Data Scientist","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 11pt;\">As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.</span></div>","descriptionBodyPlain":"As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c54483cb-dd68-43c3-9fe5-623dbb6db56f","applyUrl":"https://jobs.lever.co/GoToGroup/c54483cb-dd68-43c3-9fe5-623dbb6db56f/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714984631446,"description":"","descriptionPlain":"","id":"a535c249-cf27-41cf-b92d-df1235864fee","lists":[{"text":"What You Will Do","content":"<li>Work closely and under the supervision of a Product Design Lead, and follow the predefined process set forth by the team</li><li>Able to comprehend the product briefs and be able to present the ideas/solutions to the team under the supervision of the product design lead</li><li>Effectively deliver features and improvements in a well-defined scopeDefine end-to-end wireframe and wireflow for features using standard wireframing tools</li><li>Document the design process for each feature, such as research findings, ideations, usability tests, release, and monitor the impact after the product release</li><li>Contribute to the team cadence discussion and make occasional short presentations to the team, as well as present team’s updates if neededProactively seek/give feedback from other stakeholders to make sure concepts are meeting the intended project goal</li>"},{"text":"What You Will Need","content":"<li>Should have at least 5 years of relevant experience in the product design industry</li><li>Familiar data and can identify problem areas, furtherly map out the user journey, and break the problems into smaller chunks</li><li>Use basic analytics tools to gather customer data (funnel)&nbsp;Possess a good knowledge of design fundamentals, such as design thinking framework and other frameworks in order to develop products</li><li>Able to sketch the ideas into a wireframe, learn how to make wireflow, and do wireframing for well-defined features</li><li>Have a good knowledge of the tools, such as Overflow, Miro, Sketch, Figma, or similar ones that are widely used by Product DesignersKnowledge of design validation, either through quantitative or qualitative research</li><li>Preferably some knowledge of service design and experience with working on mobile app design</li>"}],"text":"Senior Product Designer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/a535c249-cf27-41cf-b92d-df1235864fee","applyUrl":"https://jobs.lever.co/GoToGroup/a535c249-cf27-41cf-b92d-df1235864fee/apply"},{"additionalPlain":"About The Team\n\nThe Payments team in Gojek spans both customer payments (GoPay e-money and wallet) and merchant payments (online payments via Midtrans). Midtrans is one of the largest payment gateways in Indonesia. Spots is the largest offline network for payments in Indonesia.\n\nWe have helped simplify payments for over 750,000 merchant partners, over  1,000,000 driver partners, and millions of customers - from the bike drivers down your street to your favorite Gorengan and Martabak stalls. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia.\n\nThe Productivity & Money Management team is a stream within Midtrans that aims to solve our merchants’ and partners’ pain points over managing their funds - be it for their own businesses or for their clients - to help them streamline their operations and grow their business. Our success depends on the success of our merchant partners who rely on us for their payment needs. This team will focus on the merchant’s and partner’s money management domain, along with partner infrastructure, which will include creating, owning, and executing a product roadmap aligned with product strategy.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Payments team in Gojek spans both customer payments (GoPay e-money and wallet) and merchant payments (online payments via Midtrans). Midtrans is one of the largest payment gateways in Indonesia. Spots is the largest offline network for payments in Indonesia.</div><div><br></div><div>We have helped simplify payments for over 750,000 merchant partners, over&nbsp; 1,000,000 driver partners, and millions of customers - from the bike drivers down your street to your favorite Gorengan and Martabak stalls. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia.</div><div><br></div><div>The Productivity &amp; Money Management team is a stream within Midtrans that aims to solve our merchants’ and partners’ pain points over managing their funds - be it for their own businesses or for their clients - to help them streamline their operations and grow their business. Our success depends on the success of our merchant partners who rely on us for their payment needs. This team will focus on the merchant’s and partner’s money management domain, along with partner infrastructure, which will include creating, owning, and executing a product roadmap aligned with product strategy.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709528793675,"descriptionPlain":"About The Role\n\nAt GoTo Financial, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a Senior Product Manager for Merchant Productivity, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position Midtrans as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>At&nbsp;<b>GoTo Financial</b>, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a&nbsp;<b>Senior Product Manager for Merchant Productivity</b>, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position&nbsp;<b>Midtrans</b>&nbsp;as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!</div><div><br></div>","id":"312d1b95-21ea-4c90-93e8-20724b6208e7","lists":[{"text":"What You Will Do","content":"<li><b>Collaborate with Leadership:</b> Work closely with company leadership to create, own, and execute a product roadmap, vision, and strategy that aligns with our organizational goals</li><li><b>Influence Peers and Stakeholders:</b> Leverage data, logic, and user empathy to influence your peers, stakeholders, and key executives</li><li><b>Own Key Results:</b> Take ownership of critical metrics, including customer satisfaction, usability, on-time releases, and overall product impact</li><li><b>Build Trusted Relationships:</b> Develop strong relationships with engineering and business leaders. Collaborate seamlessly to ensure optimized product delivery and foster a culture of excellence</li><li><b>Effective Communication:</b> Convey important messages clearly and compellingly to cross-functional stakeholders</li><li><b>Prioritization and Execution:</b> Manage prioritization, product definition, execution, rollout, and impact analysis for initiatives within your problem area</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least&nbsp;5 years of experience in product management, demonstrating a track record of success in delivering innovative B2B/B2C products with a keen eye for design and strong product instincts. Experience in payments and transfers will be an advantage.</li><li>Demonstrated ability to collaborate with leadership to develop product strategy and vision.</li><li>Possess a strong sense of agency in navigating and creating clarity in ambiguous situations.</li><li>Ability to break down complex problems, identify use cases and solutions, and thrive in unstructured environments.</li><li>Comprehensive understanding of data, design, research, software engineering, and business processes, with the ability to effectively collaborate with diverse teams.</li><li>Strong analytical and quantitative skills, with the capability to utilize data and metrics to support requirements and features.</li><li>Effective communication skills to articulate strategy, insights, priorities, and plans coherently to all levels of management.</li><li>Meticulous attention to detail, with a commitment to upholding high standards and managing multiple, competing priorities concurrently with minimal supervision.</li>"}],"text":"Senior Product Manager - Merchant Productivity","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At&nbsp;<b>GoTo Financial</b>, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a&nbsp;<b>Senior Product Manager for Merchant Productivity</b>, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position&nbsp;<b>Midtrans</b>&nbsp;as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nAt GoTo Financial, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a Senior Product Manager for Merchant Productivity, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position Midtrans as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/312d1b95-21ea-4c90-93e8-20724b6208e7","applyUrl":"https://jobs.lever.co/GoToGroup/312d1b95-21ea-4c90-93e8-20724b6208e7/apply"},{"additionalPlain":"About The Team\n\nOur objective as Gojek’s Risk Team is to ensure a safe and trusted platform that our users can trust, rely on, and love to come back to. Our team consists of multinational and multi-background individuals, working together to anticipate and predict potential threats to our platform and our users, design and build tools to fight against and mitigate these threats, and implement and enforce these systems at scale. We partner closely with several cross-functional teams to ensure safe and secure transactions for our users, our Gojek businesses, and our extended ecosystem. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our objective as Gojek’s Risk Team is to ensure a safe and trusted platform that our users can trust, rely on, and love to come back to. Our team consists of multinational and multi-background individuals, working together to anticipate and predict potential threats to our platform and our users, design and build tools to fight against and mitigate these threats, and implement and enforce these systems at scale. We partner closely with several cross-functional teams to ensure safe and secure transactions for our users, our Gojek businesses, and our extended ecosystem.&nbsp;</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705909732063,"descriptionPlain":"About The Role\n\nAs the Senior Risk Analyst for Food & Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations & Finance.\n","description":"<div><b>About The Role</b></div><div><br></div><div>As the Senior Risk Analyst for Food &amp; Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations &amp; Finance.</div>","id":"419ca012-7459-4d3e-acfc-381d32c8ae7e","lists":[{"text":"What You Will Do","content":"<li>Identify new fraud emerging trends/patterns and recommend solutions both at the strategic and tactical levels, balancing the business vision and the practicality of implementations.</li><li>Assess, validate, and optimize risk rules to ensure best outcomes and to meet stipulated risk target metrics.&nbsp;</li><li>Identify risk assessment from products, systems, processes and recommend possible preventive measures</li><li>Influence roadmaps of partner teams, including the wider Risk organization, Data Science, Engineering, Product Management, Mobility business, Operations and Finance</li><li>Identify and predict blockers, conflicts and risks to projects across multiple teams and seek solutions to drive timely execution</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 4 years of experience in analytical, problem-solving roles in a fast-paced environment (prior experience in fraud/risk domain is preferred).</li><li>Strong project management skills on collaborating with multiple stakeholders and product managers to improve processes and products to reduce the overall risk of departments.</li><li>Strong analytical skills with the ability to collect, organize, analyze and disseminate significant amounts of information with attention to detail and accuracy and present them clearly and coherently to various stakeholders.</li><li>Ability to work independently, take quick decisions &amp; recommend effective solutions on a day-to-day basis - always backed by strong data points.</li><li>Skills of extracting insights from large data sets with the help of SQL, BigQuery, Python, R, etc., and experience with visualization tools like Tableau, DataStudio, <a href=\"http://etc.Excellent\" class=\"postings-link\">etc.</a></li><li><a href=\"http://etc.Excellent\" class=\"postings-link\">Excellent</a> written &amp; verbal communication skills focused on improving collaboration, knowledge, and information exchange across various <a href=\"http://stakeholders.Being\" class=\"postings-link\">stakeholders.</a></li><li><a href=\"http://stakeholders.Being\" class=\"postings-link\">Being</a> exposed to building statistical models using both unsupervised &amp; supervised learning algorithms is a plus.</li><li>Fluency in English is a must.</li><div><br></div>"}],"text":"Senior Risk Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>As the Senior Risk Analyst for Food &amp; Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations &amp; Finance.</div>","descriptionBodyPlain":"About The Role\n\nAs the Senior Risk Analyst for Food & Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations & Finance.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/419ca012-7459-4d3e-acfc-381d32c8ae7e","applyUrl":"https://jobs.lever.co/GoToGroup/419ca012-7459-4d3e-acfc-381d32c8ae7e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1683274859211,"descriptionPlain":"About the Role -\nWe are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","description":"<div><b style=\"font-size: 9pt\">About the Role</b><span style=\"font-size: 9pt\"> -</span></div><div><span style=\"font-size: 9pt\">We are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp; </span></div>","id":"ce3ba8fb-6d8e-4634-ac8e-76a10646bfea","lists":[{"text":"What You Will Do ","content":"<li>Key fraud analyst to the business teams for the assigned product lines - conducting deep dives and analysis on risk-related issues. </li><li>Close monitoring of risk metrics, underlying drivers - and the overall business metrics</li><li>Assess, validate and optimize risk rules - to ensure the best outcome of risk/reward and to meet stated risk target metrics</li><li>Develop risk platform solutions that will balance the various requirements from the product lines yet maintain a holistic view of the customer experience</li>"},{"text":"What You Will Need","content":"<li>Able to assess issues and recommend solutions both at the strategic and tactical levels - balancing the business vision and practical implementation considerations.</li><li>Intermediate proficiency in using GSuite and other data skills (SQL, BigQuery etc)</li><li>Proactively builds trust-based relationships with stakeholders while maintaining the ability to remain objective</li><li>Strong understanding of risk solutions, and product implementation - on the business side5-10 years of related payment risk experience, preferably on the acquiring side and e-wallets</li>"}],"text":"Senior Risk Manager","country":"ID","workplaceType":"hybrid","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 9pt;\">About the Role</b><span style=\"font-size: 9pt;\"> -</span></div><div><span style=\"font-size: 9pt;\">We are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp; </span></div>","descriptionBodyPlain":"About the Role -\nWe are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","hostedUrl":"https://jobs.lever.co/GoToGroup/ce3ba8fb-6d8e-4634-ac8e-76a10646bfea","applyUrl":"https://jobs.lever.co/GoToGroup/ce3ba8fb-6d8e-4634-ac8e-76a10646bfea/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707979859438,"descriptionPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","description":"<div><b style=\"font-size: 16px\">About the team:</b></div><div><span style=\"font-size: 16px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","id":"18bd3c46-648a-4204-8c39-9a3a8c3803e2","lists":[{"text":"What you will do:","content":"<li>Act as the lead point of contact for all account matters, anticipate the client’s needs, work within the company to ensure deadlines for the client are met, and help the client succeed,</li><li>Resolve account issues and complaints,</li><li>Plan and present reports on account progress, goals, and periodic initiatives to share with team leaders and peers on a regular basis,</li><li>Provide full visibility into the sales pipeline at every stage of engagement, and take the account into the next level by increasing Midtrans’ share in online payments,</li><li>Develop a strong understanding of the e-commerce and digital commerce market and be the first person that a client calls for escalation,</li><li>Work closely with the Partnership and Banking teams to ensure rapport and collaboration between partners and clients,</li><li>Responsible for administrative duties, such as preparing reports, preparing price quotes, maintaining and approving the entire agreements and forms.</li>"},{"text":"What you will need:","content":"<li>Bachelor’s degree in Business Management, Sales, Communication or related academic area,</li><li>A minimum of 3 years of experience in business management, sales, or project management is mandatory. </li><li>Prior experience in e-commerce and managing key accounts will be a plus point,</li><li>Fluency in both Bahasa and English is required,Able to multitask, prioritize, and manage time efficiently,</li><li>Ability to negotiate, persuade and influence others,</li><li>Excellent interpersonal, communication, presentation and analytical skills,</li><li>Proficient computer skills, and experience with CRM software and the Microsoft Office Suite, with emphasis on superior Excel skills,</li><li>Proven ability to maintain projects and maintain effective relations with accounts or partners.</li>"}],"text":"Senior Sales Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the team:</b></div><div><span style=\"font-size: 16px;\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","descriptionBodyPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/18bd3c46-648a-4204-8c39-9a3a8c3803e2","applyUrl":"https://jobs.lever.co/GoToGroup/18bd3c46-648a-4204-8c39-9a3a8c3803e2/apply"},{"additionalPlain":"About The Team\n\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives.&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707805477238,"descriptionPlain":"About The Role\n\nSales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.\n","description":"<div><b style=\"font-size: 18px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Sales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.</span></div>","id":"60b17958-bbef-411b-9024-5cbbabf12fff","lists":[{"text":"What You Will Do","content":"<li>Act as the lead point of contact for all account matters, anticipate the client’s needs, work within the company to ensure deadlines for the client are met, and help the client succeed</li><li>Resolve account issues and complaints</li><li>Plan and present reports on account progress, goals, and periodic initiatives to share with team leaders and peers on a regular basis</li><li>Provide full visibility into the sales pipeline at every stage of engagement, and take the account into the next level by increasing Midtrans’ share in online payments</li><li>Develop a strong understanding of the e-commerce and digital commerce market and be the first person that a client calls for escalation</li><li>Work closely with the Partnership and Banking teams to ensure rapport and collaboration between partners and clients</li><li>Responsible for administrative duties, such as preparing reports, preparing price quotes, maintaining and approving the entire agreements and forms</li>"},{"text":"What This Role Needs","content":"<li>Bachelor’s degree in Business Management, Sales, Communication or related academic area</li><li>At least 6 years of experience in business management, sales, or project management is mandatory. Prior experience in e-commerce and managing key accounts will be a plus point</li><li>Fluency in both Bahasa and English is required</li><li>Able to multitask, prioritize, and manage time efficiently</li><li>Ability to negotiate, persuade and influence others</li><li>Excellent interpersonal, communication, presentation and analytical skills</li><li>Proficient computer skills, and experience with CRM software and the Microsoft Office Suite, with emphasis on superior Excel skills</li><li>Proven ability to maintain projects and maintain effective relations with accounts or partners</li>"}],"text":"Senior Sales Manager - Midtrans - #9679","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 18px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Sales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.</span></div>","descriptionBodyPlain":"About The Role\n\nSales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/60b17958-bbef-411b-9024-5cbbabf12fff","applyUrl":"https://jobs.lever.co/GoToGroup/60b17958-bbef-411b-9024-5cbbabf12fff/apply"},{"additionalPlain":"About Us\n\n Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About Us</b></div><div><br></div><div><span style=\"font-size: 16px\">&nbsp;Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.</span></div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1706837996316,"descriptionPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","id":"93b5e2e0-272f-4091-b7aa-fafc06ca67c4","lists":[{"text":"What You Will Do","content":"<li>Conduct feature and exploratory tests on Mobile apps (Android, iOS)and API. Engage in continuous automation throughout agile development iterations to ensure zero defects</li><li>Work closely with the cross-functional product team, including PMs, Designers, Developers, and QA managers right from the inception of features</li><li>Create and execute the test cases for features with minimum guidance and maintain and add new cases in automation frameworks on either UI/API test level and reduce manual efforts during regression testing&nbsp;</li><li>Participate in iteration planning, providing input on required testing tasks, processes, and associated effort for the selected user stories</li><li>Design, develop and execute test automation for relevant areas of ownership independently</li><li>Contribute to automation framework development (Libraries / new features / extensions)</li><li>Provide automated test coverage for corner cases, revenue, impact, usability, backend services, and exploratory testing</li><li>As a fast learner and team player, you’re comfortable teaching yourself new skills quickly and can thrive in a complex and fast-paced environment while making strong technical individual contributions</li>"},{"text":"What You Will Need","content":"<li>4-6+ years of experience in the field of professional testing</li><li>Good prior experience in Manual &amp; Automation test methodologies</li><li>Sound knowledge of testing/automating the tests at different layers of the application</li><li>Comfortable writing clean code in one programming language (Java/Kotlin is a plus)</li><li>Good Understanding of Tools like Selenium, Appium, Cucumber BDD, TestNG Maven/Gradle, and CI/CD tools like Jenkins, GitLab, etc</li><li>Should have exposure to tools like Postman, Charles Proxy/MITM&nbsp;</li><li>Working knowledge of Git</li><li>Experience in developing test automation framework from scratch is a big plus</li>"}],"text":"Senior SDET - Automation Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/93b5e2e0-272f-4091-b7aa-fafc06ca67c4","applyUrl":"https://jobs.lever.co/GoToGroup/93b5e2e0-272f-4091-b7aa-fafc06ca67c4/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1709540624021,"descriptionPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><span style=\"font-size: 10pt\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"d846246a-bcb3-42c4-af55-cb9c5df9fd8b","lists":[{"text":"What You Will Do","content":"<li>Work closely with the Product team (i.e. PMs, Designers, Developers, and QA) right from the inception of features;&nbsp;</li><li>Participate in product &amp; tech discussions, and refine the acceptance criteria and testing estimation;&nbsp;</li><li>Understand business and product requirements as related to payments and the existing service architecture;&nbsp;</li><li>Write concise, comprehensive, detailed test plans based on business and product feature requirements;&nbsp;</li><li>Improve the test automation experience by enhancing tools/scripts, test coverage, and/or code structure, and automate repeated manual tasks to improve self/stream's productivity;&nbsp;</li><li>Take responsibility for the quality of features and the delivery of the entire feature;&nbsp;</li><li>Debug and analyze the bugs in the application/service, aiding developers in arriving at the root cause</li>"},{"text":"What You Will Need","content":"<li>At least 5 years of experience in professional testing in Microservices/API/App/Web;&nbsp;</li><li>Hands-on in test automation using any language (preferably Java &amp; Kotlin);</li><li>Hands-on in Flutter automation is a plus;</li><li>Experience with open-source automation libraries like Rest Assured, Appium, and Selenium;</li><li>Familiarity with CI/CD tools like Gitlab, and Jenkins;</li><li>Deep knowledge in manual &amp; automation test methodologies and principles; 60+40 (&nbsp; auto + manual)</li><li>Excellent analytical, debugging skills and problem-solving with attention to detail;</li><li>Well-versed with Agile methodology, SDLC and STLC;</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Senior SDET - Consumer Payments","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt;\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d846246a-bcb3-42c4-af55-cb9c5df9fd8b","applyUrl":"https://jobs.lever.co/GoToGroup/d846246a-bcb3-42c4-af55-cb9c5df9fd8b/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709178511449,"descriptionPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><span style=\"font-size: 10pt\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"e83c2567-28a4-411c-adff-7306422a0482","lists":[{"text":"What You Will Do","content":"<li>Work closely with the Product team (i.e. PMs, Designers, Developers, and QA) right from the inception of features;&nbsp;</li><li>Participate in product &amp; tech discussions, and refine the acceptance criteria and testing estimation;&nbsp;</li><li>Understand business and product requirements as related to payments and the existing service architecture;&nbsp;</li><li>Write concise, comprehensive, detailed test plans based on business and product feature requirements;&nbsp;</li><li>Improve the test automation experience by enhancing tools/scripts, test coverage, and/or code structure, and automate repeated manual tasks to improve self/stream's productivity;&nbsp;</li><li>Take responsibility for the quality of features and the delivery of the entire feature;&nbsp;</li><li>Debug and analyze the bugs in the application/service, aiding developers in arriving at the root cause</li>"},{"text":"What You Will Need","content":"<li>At least 4 years of experience in professional testing in Microservices/API/App/Web;&nbsp;</li><li>Hands-on in test automation using any language (preferably Java &amp; Kotlin);</li><li>Hands-on in Flutter automation is a plus;</li><li>Experience with open-source automation libraries like Rest Assured, Appium, and Selenium;</li><li>Familiarity with CI/CD tools like Gitlab, and Jenkins;</li><li>Deep knowledge in manual &amp; automation test methodologies and principles; 60+40 (&nbsp; auto + manual)</li><li>Excellent analytical, debugging skills and problem-solving with attention to detail;</li><li>Well-versed with Agile methodology, SDLC and STLC;</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Senior SDET - Consumer Payments","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt;\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e83c2567-28a4-411c-adff-7306422a0482","applyUrl":"https://jobs.lever.co/GoToGroup/e83c2567-28a4-411c-adff-7306422a0482/apply"},{"additionalPlain":"About our Team\n\nConsumer Payments is part of GoTo’s financial services arm. Our team works to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.\n\nWe are responsible for building and growing the customers and payments made through  GoPay . GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia. \n\nAs part of the Money Management team, you will be responsible for delivering essential financial solutions to help grow GoPay users. Beside the fully homemade features, the team is also working in-depth integration with bank partners.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About our Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Consumer Payments is part of GoTo’s financial services arm. Our team works to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.</span></div><div><br></div><div><span style=\"font-size: 16px\">We are responsible for building and growing the customers and payments made through&nbsp; GoPay . GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">As part of the Money Management team, you will be responsible for delivering essential financial solutions to help grow GoPay users. Beside the fully homemade features, the team is also working in-depth integration with bank partners.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1704763287586,"descriptionPlain":"About the Role:\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.\n\n","description":"<div><b style=\"font-size: 16px\">About the Role:</b></div><div><br></div><div><span style=\"font-size: 16px\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.</span></div><div><br></div>","id":"5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70","lists":[{"text":"What you’ll do","content":"<li>Attend daily standup meetings, do sprint planning/backlog reviews, communicate project/development status to internal and external teams in a timely fashion</li><li>Analyze and estimate product features defined by Product Manager/Product Owner from testing point of view</li><li>Build, contribute and maintain automated test suites and frameworks on App and API utilizing Java/JavaScript or similar</li><li>Ability to understand product feature requirements and test them effectively</li><li>Ability to work on Functional, automation testing for Web, API’s, and mobile apps both Android and iOS</li><li>Work with Business, Product, and Dev teams in close coordination</li><li>Well-versed with Agile methodology, SDLC and STLC</li><div><br></div><div><br></div>"},{"text":"What you’ll need","content":"<li>Preferably 4-6+ years of experience in professional testing in /API/Web using RestAssured with Java, Appium (Android &amp; iOS) or Selenium or similar frameworks where the experience in service virtualization / WebServices-API testing through POSTMAN or any similar tool</li><li>Basic knowledge of Java, test Parallelisation (API and App), CrossBrowser coverage, Selenium with Java, Reporting Plugin i.e. Allure, Extent.</li><li>Hands-on experience with Selenium, Intellij and TestNG</li><li>Agile / Scrum / Kanban experience Soft Skills and able to work and communicate with cross-functional teams</li><li>Experience in CI/CT using Jenkins or similar continuous integration, release and change management tools i.e GIT or similar GitLab</li><li>Good analytical, problem solving and debugging skills</li>"}],"text":"Senior SDET - Money Management","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role:</b></div><div><br></div><div><span style=\"font-size: 16px;\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.</span></div><div><br></div>","descriptionBodyPlain":"About the Role:\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70","applyUrl":"https://jobs.lever.co/GoToGroup/5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70/apply"},{"additionalPlain":"About the Team\n\nGojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Gojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1711358848361,"descriptionPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","id":"68f907a3-329f-411b-af2d-a66b38243919","lists":[{"text":"What You Will Do","content":"<li>Design and build our Machine Learning Platform to help Data Scientists productionize their models and features faster</li><li>Engineer high-reliability, high-performance services for sophisticated ML-driven functionality</li><li>Collaborate with Data Scientists to optimize ML models for high-throughput, low-latency use cases</li><li>Build internal tools and interfaces to improve the productivity of the team and improve the accessibility of our products</li>"},{"text":"What You Will Need","content":"<li>At least 5 years as a Software Engineer, with fluency and experience in either Go, Python, or Java</li><li>Proven track-record building large-scale, high-throughput, low-latency production systems</li><li>Prior experience developing for and debugging Big Data and stream processing frameworks such as Spark, Kafka, and Flink</li><li>Good understanding of algorithms and data structures/ design patterns</li><li>Passion for Agile software development practices such as test-driven development, pair programming, etc.</li><li>Experience with relational databases, non-relational databases, cloud environments and cloud deployment technology (Terraform, Kubernetes, Helm)</li><div><br></div>"},{"text":"Bonus Points If","content":"<li>You have working knowledge of ML frameworks such as TFX, Kubeflow, and MLflow</li><li>You have Data Science knowledge and familiarity with ML libraries such as Pandas, Scikit, Tensorflow, XGBoost, Keras</li>"}],"text":"Senior Software Engineer - Data Science Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px;\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px;\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px;\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/68f907a3-329f-411b-af2d-a66b38243919","applyUrl":"https://jobs.lever.co/GoToGroup/68f907a3-329f-411b-af2d-a66b38243919/apply"},{"additionalPlain":"About the Team\n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. At the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company. \n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. At the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company.&nbsp;</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1711536111124,"descriptionPlain":"About the Role\n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","id":"0216fdb3-64c6-4e37-ace8-1d9c0c79ca23","lists":[{"text":"What You Will Do","content":"<li>Build and manage a highly scalable, reliable and cost effective application infrastructure at Gojek, forming the backbone of our diverse distributed systems</li><li>Be a role model in technical excellence, helping Gojek engineers deliver top-quality applications without worrying about underlying infrastructure</li><li>Enhance code quality and product performance through continuous improvement and innovation</li><li>Collaborate and communicate effectively with teams across multiple geographies</li><li>Share your knowledge and expertise to strengthen teams knowledge of the platform so they can support themselves</li><li>Regularly refactor your work to maintain high-quality design and architecture following industry best practices</li><div><br></div>"},{"text":"What You Will Need","content":"<li>Atleast 3,5+ years of relevant experience in building applications from scratch, with proficiency in an object oriented or functional programming language (e.g. Java, Golang, Clojure, Python, Ruby etc)</li><li>Solid understanding of distributed systems fundamentals and the ability to troubleshoot issues in a large-scale infrastructure.</li><li>Hands-on experience with container orchestration and cloud native infrastructure technologies such as Kubernetes and Docker</li><li>Strong domain modeling skills and the ability to build RESTFul web services</li><li>Familiarity with CI/CD pipelines and Infrastructure as Code tools, including Terraform and Helm.</li><li>Deep knowledge or Linux as a production environment</li><li>Working knowledge of the TCP/IP stack, internet routing and load balancing</li><li>Prior experience with cloud platforms (e.g. AWS, GCP, Azure) is a plus</li><div><br></div>"}],"text":"Senior Software Engineer - Event Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/0216fdb3-64c6-4e37-ace8-1d9c0c79ca23","applyUrl":"https://jobs.lever.co/GoToGroup/0216fdb3-64c6-4e37-ace8-1d9c0c79ca23/apply"},{"additionalPlain":"About the Team\n\nThe Commerce Enablement team is a family of 60+ engineers based in Jakarta, Singapore, and India. We consistently strive to implement solutions that allow our merchant-partners in Indonesia (and the greater Southeast Asian region) to sell their products both online and offline. We also work to improve the merchant-partner experience by product innovation and integration with the rest of the GoTo Group ecosystem.\n\nInternally, we promote a culture of engineering excellence, learning, and guided career growth. We advocate sustainable engineering practices, innovation, and working smart more so than working hard. We aim to be a world-class organization, implementing world-class solutions, with world-class engineers leading the way.\n\nOur portfolio of products include merchant-facing solutions that enable our subscribed merchants to sell their goods and services both online and offline. South-East Asia is a very dynamic market, where products have to react promptly to market trends and shifts, and where product managers and business leads need the flexibility to experiment and iterate fast. With that in mind, from an engineering perspective, our challenges are to evolve a general platform for e-commerce that is sufficiently versatile to support rapid product iterations across multiple products, as well as scaling up to an ever-growing user-base. To tackle these challenges, we have adopted event-driven  architectural patterns in our engineering designs, as well as agile practices across all our day-to-day processes.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Commerce Enablement team is a family of 60+ engineers based in Jakarta, Singapore, and India. We consistently strive to implement solutions that allow our merchant-partners in Indonesia (and the greater Southeast Asian region) to sell their products both online and offline. We also work to improve the merchant-partner experience by product innovation and integration with the rest of the GoTo Group ecosystem.</div><div><br></div><div>Internally, we promote a culture of engineering excellence, learning, and guided career growth. We advocate sustainable engineering practices, innovation, and working smart more so than working hard. We aim to be a world-class organization, implementing world-class solutions, with world-class engineers leading the way.</div><div><br></div><div>Our portfolio of products include merchant-facing solutions that enable our subscribed merchants to sell their goods and services both online and offline. South-East Asia is a very dynamic market, where products have to react promptly to market trends and shifts, and where product managers and business leads need the flexibility to experiment and iterate fast. With that in mind, from an engineering perspective, our challenges are to evolve a general platform for e-commerce that is sufficiently versatile to support rapid product iterations across multiple products, as well as scaling up to an ever-growing user-base. To tackle these challenges, we have adopted event-driven&nbsp; architectural patterns in our engineering designs, as well as agile practices across all our day-to-day processes.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716274508099,"descriptionPlain":"About the Role\n\nAt GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners. \n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>At GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners.&nbsp;</div><div><br></div><div><br></div>","id":"672e0a30-76dc-4a8b-9821-5d702374a593","lists":[{"text":"What You Will Do","content":"<li>Improve the day-to-day lives of developers who need to design, build, test, debug and monitor their work</li><li>Contribute to the engineering efforts from design to implementation, solving complex technical challenges around developer and engineering productivity and velocity</li><li>Develop cutting edge tools and templates to improve the productivity of the developers in the Commerce Enablement organization</li><li>Code, design, prototype, perform reviews and consult in the process of building highly scalable, reliable, and fault-tolerant systems</li><li>Build and manage automated build/test/deployment environments</li><li>Research new technologies and tools, speaking and participating in tech conferences to carry the GoTo Financial brand throughout the community</li><div><br></div><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 4+ years of relevant software development experience with consumer/merchant products; hands-on experience in designing, developing, testing, and deploying large scale applications</li><li>Working with large scale production Kafka clusters</li><li>Experience building real-time streaming applications and concurrent distributed applications using messaging Platforms</li><li>Proven track record building large scale, high throughput, low latency production systems</li><li>Ability to implement Continuous Integration and Continuous Delivery</li><li>Experience with cloud-based solutions (AWS, GCP, etc) and container orchestration tools (Docker, Kubernetes, etc)</li><li>Experience in designing and developing tools and solutions used across teams&nbsp;</li><li>Well-versed with Agile methodologies, TDD, and Test Engineering and Automation</li>"}],"text":"Senior Software Engineer - Online Merchant","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>At GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners.&nbsp;</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAt GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners. \n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/672e0a30-76dc-4a8b-9821-5d702374a593","applyUrl":"https://jobs.lever.co/GoToGroup/672e0a30-76dc-4a8b-9821-5d702374a593/apply"},{"additionalPlain":"About the Team\n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713939159820,"descriptionPlain":"About the Role\n\nWe're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.\n","description":"<div><b>About the Role</b></div><div><br></div><div>We're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.</div>","id":"d3b7122b-692b-4815-8aa9-f1d0259bccd5","lists":[{"text":"What Will You Do","content":"<li>Develop Java backend applications for the company, including web applications and server-side applications.</li><li>Be responsible for participating in the entire software development process, from requirement analysis to design, development, testing, and deployment, ensuring that our software products run efficiently and stably. The most significant thing is taking responsibility for results.</li><li>Architect and engineer robust, high-performance systems that can effortlessly handle scale, maintain reliability, ensure security, and gracefully handle faults.</li><li>Craft and refine our product vision into iterative Minimum Viable Products (MVPs), refining them as needed for scalability and adaptability.</li><li>Stay at the forefront of technology trends, continuously evaluating and incorporating new tools and methodologies to supercharge our development efforts.</li>"},{"text":"What Will You Need","content":"<li>Bachelor's degree or above in Computer Science or a related major.</li><li>4+ years of Java development experience, those with large-scale project development experience are preferred.</li><li>Be familiar with mainstream frameworks like Spring, Spring Boot, and MyBatis.</li><li>Be familiar with Linux operating systems, understand database principles, and be proficient in using databases like MySQL and Oracle.</li><li>Have good coding style and code specifications, and be able to independently complete project development.</li><li>Have good communication skills and teamwork spirit, and be able to collaborate effectively with other developers.</li><li>Have knowledge of container orchestration technologies like Docker and Kubernetes, and be able to use them for application deployment and management.</li>"}],"text":"Senior Software Engineer (Back End) - Consumer Lending (Funding/Collection)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>We're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.</div>","descriptionBodyPlain":"About the Role\n\nWe're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d3b7122b-692b-4815-8aa9-f1d0259bccd5","applyUrl":"https://jobs.lever.co/GoToGroup/d3b7122b-692b-4815-8aa9-f1d0259bccd5/apply"},{"additionalPlain":"About The Team\n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713938773235,"descriptionPlain":"About the Role\n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.\n","description":"<div><b>About the Role</b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.</div>","id":"7507f24f-ec5c-464a-822a-96465f56de6b","lists":[{"text":"What You Will Do","content":"<li>Develop Java backend applications for the company, including risk applications and server-side applications.</li><li>Foster a culture of collaboration by working closely with diverse regional teams including Product, DevOps, UX, Data Engineering, and QA throughout the planning and execution phases.</li><li>You need to address the challenges faced in high-concurrency scenarios of risk systems, architects, robust engineers, and high-performance systems that can effortlessly handle scale, maintain reliability, ensure security, and gracefully handle faults.</li><li>You also need to develop different risk control rules and integrate them with different third-party data sources.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree or above in Computer Science or a related major.</li><li>4+ years of Java development experience, those with large-scale project development experience are preferred.</li><li>Be familiar with mainstream frameworks like Spring, Spring Boot, and MyBatis.</li><li>Be familiar with Linux operating systems, understand database principles, and be proficient in using databases like MySQL MongoDB, and Redis.</li><li>Have good coding style and code specifications, and be able to independently complete project development.</li><li>Have good communication skills and teamwork spirit, and be able to collaborate effectively with other developers.</li><li>Know container orchestration technologies like Docker and Kubernetes, and be able to use them for application deployment and management.</li>"}],"text":"Senior Software Engineer (Back End) - Consumer Lending (Risk)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.</div>","descriptionBodyPlain":"About the Role\n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7507f24f-ec5c-464a-822a-96465f56de6b","applyUrl":"https://jobs.lever.co/GoToGroup/7507f24f-ec5c-464a-822a-96465f56de6b/apply"},{"additionalPlain":"About the Team\n\nConsumer Lending is part of GoFin, Gojek's financial services arm. Our team works to provide responsible and sustainable financial services to Gojek users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term. Our team’s mission is to empower our users to realize their dreams through responsible lending. GoPayLater, our flagship product, currently helps millions of users afford their everyday needs while budgeting for the future - through good times and tough times. We’re planning on growing aggressively in 2021 and beyond by tapping into and expanding our services into new platforms and partners.\n\nThough we’re spread across Indonesia, India, and Singapore, we all enjoy collaborative iterative development with fast feedback cycles and prefer making pragmatic technical decisions despite working under a myriad of business and regulatory constraints. We work in a highly supportive environment where we never hesitate to help each other out, unblock all barriers, and have fun along the way. We love to take advantage of the fact that our members come from such a wide variety of cultures and backgrounds and take time to learn from and about one another on our informal Zoom hangouts.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Consumer Lending is part of GoFin, Gojek's financial services arm. Our team works to provide responsible and sustainable financial services to Gojek users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term. Our team’s mission is to empower our users to realize their dreams through responsible lending. GoPayLater, our flagship product, currently helps millions of users afford their everyday needs while budgeting for the future - through good times and tough times. We’re planning on growing aggressively in 2021 and beyond by tapping into and expanding our services into new platforms and partners.</div><div><br></div><div>Though we’re spread across Indonesia, India, and Singapore, we all enjoy collaborative iterative development with fast feedback cycles and prefer making pragmatic technical decisions despite working under a myriad of business and regulatory constraints. We work in a highly supportive environment where we never hesitate to help each other out, unblock all barriers, and have fun along the way. We love to take advantage of the fact that our members come from such a wide variety of cultures and backgrounds and take time to learn from and about one another on our informal Zoom hangouts.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta","Singapore"]},"createdAt":1714016329286,"descriptionPlain":"About the Role\n\nIf you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">If you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.</span></div>","id":"88358de8-e37b-4bd6-9afe-359eea3128b9","lists":[{"text":"What You Will Do","content":"<li>Own feature development from end-to-end, constantly pair with junior engineers, and improve them.</li><li>Write code that's clear, concise, performant, tested, and easy to understand by other teams and engineers.</li><li>Contribute to the design and development of highly scalable, available, reliable, secure, and fault-tolerant services.</li><li>Try improving engineering standards, tooling, and processes after understanding our needs without jumping straight into standard practices.</li><li>Deep dive and debug production issues across services and levels of the stack when needed.</li><li>Coordinate and communicate with different internal/external teams daily—stay in close communication with the product manager and team lead to execute the feature roadmap efficiently.</li>"},{"text":"What You Will Need","content":"<li>Passion for software development</li><li>At least 4 years of relevant software development experience with consumer/merchant products; hands-on experience in developing, testing, and deploying applications</li><li>Ability to learn or use Java, Kotlin, and JS, proficiency in at least one of them</li><li>Understanding of concepts like HTTP/GRPC, idempotency, concurrency, database consistency and transactionality, asynchronous programming, fault tolerance and monitoring, performance, feature flags, and backward compatibility&nbsp;</li><li>Understanding of a mobile application’s interaction with the back-end and other systems</li><li>Deep understanding of relational databases; ability to design performant, easy-to-understand architectures, and know-how for applying changes with no downtime to production systems</li><li>Experience with monitoring tools and a good understanding of their concepts</li><li>Have some experience with infrastructure-related tools and concepts such as Kubernetes, Kafka, RDS, AWS, GCP</li>"}],"text":"Senior Software Engineer (Full Stack) - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">If you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.</span></div>","descriptionBodyPlain":"About the Role\n\nIf you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/88358de8-e37b-4bd6-9afe-359eea3128b9","applyUrl":"https://jobs.lever.co/GoToGroup/88358de8-e37b-4bd6-9afe-359eea3128b9/apply"},{"additionalPlain":"About The Team\n\nThe Accounting Policy and Complex Accounting Resolution is a specialized accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&A, and group restructuring activities. Our work is project / assignment-based and challenging even for experienced accounting professionals.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Accounting Policy and Complex Accounting Resolution is a specialized accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&amp;A, and group restructuring activities. Our work is project / assignment-based and challenging even for experienced accounting professionals.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Singapore","team":"-","allLocations":["Singapore","Jakarta"]},"createdAt":1707317049688,"descriptionPlain":"About The Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div><div><br></div><div><br></div>","id":"245a0ec2-e5cf-421e-9646-70b079f115eb","lists":[{"text":"What You Will Do","content":"<li>Partner with the Finance Team of the business segments (On-Demand Services and Financial Technology Services) and the various internal stakeholders to provide technical accounting advice/recommendations on new initiatives, products, and services</li><li>Prepare technical papers regarding the applications of new/complex FRSs, new product launches, M&amp;A, and group restructuring activities</li><li>Liaise with external stakeholders on key accounting assessments</li><li>Implement Group Accounting Policies and align accounting policies across the entities</li><li>In charge of accounting operations such as fair value measurement, share-based compensation calculation, or impairment assessment.</li>"},{"text":"What You Will Need","content":"<li>Degree level qualification in Accounting / ACCAA (<b>Association of Chartered Certified Accountants</b>)</li><li>At  least 8 years of experience in Accounting / Financial Reporting roles</li><li>Passionate about accounting concepts and their applications</li><li>Strong knowledge of IFRS is mandatory</li><li>Able to manage multiple stakeholders across various levels of seniority and work independently with high attention to detail</li><li>Knowledge of US GAAP is a plus</li><li>Fluency in English (both written and spoken)</li><li>Ability to communicate in Bahasa Indonesia (verbal and written) is a plus</li><li>Prior working experience with SAP is a plus</li><li>Proficient in Office (PowerPoint, Excel, Word</li>"}],"text":"Senior Technical Accounting Manager","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About The Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/245a0ec2-e5cf-421e-9646-70b079f115eb","applyUrl":"https://jobs.lever.co/GoToGroup/245a0ec2-e5cf-421e-9646-70b079f115eb/apply"},{"additionalPlain":"About The Team\n\nWe are dedicated to fostering a vibrant culture and value work life balance. Our team thrives on dynamism, comprising individuals who are not only interesting but also exceptionally empathetic. At the heart of our ethos lies a deep appreciation for every aspect of your contribution - not just the tasks you will undertake, but also the unique qualities that make you who you are.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>We are dedicated to fostering a vibrant culture and value work life balance. Our team thrives on dynamism, comprising individuals who are not only interesting but also exceptionally empathetic. At the heart of our ethos lies a deep appreciation for every aspect of your contribution - not just the tasks you will undertake, but also the unique qualities that make you who you are.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1711090944722,"descriptionPlain":"About The Role\n\nWe are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.\n","description":"<div><b>About The Role</b></div><div><br></div><div>We are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.</div>","id":"a209e959-6eaf-4d0e-807a-42dcaffbaf91","lists":[{"text":"What you will do","content":"<li>Collaborate with the Transfer Pricing Manager and Head of Transfer Pricing on external and internal transfer pricing documentation.</li><li>Gain a deep understanding of the company's operations, including cost centers and basic operational processes.</li><li>Assist in the development and implementation of transfer pricing strategies to ensure compliance with local and international regulations.</li><li>Conduct thorough analysis and research to support transfer pricing recommendations.</li><li>Communicate effectively with cross-functional teams to gather necessary information and data for transfer pricing documentation.</li><li>Work independently while also contributing effectively to team projects and initiatives.</li>"},{"text":"What you will need","content":"<li>At least 2 years of transfer pricing experience preferably with a corporation or international accounting firm.</li><li>Bachelor's degree in Accounting, Finance, or related field. Advanced degree or professional certification (e.g., Brevet) is a plus.</li><li>Knowledge in CIT, VAT, and WHT is a plus.</li><li>Solid understanding of transfer pricing principles and methodologies.</li><li>Proficiency in English is essential, with excellent communication skills both written and verbal.</li><li>Ability to work effectively in a fast-paced environment and manage multiple priorities.</li><li>Strong analytical skills and attention to detail.</li><li>A proactive mindset with the ability to work both independently and collaboratively within a team.</li>"}],"text":"Senior Transfer Pricing","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.</div>","descriptionBodyPlain":"About The Role\n\nWe are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a209e959-6eaf-4d0e-807a-42dcaffbaf91","applyUrl":"https://jobs.lever.co/GoToGroup/a209e959-6eaf-4d0e-807a-42dcaffbaf91/apply"},{"additionalPlain":"About the Team\n\nAs a vital part of the Consumer Lending product team at GoTo Financial, you'll find yourself at the forefront of pioneering financial solutions. Our team is dedicated to crafting cutting-edge products that cater to the evolving needs of our customers. Joining us means not only being part of a dynamic and collaborative environment but also contributing to the innovation that defines our Consumer Lending offerings.\n\nOur team values collaboration as the driving force behind our success. Open communication channels are not just encouraged but are integral to our work culture, fostering knowledge exchange and problem-solving at every step. As a member of the Consumer Lending product team, you will play a key role in shaping the future of financial technology, delivering solutions that make a meaningful impact on the lives of our users. Join us in creating the next generation of Consumer Lending experiences at GoTo Financial.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>As a vital part of the Consumer Lending product team at GoTo Financial, you'll find yourself at the forefront of pioneering financial solutions. Our team is dedicated to crafting cutting-edge products that cater to the evolving needs of our customers. Joining us means not only being part of a dynamic and collaborative environment but also contributing to the innovation that defines our Consumer Lending offerings.</div><div><br></div><div>Our team values collaboration as the driving force behind our success. Open communication channels are not just encouraged but are integral to our work culture, fostering knowledge exchange and problem-solving at every step. As a member of the Consumer Lending product team, you will play a key role in shaping the future of financial technology, delivering solutions that make a meaningful impact on the lives of our users. Join us in creating the next generation of Consumer Lending experiences at GoTo Financial.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705293453270,"descriptionPlain":"About the Role\n\nAs a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.\n\nIn this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.\n","description":"<div><b>About the Role</b></div><div><br></div><div>As a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.</div><div><br></div><div>In this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.</div>","id":"9b2d9240-3315-4b28-a7d6-73e2a097c8d7","lists":[{"text":"What You Will Do","content":"<li>Proactively monitor and troubleshoot system performance, identifying and addressing potential issues.</li><li>Collaborate with development teams to design and implement scalable and resilient system architectures.</li><li>Develop and maintain automation tools to streamline processes and enhance overall system efficiency.</li><li>Participate in incident response activities, conducting root cause analysis</li><li>Contribute to the ongoing improvement of reliability, scalability, and performance of critical infrastructure.</li><li>Work closely with cross-functional teams to align SRE efforts with broader organizational goals.</li>"},{"text":"What You Will Need","content":"<li>Solid understanding of cloud platforms such as GCP, and expertise in deploying and managing services within these environments.</li><li>In-depth knowledge of containerization technologies like Docker and orchestration tools such as Kubernetes</li><li>Proficiency in programming languages like Python, Go, or Java, with a strong software engineering foundation</li><li>Able to manage small teams and also can work as an individual contributor</li><li>Familiarity with Linux System, monitoring and logging tools to ensure comprehensive system visibility such as Prometheus, Grafana, and ELK stack</li><li>Proven track record of implementing and maintaining automation for deployment, scaling, and system orchestration.</li>"}],"text":"Site Reliability Engineer - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.</div><div><br></div><div>In this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.</div>","descriptionBodyPlain":"About the Role\n\nAs a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.\n\nIn this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/9b2d9240-3315-4b28-a7d6-73e2a097c8d7","applyUrl":"https://jobs.lever.co/GoToGroup/9b2d9240-3315-4b28-a7d6-73e2a097c8d7/apply"},{"additionalPlain":"About The Team\n\nConsumer Payments is part of GoTo’s financial services arm. Our team aims to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term.\n\nWe are responsible for building and growing the customers and payments made through GoPay. GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions of registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia. As part of the Consumer Experience team, you will be responsible for delivering essential solutions to help grow active GoPay users.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Consumer Payments is part of GoTo’s financial services arm. Our team aims to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term.</div><div><br></div><div>We are responsible for building and growing the customers and payments made through&nbsp;GoPay. GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions of registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia. As part of the Consumer Experience team, you will be responsible for delivering essential solutions to help grow active GoPay users.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1708018181037,"descriptionPlain":"About The Role\n\nThe role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in  Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.  As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>The role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in &nbsp;Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.&nbsp; As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.</div><div><br></div>","id":"a5869e9e-5306-478b-b1e0-1e3966143637","lists":[{"text":"What You Will Do","content":"<li>Attend daily standup meetings, participate in sprint planning, and conduct backlog reviews. During these sessions, you’ll communicate project and development status to internal and external teams in a timely fashion</li><li>Analyze and estimate product features from a testing perspective, collaborating closely with the Product Managers</li><li>Build, contribute, and maintain automated test suites and frameworks for both App and API using Java, JavaScript, or similar technologies</li><li>Effectively test product feature requirements, ensuring quality and functionality across Web, API, and mobile apps (Android and iOS)</li><li>Work closely with Business, Product, and Dev teams, fostering coordination and alignment</li>"},{"text":"What You Will Need","content":"<li>At least 3 years of professional testing experience in API and Web testing using RestAssured with Java, Appium (Android &amp; iOS), or Selenium (or similar frameworks). Additionally, familiarity with service virtualization and WebServices-API testing through tools like POSTMAN is essential.</li><li>Basic knowledge of Java, along with an understanding of test parallelization for APIs and applications, cross-browser coverage, and Selenium with Java. Experience with reporting plugins such as Allure or Extent is a plus.</li><li>Hands-on experience with Rest Assured, Selenium/Appium, Intellij, and TestNG (or similar frameworks).</li><li>Agile, Scrum, or Kanban experience, as you’ll collaborate with cross-functional teams.</li><li>Experience in continuous integration (CI) and continuous testing (CT) using Jenkins or similar tools (e.g., Git or GitLab).</li><li>Strong analytical, problem-solving, and debugging skills to excel in this role.</li>"}],"text":"Software Development Engineer in Test - API Automation","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in &nbsp;Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.&nbsp; As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nThe role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in  Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.  As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a5869e9e-5306-478b-b1e0-1e3966143637","applyUrl":"https://jobs.lever.co/GoToGroup/a5869e9e-5306-478b-b1e0-1e3966143637/apply"},{"additionalPlain":"The GoTo Passport profile team is responsible for the common profile for a person/user which connects all of their GoTo accounts/experiences together. We enable customers to sign up easily across different GoTo applications with the least friction and also empower them to update their personal information via a common profile management experience - cutting across all the apps. For example, gone are the days when users had to update their contact details separately in each of the GoTo Apps. In addition, we are a key enabler for SSO (Single sign-on) login across different GoTo apps, and making the sign-up process easy across apps - further reducing friction in how easily users can enjoy access to different services like shopping, mobility, food delivery, payments etc.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">The GoTo Passport profile team is responsible for the common profile for a person/user which connects all of their GoTo accounts/experiences together. We enable customers to sign up easily across different GoTo applications with the least friction and also empower them to update their personal information via a common profile management experience - cutting across all the apps. For example, gone are the days when users had to update their contact details separately in each of the GoTo Apps. In addition, we are a key enabler for SSO (Single sign-on) login across different GoTo apps, and making the sign-up process easy across apps - further reducing friction in how easily users can enjoy access to different services like shopping, mobility, food delivery, payments etc.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1699518116213,"descriptionPlain":"As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.\n","description":"<div><span style=\"font-size: 10pt\">As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.</span></div>","id":"7b97ddd0-2314-4d1a-8440-fc9a9fc5111c","lists":[{"text":"What will you do ","content":"<li>Develop and execute comprehensive test plans and test cases to ensure software quality and functionality.</li><li>Conduct exploratory testing to identify potential areas of improvement and areas that might not be covered by existing test cases.</li><li>Collaborate with cross-functional teams, including developers, product managers, and business analysts, to understand requirements and design effective testing strategies.</li><li>Perform manual and automated testing, including functional, regression, and performance testing.</li><li>Identify, document, and prioritize software defects and issues, and work closely with developers to facilitate their resolution.</li><li>Collaborate with product owners to ensure user stories and acceptance criteria are well-defined and testable.</li><li>Assist in load testing, scalability testing, and other non-functional testing as required.</li>"},{"text":"What will you need ","content":"<li>Bachelor's degree in Computer Science, Information Technology, or related field preferred.</li><li>Minimum of 3 years of professional experience in quality assurance or software testing roles.</li><li>Demonstrated experience in creating, executing, and managing test cases and test plans.</li><li>Proficiency with automation tools and scripting languages such as Selenium, Python, or Java.</li><li>Familiarity with bug tracking and management systems like JIRA.</li><li>Excellent communication skills to effectively collaborate with cross-functional teams, developers, and stakeholders.</li><li>Familiarity with API testing and tools like Postman or SoapUI.</li><li>Strong attention to detail and a commitment to delivering high-quality software.</li>"}],"text":"Software Development Engineer in Test KYC","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.</span></div>","descriptionBodyPlain":"As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7b97ddd0-2314-4d1a-8440-fc9a9fc5111c","applyUrl":"https://jobs.lever.co/GoToGroup/7b97ddd0-2314-4d1a-8440-fc9a9fc5111c/apply"},{"additionalPlain":"About the Team\n\nGojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Gojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716357496028,"descriptionPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","id":"3c6bca98-cc50-43be-bafd-46ea1ab35594","lists":[{"text":"What You Will Do","content":"<li>Design and build our Machine Learning Platform to help Data Scientists productionize their models and features faster</li><li>Engineer high-reliability, high-performance services for sophisticated ML-driven functionality</li><li>Collaborate with Data Scientists to optimize ML models for high-throughput, low-latency use cases</li><li>Build internal tools and interfaces to improve the productivity of the team and improve the accessibility of our products</li>"},{"text":"What You Will Need","content":"<li>At least 2-3+ years as a Software Engineer, with fluency and experience in either Go, Python, or Java</li><li>Proven track-record building large-scale, high-throughput, low-latency production systems</li><li>Prior experience developing for and debugging Big Data and stream processing frameworks such as Spark, Kafka, and Flink is a plus</li><li>Good understanding of algorithms and data structures/ design patterns</li><li>Passion for Agile software development practices such as test-driven development, pair programming, etc.</li><li>Experience with relational databases, non-relational databases, cloud environments and cloud deployment technology (Terraform, Kubernetes, Helm)</li><div><br></div>"},{"text":"Bonus Points If","content":"<li>You have working knowledge of ML frameworks such as TFX, Kubeflow, and MLflow</li><li>You have Data Science knowledge and familiarity with ML libraries such as Pandas, Scikit, Tensorflow, XGBoost, Keras</li>"}],"text":"Software Engineer - Data Science Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3c6bca98-cc50-43be-bafd-46ea1ab35594","applyUrl":"https://jobs.lever.co/GoToGroup/3c6bca98-cc50-43be-bafd-46ea1ab35594/apply"},{"additionalPlain":"About the Team \n\nGoFood is the Food vertical of Gojek, which enables users to order food from restaurants via it's Android & iOS app. This mission of GoFood is to provide its customer with the best possible selection of food at the most affordable price. GoFood is also the marketplace of restaurants to list their food items and increase their sales. GoFood also has its own fleet of drivers with an app where they can accept the food orders and earn their daily income.So overall it's an ecosystem consisting of consumers, merchants and drivers which GoFood manages with the ultimate aim of providing the best user experience to consumers and growth for merchant and driversOur team oversees GoFood's growth, in particular, which encompasses the growth of our user base and merchant-partner family. Some of the questions we tackle on a daily basis include: \"How do we ease discovery of discounts for users across GoFood touch points?\", \"How do we personalize discounts for users based on their preferences?\", \"How do we integrate ML models into our GoFood business to auto-generate discounts?\" and \"How do we enable merchant-partners to create discounts with minimal steps while increasing their ROI?\"\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b><span style=\"font-size: 16px\">&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">GoFood is the Food vertical of Gojek, which enables users to order food from restaurants via it's Android &amp; iOS app. This mission of GoFood is to provide its customer with the best possible selection of food at the most affordable price. GoFood is also the marketplace of restaurants to list their food items and increase their sales. GoFood also has its own fleet of drivers with an app where they can accept the food orders and earn their daily income.So overall it's an ecosystem consisting of consumers, merchants and drivers which GoFood manages with the ultimate aim of providing the best user experience to consumers and growth for merchant and driversOur team oversees GoFood's growth, in particular, which encompasses the growth of our user base and merchant-partner family. Some of the questions we tackle on a daily basis include: \"How do we ease discovery of discounts for users across GoFood touch points?\", \"How do we personalize discounts for users based on their preferences?\", \"How do we integrate ML models into our GoFood business to auto-generate discounts?\" and \"How do we enable merchant-partners to create discounts with minimal steps while increasing their ROI?\"</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710905657567,"descriptionPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.</span></div>","id":"2db27f2b-d849-41c8-9273-5ba2541dece6","lists":[{"text":"What You Will Do","content":"<li>Be responsible for the end-to-end development and delivery of small to medium size features and services to power core GoFood business</li><li>Communicate, collaborate and work effectively across all the pods in your team.</li><li>Improves the development experience at GOJEK by enhancing development tools, test coverage, and/or code structure.</li><li>Implements code that is clear, concise, performant, tested, and easily understood by others</li><li>You are responsible for the entire lifecycle of stories: development, test, production, and subsequent fixes and improvements</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 2 years relevant software development experience through internship stint and/or college projects</li><li>Good skill in design, development, testing and deploying applications on Golang or Erlang or Ruby or Java large-scale applications</li><li>Has an in-depth understanding of at least one programming language and framework</li><li>Proficient in OOP, SQL, Data structures and Algorithms</li><li>Data modeling experience in Relational databases</li><li>Ability to scope, review and refine user stories for technical completeness and to alleviate dependency risk</li><div><br></div>"}],"text":"Software Engineer ( Backend) - GoFood","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px;\">Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.</span></div>","descriptionBodyPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2db27f2b-d849-41c8-9273-5ba2541dece6","applyUrl":"https://jobs.lever.co/GoToGroup/2db27f2b-d849-41c8-9273-5ba2541dece6/apply"},{"additionalPlain":"About the team \n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team </b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713777541586,"descriptionPlain":"About the Role \n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.\n","description":"<div><b>About the Role </b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.</div>","id":"ad7a1160-4d07-4f4a-a2d3-c362afac18ac","lists":[{"text":"What You Will Do","content":"<li>Responsible for developing Java backend applications for the company, with proficiency in Java language and expertise in mainstream frameworks such as Spring, Spring Boot, MyBatis and MySQL</li><li>Contribute to the full lifecycle of the Middle Platform's core system construction, including requirement analysis, solution design, and iterative system optimization</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree or above in Computer Science or a related major</li><li>4+ years of Java development experience, those with large-scale project development experience are preferred</li><li>Familiar with mainstream frameworks like Spring, Spring Boot, and MyBatis</li><li>Familiar with Linux operating systems, understand database principles, and proficient in using databases like MySQL and Oracle</li><li>Good coding style and code specifications, and be able to independently complete project development</li><li>Good communication skills and teamwork spirit, and be able to collaborate effectively with other developers</li><li>knowledge of container orchestration technologies like Docker and Kubernetes, and be able to use them for application deployment and management.</li>"}],"text":"Software Engineer (Backend) - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.</div>","descriptionBodyPlain":"About the Role \n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ad7a1160-4d07-4f4a-a2d3-c362afac18ac","applyUrl":"https://jobs.lever.co/GoToGroup/ad7a1160-4d07-4f4a-a2d3-c362afac18ac/apply"},{"additionalPlain":"About the Team \n\nOur Transport team is a big family of 100+ members made up of engineers and product managers spread out across Jakarta, Bangalore, Singapore, and Vietnam. We run Southeast Asia’s leading and fastest-growing ride-hailing business and oversee all things related to our riders and driver-partners' needs in daily transport and work daily to create solutions to these issues. It’s our job to ensure that our Transport services run seamlessly from the inside out.\n\nOur team recently figured out that our existing third-party SDK for in-app live tracking of vehicles was not operating as smoothly as we had expected. So, guess what? We fixed this by building our own live tracking SDK - Navic. Right now, our team has been busy working on projects that aim to effectively grow our user base in the region (and beyond!).\n\nWe, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing online games like Among Us and Sketchful, or catching up with each other on our virtual hangouts. We work as a team to get our job done well, and genuinely enjoy each other's company.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team </b></div><div><br></div><div><span style=\"font-size: 16px\">Our Transport team is a big family of 100+ members made up of engineers and product managers spread out across Jakarta, Bangalore, Singapore, and Vietnam. We run Southeast Asia’s leading and fastest-growing ride-hailing business and oversee all things related to our riders and driver-partners' needs in daily transport and work daily to create solutions to these issues. It’s our job to ensure that our Transport services run seamlessly from the inside out.</span></div><div><br></div><div><span style=\"font-size: 16px\">Our team recently figured out that our existing third-party SDK for in-app live tracking of vehicles was not operating as smoothly as we had expected. So, guess what? We fixed this by building our own live tracking SDK - Navic. Right now, our team has been busy working on projects that aim to effectively grow our user base in the region (and beyond!).</span></div><div><br></div><div><span style=\"font-size: 16px\">We, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing online games like Among Us and Sketchful, or catching up with each other on our virtual hangouts. We work as a team to get our job done well, and genuinely enjoy each other's company.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713521223842,"descriptionPlain":"About the Role \n\nAt Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.\nThe person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests. \n","description":"<div><b style=\"font-size: 16px\">About the Role&nbsp;</b></div><div><br></div><div><span style=\"font-size: 16px\">At Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.</span></div><div><span style=\"font-size: 16px\">The person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests.&nbsp;</span></div>","id":"331177df-4294-4bc1-93a4-6459ff18ef97","lists":[{"text":"What You Will Do","content":"<li>Own product development on functional and non-functional requirements, OKRs, and improvements to code quality across the team</li><li>Design and develop low latency, high throughput systems with minimal guidance</li><li>Be responsible for ensuring the quality and timeliness of deliverables for the team</li><li>Be a self-learner when it comes to technology and work with the team to collaborate on the engineering initiatives as the products go through the evolution cycle</li><li>Own the entire lifecycle of feature development, test, deployment, fixes and improvements</li><li>Work with tech leads, product managers and other stakeholders to continuously work towards progressing on the group’s and organization’s goals</li><li>Write code that is clear, concise, performant, tested and easily understood by others</li><li>Communicate, collaborate and work effectively across cross-functional teams in a global environment</li>"},{"text":"What You Will Need","content":"<li>At least 2 years of experience in designing, developing, testing and deploying applications with Golang/Java/Ruby. Proficient in OOP, SQL, Design Patterns</li><li>Experience with functional programming, data modeling experience in Relational and/or NoSQL databases is a plus&nbsp;</li><li>Well-versed with agile methodologies</li><li>Hands on knowledge of unit testing methodologies and frameworks</li><li>Experience troubleshooting server performance - memory issues, GC tuning, resource leaks</li><li>Experience working in technologies like Kafka, RabbitMQ, Postgres, MySql, Redis, Aerospike, or similar</li>"}],"text":"Software Engineer (Backend) - Transport","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role&nbsp;</b></div><div><br></div><div><span style=\"font-size: 16px;\">At Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.</span></div><div><span style=\"font-size: 16px;\">The person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests.&nbsp;</span></div>","descriptionBodyPlain":"About the Role \n\nAt Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.\nThe person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/331177df-4294-4bc1-93a4-6459ff18ef97","applyUrl":"https://jobs.lever.co/GoToGroup/331177df-4294-4bc1-93a4-6459ff18ef97/apply"},{"additionalPlain":"About the Team\n\nGojek’s Groceries vertical - GoMart, launched amid Covid to deliver fresh and packaged daily staples to our users through an on demand, instant delivery experience. The groceries product group is working to build the leading online grocery ecosystem in Indonesia. GoMart, the B2C online grocery service, has grown to be the leader in delivering convenience items to our consumers in major cities across Indonesia. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone and everything can move independently. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Gojek’s Groceries vertical - GoMart, launched amid Covid to deliver fresh and packaged daily staples to our users through an on demand, instant delivery experience. The groceries product group is working to build the leading online grocery ecosystem in Indonesia. GoMart, the B2C online grocery service, has grown to be the leader in delivering convenience items to our consumers in major cities across Indonesia. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone and everything can move independently. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713518609186,"descriptionPlain":"About the Role\n\nAre you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Are you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.</span></div>","id":"9fa9af02-5e5c-4812-b98f-fba1a5041b25","lists":[{"text":"What You Will Do","content":"<li>Design, build and improve the mobile experiences for one of the world's fastest growing mobile apps</li><li>Partner with the product management team to define and execute the feature roadmap</li><li>Coordinate with cross functional teams (Backend, DevOps, Design etc.) on planning and execution</li><li>Proactively manage stakeholders communication related to deliverables, risks, changes and dependencies</li><li>Communicate, collaborate and work effectively across cross functional teams in a global environment</li>"},{"text":"What You Will Need","content":"<li>1-2+ years of experience with iOS development</li><li>In-depth knowledge of iOS Apps architecture (MVVM/VIPER) and implementation including proficiency in Swift programming, Cocoa, Xcode and the iOS SDK</li><li>A Bachelor’s/Master’s degree in Computer Science</li><li>Ability to write model code for functional and nonfunctional requirements and help improve the code quality standard across the team</li><li>Good to have experience with popular libraries for networking, async, image loading etc</li>"}],"text":"Software Engineer (iOS) - Groceries","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Are you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.</span></div>","descriptionBodyPlain":"About the Role\n\nAre you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/9fa9af02-5e5c-4812-b98f-fba1a5041b25","applyUrl":"https://jobs.lever.co/GoToGroup/9fa9af02-5e5c-4812-b98f-fba1a5041b25/apply"},{"additionalPlain":"About the team\n\nThe GoTo Procurement Team formed from Gojek & Tokopedia Team. The gist of our role is to contribute to annual cost optimization within GoTo following the GoTo Procurement Policy and build strong relationships both with internal stakeholders and vendors. We collaborate alongside many teams across the organization.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">About the team</span></div><div><br></div><div><span style=\"font-size: 10pt\">The GoTo Procurement Team formed from Gojek &amp; Tokopedia Team. The gist of our role is to contribute to annual cost optimization within GoTo following the GoTo Procurement Policy and build strong relationships both with internal stakeholders and vendors. We collaborate alongside many teams across the organization.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1705996826298,"descriptionPlain":"About the Role\n\nYou will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group. \n","description":"<div><b>About the Role</b></div><div><br></div><div>You will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &amp;, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group.&nbsp;</div>","id":"4ccd018d-cb4e-489d-8b12-b120b364a6ce","lists":[{"text":"What You Will Do","content":"<li>Support Sourcing Procurement Supervisor through value creation of cost reduction and cost avoidance initiatives project</li><li>Execute all incoming sourcing requests and validate financial attributes&nbsp;</li><li>Maintain relationships with country vendors, to support GoTo Group's positioning in the market</li><li>Achieve provided annual saving target, both Cost Avoidance and Cost Reduction</li><li>Prepare procurement documentation for each sourcing activity</li><li>Become the ambassador of Procurement value creation and build relationships with Businesses to ensure Early Procurement Involvement</li>"},{"text":"What You Will Need","content":"<li>Bachelor of business, supply chain management, or any other related field (knowledge of related markets i.e marketing &amp; general office expenditures ), preferably has been working in procurement too (1-2 years)&nbsp;</li><li>Fresh Graduate are welcome</li><li>Strong business and commercial mindset</li><li>Excellent negotiation, organizational, and collaboration skills</li><li>Excellent interpersonal and communication skills and advanced in verbal and written English</li><li>Excellent project management skills</li><li>Have a basic understanding of certain areas (i.e: finance, accounting, tax, and legal)</li>"}],"text":"Sourcing Specialist (Singapore)","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>You will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &amp;, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group.&nbsp;</div>","descriptionBodyPlain":"About the Role\n\nYou will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/4ccd018d-cb4e-489d-8b12-b120b364a6ce","applyUrl":"https://jobs.lever.co/GoToGroup/4ccd018d-cb4e-489d-8b12-b120b364a6ce/apply"},{"additionalPlain":"About the Team \n\nMxT(Mobile Excellence and Tooling) is the mobile platform team at Gojek. We build small tools and standardize processes, SDKs so that product engineers can focus on Product Features. The team acts as a Center of Excellence for app performance and mobile security along with improving mobile engineers' developer experience and productivity (working in teams like GoRide, GoFood, Transport, GoPartner, etc).\n\nCore areas that we focus on - \nDeveloper Experience and Tooling: We are a super app consisting of 22 products, each big enough to be a startup on its own. Apart from this, we have equally feature-rich driver and merchant apps. This pod is on a mission to evaluate build systems and migrate to them to get granular control on how we build our apps and the time required for the same. Reliability of CI infra for mobile apps and automated PR feedback are also the responsibilities of this team.\n\nFoundation and Building Blocks: This team works on creating common frameworks, as in NetworkSDK, Clickstream, etc, which internal products use to build upon and code generators for boilerplates. The team also takes care of making sure the Gojek app performance is top-notch and industry-leading!\n\nApp Excellence and Insights Tooling: The purpose of the App Excellence and Insights Team is to drive the success of our mobile applications by enabling teams to better monitor, maintain, and improve performance and providing data-driven insights to inform decision-making. We will identify areas for improvement, and provide recommendations to enhance app performance and ultimately user satisfaction. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team </b></div><div><br></div><div><span style=\"font-size: 16px\">MxT(Mobile Excellence and Tooling) is the mobile platform team at Gojek. We build small tools and standardize processes, SDKs so that product engineers can focus on Product Features. The team acts as a Center of Excellence for app performance and mobile security along with improving mobile engineers' developer experience and productivity (working in teams like GoRide, GoFood, Transport, GoPartner, etc).</span></div><div><br></div><div><b style=\"font-size: 16px\">Core areas that we focus on - </b></div><div><b style=\"font-size: 16px\">Developer Experience and Tooling: </b><span style=\"font-size: 16px\">We are a super app consisting of 22 products, each big enough to be a startup on its own. Apart from this, we have equally feature-rich driver and merchant apps. This pod is on a mission to evaluate build systems and migrate to them to get granular control on how we build our apps and the time required for the same. Reliability of CI infra for mobile apps and automated PR feedback are also the responsibilities of this team.</span></div><div><br></div><div><b style=\"font-size: 16px\">Foundation and Building Blocks:</b><span style=\"font-size: 16px\"> This team works on creating common frameworks, as in NetworkSDK, Clickstream, etc, which internal products use to build upon and code generators for boilerplates. The team also takes care of making sure the Gojek app performance is top-notch and industry-leading!</span></div><div><br></div><div><b style=\"font-size: 16px\">App Excellence and Insights Tooling: </b><span style=\"font-size: 16px\">The purpose of the App Excellence and Insights Team is to drive the success of our mobile applications by enabling teams to better monitor, maintain, and improve performance and providing data-driven insights to inform decision-making. We will identify areas for improvement, and provide recommendations to enhance app performance and ultimately user satisfaction.&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1697010103248,"descriptionPlain":"About the Role \n\nWe are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. \n\nInitially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">We are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. </span></div><div><br></div><div><span style=\"font-size: 16px\">Initially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.</span></div>","id":"3dd90bbb-893d-4f4e-bcb1-d328a1e3696b","lists":[{"text":"What You Will Do ","content":"<li>Work closely with product engineers across multiple Android apps, to unify the build standards</li><li>Continue pushing the limits to make sure engineers have better experience with Android Studio</li><li>Measure and Identify bottlenecks in the current build system and fix them over time</li><li>Forecast and work towards future-proofing Android platform engineering services</li><li>Resolves disputes and makes tradeoffs keeping a balance between delivery and tech</li><li>Define and drive best engineering practices in alignment with all product groups.</li>"},{"text":"What You Will Need ","content":"<li>3+ years of mobile engineering experience with Android as primary expertise</li><li>Hands-on engineer with a focus on writing easy-to-read code than over-engineering</li><li>Should have worked on projects (preferably Frameworks/SDKs) that involve collaborating with multiple teams&nbsp;</li><li>Well-versed in architectural approaches, testing, and performance when it comes to building mobile apps</li><li>Passion for building scalable and composable systems that would last long</li><li>Participating and ability to make decisions in the architecture design review</li><li>Prioritizes and values work that is underrated but increases the predictability, quality &amp; throughput of delivery</li><li>Escalates challenges that are outside their control but affect the squad’s delivery</li><li>Prioritize work based on understanding the trade-off between quality, tech-debt, and delivery.</li>"}],"text":"Sr. Software Engineer (Android) - Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px;\">We are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. </span></div><div><br></div><div><span style=\"font-size: 16px;\">Initially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.</span></div>","descriptionBodyPlain":"About the Role \n\nWe are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. \n\nInitially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3dd90bbb-893d-4f4e-bcb1-d328a1e3696b","applyUrl":"https://jobs.lever.co/GoToGroup/3dd90bbb-893d-4f4e-bcb1-d328a1e3696b/apply"},{"additionalPlain":"About the Team\n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks\n\nYou get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation. \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks</span></div><div><br></div><div><span style=\"font-size: 16px\">You get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation.&nbsp;</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1698661125170,"descriptionPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","id":"424adaad-e517-4b70-85f6-d23e50955f7f","lists":[{"text":"What You Will Do","content":"<li>Automate mechanism to make sure app performance adheres to the standards set internally</li><li>Building tools that would alleviate mobile engineer's development experience and productivity&nbsp;</li><li>Build dashboard and alerting system around mobile app performance (using tools like Firebase, Instabug, etc)</li><li>Foster a development culture that focuses on the quality of delivery</li><li>Creating and maintaining SDKs like networking, logging, etc. These sdk’s are responsible for providing common solutions to products across all iOS mobile teams</li><li>Continuously discover, evaluate, and implement new technologies to maximize development efficiency</li><li>Create excellent, clear, and insightful documentation ex: guidelines, best practices, how-to, FAQs etc</li>"},{"text":"What You Will Need","content":"<li>Atleast 3+ years of mobile engineering experience with iOS as primary expertise</li><li>Should have worked on projects (preferably Frameworks/SDKs) that involve collaborating with multiple teams&nbsp;</li><li>Ability to can take (or pitch) technical decisions, own it and raise impediments early if needed</li><li>You are very well versed in architectural approaches, testing, and performance when it comes to building mobile apps</li><li>You have a passion for building scalable and composable systems that would last long</li><li>You are a hands-on engineer with a focus on writing easy to read code than over-engineering</li><li>You are a great communicator who can express your ideas clearly and build consensus to push technical agendas</li>"}],"text":"Sr. Software Engineer (iOS) - Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/424adaad-e517-4b70-85f6-d23e50955f7f","applyUrl":"https://jobs.lever.co/GoToGroup/424adaad-e517-4b70-85f6-d23e50955f7f/apply"},{"additionalPlain":"About the Team\n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks\n\nYou get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation. \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks</span></div><div><br></div><div><span style=\"font-size: 16px\">You get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation.&nbsp;</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1713436041495,"descriptionPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","id":"e2bbb29c-85ef-4db2-9ea7-93af9101b634","lists":[{"text":"What You Will Do","content":"<li>Automate mechanism to make sure app performance adheres to the standards set internally</li><li>Building tools that would alleviate mobile engineer's development experience and productivity&nbsp;</li><li>Build dashboard and alerting system around mobile app performance (using tools like Firebase, Instabug, etc)</li><li>Foster a development culture that focuses on the quality of delivery</li><li>Creating and maintaining SDKs like networking, logging, etc. These sdk’s are responsible for providing common solutions to products across all iOS mobile teams</li><li>Continuously discover, evaluate, and implement new technologies to maximize development efficiency</li><li>Create excellent, clear, and insightful documentation ex: guidelines, best practices, how-to, FAQs etc</li>"},{"text":"What You Will Need","content":"<li>Atleast 3+ years of mobile engineering experience with iOS as primary expertise</li><li>Should have worked on projects (preferably Frameworks/SDKs) that involve collaborating with multiple teams&nbsp;</li><li>Ability to can take (or pitch) technical decisions, own it and raise impediments early if needed</li><li>You are very well versed in architectural approaches, testing, and performance when it comes to building mobile apps</li><li>You have a passion for building scalable and composable systems that would last long</li><li>You are a hands-on engineer with a focus on writing easy to read code than over-engineering</li><li>You are a great communicator who can express your ideas clearly and build consensus to push technical agendas</li>"}],"text":"Sr. Software Engineer (iOS) - Engineering Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e2bbb29c-85ef-4db2-9ea7-93af9101b634","applyUrl":"https://jobs.lever.co/GoToGroup/e2bbb29c-85ef-4db2-9ea7-93af9101b634/apply"},{"additionalPlain":"About the team\n\nThe partnerships team is responsible for building strong relationships with key partners to help Gojek increase brand awareness, attain new customers, and generate new revenue. We work with all business units and functions across Gojek to establish mutually beneficial partnerships that are both product-centric and commercially sound to enhance our consumer’s experience and/or generate additional revenue for the group.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b></div><div><br></div><div>The partnerships team is responsible for building strong relationships with key partners to help Gojek increase brand awareness, attain new customers, and generate new revenue. We work with all business units and functions across Gojek to establish mutually beneficial partnerships that are both product-centric and commercially sound to enhance our consumer’s experience and/or generate additional revenue for the group.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713233450903,"descriptionPlain":"About the Role \n\nAs a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives. \nThis role will be based in Indonesia and will report directly to the Head of Partnerships. Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>As a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives.&nbsp;</div><div>This role will be based in Indonesia and will report directly to the Head of Partnerships.&nbsp;Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.</div><div><br></div><div><br></div>","id":"2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2","lists":[{"text":"What you will do","content":"<li>Manage and grow existing partnerships with key strategic partners and key accounts for Gojek within financial institutions, telcos, and retail industries</li><li>Drive the end-to-end strategic business development initiatives - identifying the potential collaboration areas, formulating the partnership strategy, and ensuring the strategic commitments are fully optimized and delivered</li><li>Lead the research, identification, prioritization, and execution of new partnership opportunities to help Gojek achieve increased brand awareness, new customers, and new revenue</li><li>Translate the partnership ideation and objectives into a joint business plan between Gojek's business unit with key strategic partners</li><li>Execute the project implementation &amp; coordination with both internal and external stakeholders by developing an efficient framework for seamless team collaboration, which includes aligning project prioritization, timeline, and problem-solving</li><li>Review and analyze the performance of partnerships after each campaign and advise opportunities for improvements &amp; further developments.</li><li>Be the point of coordination between Gojek product-function groups and key partners</li>"},{"text":"What you will need","content":"<li>At least 6 years of relevant work experience in strategic partnerships/business development with a strong track record of establishing and implementing such partnerships</li><li>Results-oriented and data-driven: Able to make data-informed decisions for a strategic partnership. Proven track record of utilizing data in forming innovative and interesting ideas that are successfully operationalized into impactful partnership campaign execution</li><li>Resourceful and creative problem-solving skills: Knack for identifying great partnership initiatives</li><li>Creative, persistent, and outgoing personality who is eager to learn</li><li>Proactive, positive, and self-motivated with the ability to work without close supervision</li><li>Excellent communication, negotiation, and reporting skills</li><li>Good business network in Indonesia.</li>"}],"text":"Strategic Partnerships Lead","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>As a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives.&nbsp;</div><div>This role will be based in Indonesia and will report directly to the Head of Partnerships.&nbsp;Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAs a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives. \nThis role will be based in Indonesia and will report directly to the Head of Partnerships. Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2","applyUrl":"https://jobs.lever.co/GoToGroup/2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713867338946,"description":"","descriptionPlain":"","id":"afb5bc40-aa4f-4837-a2d9-7d38eade2599","lists":[{"text":"What will you do","content":"<li>Assume ownership of key performance indicators (KPIs) driving revenue and profitability for Consumer Lending <a href=\"http://business.Develop\">business.</a></li><li><a href=\"http://business.Develop\">Develop</a> comprehensive strategies and roadmaps to achieve growth objectives through a combination of <a href=\"http://initiatives.Identify\">initiatives.</a></li><li><a href=\"http://initiatives.Identify\">Identify</a> growth opportunities within the consumer lending business by analyzing business data, transactional data, customer activity within platforms, and leveraging customer <a href=\"http://insights.Lead\">insights.</a></li><li><a href=\"http://insights.Lead\">Lead</a> the prioritization process, strategizing, and focusing on solutions aimed at addressing user needs and enhancing user <a href=\"http://experience.Validate\">experience.</a></li><li><a href=\"http://experience.Validate\">Validate</a> business strategies and hypotheses through rigorous experimentation and statistical <a href=\"http://methodologies.Present\">methodologies.</a></li><li><a href=\"http://methodologies.Present\">Present</a> findings and insights to senior management to inform strategic decision-making regarding feature prioritization and impact <a href=\"http://analysis.Cultivate\">analysis. </a></li><li><a href=\"http://analysis.Cultivate\">Cultivate</a> and manage partnerships with external stakeholders.</li>"},{"text":"What will you need","content":"<li>BS/MS in Business, Engineering, Computer Science, Math, Economics, Statistics, or <a href=\"http://equivalent.8-10\">equivalent.</a></li><li><a href=\"http://equivalent.8-10\">8-10</a> years of working experience with strong business <a href=\"http://acumen.End\">acumen.</a></li><li><a href=\"http://acumen.End\">End</a> to end problem-solving mindset that can work in increments and <a href=\"http://exponents.Strong\">exponents.</a></li><li><a href=\"http://exponents.Strong\">Strong</a> project management skills to manage complex projects, also can manage and prioritize multiple internal and external <a href=\"http://stakeholders.Proficiency\">stakeholders.</a></li><li><a href=\"http://stakeholders.Proficiency\">Proficiency</a> in multiple analytic and database tools common within a marketing organization (e.g., Clevertap, Tableau, etc.) with good knowledge of SQL and experimentation processHustle is essential, moving quickly and executing to allow for continual iteration is a core competency of the teamExperience in a financial services and technology companies is preferred.</li>"}],"text":"Strategy Senior Manager, Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/afb5bc40-aa4f-4837-a2d9-7d38eade2599","applyUrl":"https://jobs.lever.co/GoToGroup/afb5bc40-aa4f-4837-a2d9-7d38eade2599/apply"},{"additionalPlain":"Our GoFood team consists of 100+ zealous folks from various disciplines. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. Our main responsibility is to cater to customers with the best selection of food at the most affordable prices. Our GoFood Ads business team plays a crucial role in helping merchants grow their businesses through ads solutions, and in scaling Gojek’s revenue. On a day-to-day basis, we try to understand various merchants’ needs - from large fast food restaurants to small UMKM merchants,  and then design personalized and impactful ad solutions for them. \n\nOur main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. Along with a common drive to use technology to better our community, given the nature of our department, our team bonds over our shared love for good food and the best spots to eat in town. We’re the literal embodiment of Foodies (who can blame us when we work for one of the largest food delivery platforms in Asia!). We’ve also been having fun with board games! (Avalon and Mafia are team favorites).\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">Our GoFood team consists of 100+ zealous folks from various disciplines. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. Our main responsibility is to cater to customers with the best selection of food at the most affordable prices. Our GoFood Ads business team plays a crucial role in helping merchants grow their businesses through ads solutions, and in scaling Gojek’s revenue. On a day-to-day basis, we try to understand various merchants’ needs - from large fast food restaurants to small UMKM merchants,&nbsp; and then design personalized and impactful ad solutions for them.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 10pt\">Our main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. Along with a common drive to use technology to better our community, given the nature of our department, our team bonds over our shared love for good food and the best spots to eat in town. We’re the literal embodiment of Foodies (who can blame us when we work for one of the largest food delivery platforms in Asia!). We’ve also been having fun with board games! (Avalon and Mafia are team favorites).</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709264557847,"descriptionPlain":"As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.\n","description":"<div><span style=\"font-size: 10pt\">As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.</span></div>","id":"eaab5bee-084d-4cdc-bd08-63230251009c","lists":[{"text":"What you will do","content":"<li>Develop and maintain supply related dashboards to monitor key metrics and compare achievements against targeted <a href=\"http://goals.Analyze\" class=\"postings-link\">goals.</a></li><li><a href=\"http://goals.Analyze\" class=\"postings-link\">Analyze</a> various data points, detect anomalies and spot trends to drive business and strategic decision-making on supply <a href=\"http://initiatives.Collaborate\" class=\"postings-link\">initiatives.</a></li><li><a href=\"http://initiatives.Collaborate\" class=\"postings-link\">Collaborate</a> with the BI, Data Science, Marketing, and Product Management teams to ensure alignment on data analysis, methodologies, insights, and recommendations and proactively escalate issues to relevant <a href=\"http://stakeholders.Analysis\" class=\"postings-link\">stakeholders.</a></li><li><a href=\"http://stakeholders.Analysis\" class=\"postings-link\">Analysis</a> on the competitive intelligence insights and <a href=\"http://findings.Be\" class=\"postings-link\">findings.</a></li><li><a href=\"http://findings.Be\" class=\"postings-link\">Be</a> the go-to person on anything related to the supply health metrics and analysis.</li><div><br></div>"},{"text":"What you will need","content":"<li>A BS/MS in Business, Engineering, Computer Science, Mathematics, Economics or equivalent experience</li><li>3+ years of experience within one or more of the following fields: Business Analytics, Strategy and Planning, Growth or relevant functions</li><li>Comfortable analyzing large amounts of raw data with an obsession to detail and accuracy of data</li><li>Able to uncover the story and relationship behind the numbers and communicate the insights to a wider audience</li><li>A proactive team-player who can work under pressure and tight deadlines</li><li>Proficiency in multiple analytic, database, and visualization tools (e.g., Tableau, Looker Studio, etc.) along with strong knowledge of SQL</li><li>A scientific and hypothesis-driven thinking process with the ability to work in increments and exponents</li><li>Strong project management skills to manage complex projects and to prioritize and effectively collaborate with multiple internal and external stakeholders </li><div><br></div>"}],"text":"Supply Strategy Data Analyst [Ads]","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.</span></div>","descriptionBodyPlain":"As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/eaab5bee-084d-4cdc-bd08-63230251009c","applyUrl":"https://jobs.lever.co/GoToGroup/eaab5bee-084d-4cdc-bd08-63230251009c/apply"},{"additionalPlain":"About the team\n\nThe Accounting Policy and Complex Accounting Resolution is a specialised accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&A and group restructuring activities. Our work is project / assignment based and challenging even for experienced accounting professionals.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b></div><div><br></div><div>The Accounting Policy and Complex Accounting Resolution is a specialised accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&amp;A and group restructuring activities. Our work is project / assignment based and challenging even for experienced accounting professionals.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta","Singapore"]},"createdAt":1707717344238,"descriptionPlain":"About the Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n","description":"<div><b>About the Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div>","id":"7c53764a-a062-4971-b209-51ae7cfb67e4","lists":[{"text":"What You Will Do","content":"<li>Partner with the Finance Team of the business segments (On-Demand Services and Financial Technology Services) and the various internal stakeholders to provide technical accounting advice/recommendations on new initiatives, products, and services</li><li>Prepare technical papers regarding the applications of new/complex FRSs, new product launches, M&amp;A, and group restructuring activities</li><li>Liaise with external stakeholders on key accounting assessments</li><li>Implement Group Accounting Policies and align accounting policies across the entities</li><li>In charge of accounting operations such as fair value measurement, share-based compensation calculation, or impairment assessment.</li>"},{"text":"What You Will Need","content":"<li>Degree-level qualification in Accounting / ACCA</li><li>At least 5 years experience in Accounting / Financial Reporting related roles</li><li>Passionate about accounting concepts and their applications</li><li>Strong knowledge of IFRS is mandatory</li><li>Able to manage multiple stakeholders across various levels of seniority</li><li>Able to work independently with high attention to detail</li><li>Knowledge of US GAAP is a plus</li><li>Fluency in English (both written and spoken)</li><li>The ability to communicate in Bahasa Indonesia (verbal and written) is a plus</li><li>Prior working experience with SAP is a plus</li><li>Proficient in Office (PowerPoint, Excel, Word</li>"}],"text":"Technical Accounting Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div>","descriptionBodyPlain":"About the Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7c53764a-a062-4971-b209-51ae7cfb67e4","applyUrl":"https://jobs.lever.co/GoToGroup/7c53764a-a062-4971-b209-51ae7cfb67e4/apply"},{"additionalPlain":"Our Transport Strategy & Planning team is a family of 18 folks based across Indonesia, Singapore, and Vietnam. As fuel is to our Gojek drivers, we are to Gojek: driving the Transport business from the inside out. The gist of our team’s responsibility is to develop business strategies to encourage continuous growth in a sustainable manner to become the leader in the market. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. \n\nOur team is particularly driven by our shared passion to always deliver the best we possibly can. We are working on several projects now, including one about developing a machine learning model to provide the best booking experience for our customers and drivers from end-to-end so that we can reach a wider customer base profitably.\n\nWe're a team that's equally concerned with the growth of our product as with each other's personal growth and well-being, as well. When our laptops are shut, you'd probably find us binge-watching Friends on Netflix (yes, probably for the eighth time), hovering around the city with GoCar to try out new good spots in town (what can we say… we are loyal!). We work hard and play hard and take pride in what we do!\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 9pt\">Our Transport Strategy &amp; Planning team is a family of 18 folks based across Indonesia, Singapore, and Vietnam. As fuel is to our Gojek drivers, we are to Gojek: driving the Transport business from the inside out. The gist of our team’s responsibility is to develop business strategies to encourage continuous growth in a sustainable manner to become the leader in the market. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. </span></div><div><br></div><div><span style=\"font-size: 9pt\">Our team is particularly driven by our shared passion to always deliver the best we possibly can. We are working on several projects now, including one about developing a machine learning model to provide the best booking experience for our customers and drivers from end-to-end so that we can reach a wider customer base profitably.</span></div><div><br></div><div><span style=\"font-size: 9pt\">We're a team that's equally concerned with the growth of our product as with each other's personal growth and well-being, as well. When our laptops are shut, you'd probably find us binge-watching Friends on Netflix (yes, probably for the eighth time), hovering around the city with GoCar to try out new good spots in town (what can we say… we are loyal!). We work hard and play hard and take pride in what we do!</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710930916955,"descriptionPlain":"As a Supply Intelligence, you will be an integral player in the overall 2W Strategy & Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.\n","description":"<div><span style=\"font-size: 9pt\">As a Supply Intelligence, you will be an integral player in the overall 2W Strategy &amp; Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.</span></div>","id":"ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87","lists":[{"text":"What you will do","content":"<li>Own supply related <a href=\"http://dashboard.Analyze\">dashboard.</a></li><li><a href=\"http://dashboard.Analyze\">Analyze</a> various data points, design experiments and test scalable solutions to drive business and strategic decision-making on supply <a href=\"http://initiatives.Collaborate\">initiatives.</a></li><li><a href=\"http://initiatives.Collaborate\">Collaborate</a> with the BI, Data Science, Product Management, Region, Finance, and Legal teams to ensure seamless implementation of all supply <a href=\"http://initiatives.Analysis\">initiatives.</a></li><li><a href=\"http://initiatives.Analysis\">Analysis</a> on the competitive intelligence insights and <a href=\"http://findings.Be\">findings.</a></li><li><a href=\"http://findings.Be\">Be</a> the go-to person on anything related to the supply of health metrics and analysis.</li><div><br></div>"},{"text":"What you will need","content":"<li>A BS/MS in Business, Engineering, Computer Science, Mathematics, Economics, Statistics, or equivalent experience</li><li>3+ years of experience within one or more of the following fields: Strategy Consulting, Investment Banking, Accounting, or relevant industries</li><li>Comfortable manipulating large amounts of raw data with an obsession to detail and accuracy of data</li><li>Able to uncover the story and relationship behind the numbers and communicate the insights to a wider audience</li><li>A proactive and team-player attitude</li><li>Proficiency in multiple analytic and database tools common within a marketing organization (e.g.,, Tableau, etc.) along with strong knowledge of SQL and experimentation process</li><li>A scientific and hypothesis-driven thinking process with the ability to work in increments and exponents</li><li>Strong project management skills to manage complex projects and to prioritize and effectively collaborate with multiple internal and external stakeholders</li><div><br></div>"}],"text":"Transport Strategic Insight","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">As a Supply Intelligence, you will be an integral player in the overall 2W Strategy &amp; Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.</span></div>","descriptionBodyPlain":"As a Supply Intelligence, you will be an integral player in the overall 2W Strategy & Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87","applyUrl":"https://jobs.lever.co/GoToGroup/ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705901801143,"descriptionPlain":"As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.\n","description":"<div>As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.</div>","id":"17408b81-f5a0-4f15-afae-cc04ed7e43b6","lists":[{"text":"What You Will Do","content":"<li>Prepare Risk reporting and position reporting</li><li>Conduct assessments to define and analyze possible risks</li><li>Evaluate the gravity of each risk by considering its consequences</li><li>Design processes to eliminate or mitigate potential risks</li><li>Evaluate existing policies and procedures to find weaknesses</li><li>Prepare reports and present recommendations</li><li>Ensure risk exposures of the company is within stipulated limits</li><li>Work closely with other business stakeholders</li>"},{"text":"What You Will Need","content":"<li>Have experience in lending business at least 2 years&nbsp;</li><li>Have experience in conducted detailed risk assessments&nbsp;</li><li>Have experience in analyzing documents, statistics, reports and trends of both internal and external data</li><li>Have good communication and adaptive skills, be responsible and discipline in data providing</li><li>Have knowledge and experience of working with SQL will be an advantage</li><li>Independent, organized, highly analytical and proactive</li>"}],"text":"Underwriting and Credit Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.</div>","descriptionBodyPlain":"As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/17408b81-f5a0-4f15-afae-cc04ed7e43b6","applyUrl":"https://jobs.lever.co/GoToGroup/17408b81-f5a0-4f15-afae-cc04ed7e43b6/apply"},{"additionalPlain":"About the Team\n\nYou will be part of international team with heads-on experience in all Credit Risk areas, where you will be able to learn best practices in Lending Risk Management overall and data analysis approaches from credit risk perspectives particularly\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About the Team</b></div><div><br></div><div>You will be part of international team with heads-on experience in all Credit Risk areas, where you will be able to learn best practices in Lending Risk Management overall and data analysis approaches from credit risk perspectives particularly</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714470756952,"descriptionPlain":"About The Role\n\nTo perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.\n","description":"<div><b style=\"font-size: 18px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">To perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.</span></div>","id":"6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f","lists":[{"text":"What You Will Do ","content":"<li>Conduct analysis, segmentation of new potential and existing clients</li><li>Review performance of existing clients</li><li>Design and drive implementation of credit strategies and policies</li><li>Monitor portfolio performance</li><li>Collaborate with other functions like Scoring GTM, Product team</li>"},{"text":"What You Will Need","content":"<li>You must have experience as risk analysts for at least 3 years&nbsp;</li><li>You must have experience in analyzing data and risk assessment</li><li>You must have knowledge and experience of working with SQL</li><li>You must have good communication and adaptive skills</li><li>Responsible and discipline in data providing</li>"}],"text":"Underwriting Lead - Merchant Lending - #9990","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 18px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">To perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.</span></div>","descriptionBodyPlain":"About The Role\n\nTo perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f","applyUrl":"https://jobs.lever.co/GoToGroup/6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f/apply"},{"additionalPlain":"About the Team\n\nAll team members with 3+ years experience in credit risk management, having analytical skill set, on regular basis we are practicing share of experiences, brainstorming on any kind of credit risk challenges. Trying to build friendly and supportive atmosphere, with dedicative approach for any single employee.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">All team members with 3+ years experience in credit risk management, having analytical skill set, on regular basis we are practicing share of experiences, brainstorming on any kind of credit risk challenges. Trying to build friendly and supportive atmosphere, with dedicative approach for any single employee.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716286440746,"descriptionPlain":"The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). \n\nAs the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. \n\nAs a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.\n","description":"<div><span style=\"font-size: 16px\">The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). </span></div><div><br></div><div><span style=\"font-size: 16px\">As the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. </span></div><div><br></div><div><span style=\"font-size: 16px\">As a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.</span></div>","id":"ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee","lists":[{"text":"What You Will Do ","content":"<li>Create &amp; Supervise Whitelist strategy for main Merchant lending subtypes (GoModal, ModalToko)</li><li>Setting up and monitoring UW real-time strategies (Credit Bureau and Scoring checks)</li><li>Related Credit Risk Analysis to calibrate risk Policies as per company’s risk appetite&nbsp;</li><li>Present Credit Risk Status to stakeholders on regular Lending Committee&nbsp;</li>"},{"text":"What You Will Need","content":"<li>At least 5 years of experience on the related field</li><li>Analytical mindset and data driven approach in decision making</li><li>Technical skills to run analytics - SQL (big query)</li><li>Experience in leading of team (at least 2-3 persons)</li>"}],"text":"Underwriting Strategy & Policy Senior Lead - Merchant Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). </span></div><div><br></div><div><span style=\"font-size: 16px;\">As the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. </span></div><div><br></div><div><span style=\"font-size: 16px;\">As a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.</span></div>","descriptionBodyPlain":"The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). \n\nAs the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. \n\nAs a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee","applyUrl":"https://jobs.lever.co/GoToGroup/ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee/apply"},{"additionalPlain":"About The Team\n\nThe design team consists of Motion designers, Creative designers, Product designers, Interaction Designers, UX Writers, and DesignOps.The motion designers bring the UI to life by creating intuitive and smooth screen transitions, micro interactions, and animating static illustrations, icons and logos when needed.\n\nEvery member of the team blends in and works together as a family to support and nurture the growth of our team, and the organization as a whole.\n\nAs motion designers, we work with the Design system team, illustrators, graphic designers, UX writers, engineers and product designers to combine the principles of usability, accessibility, consistency and aesthetics to craft an experience that our users can call delightful.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The design team consists of Motion designers, Creative designers, Product designers, Interaction Designers, UX Writers, and DesignOps.The motion designers bring the UI to life by creating intuitive and smooth screen transitions, micro interactions, and animating static illustrations, icons and logos when needed.</div><div><br></div><div>Every member of the team blends in and works together as a family to support and nurture the growth of our team, and the organization as a whole.</div><div><br></div><div>As motion designers, we work with the Design system team, illustrators, graphic designers, UX writers, engineers and product designers to combine the principles of usability, accessibility, consistency and aesthetics to craft an experience that our users can call delightful.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - UX & Design","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1706869832934,"descriptionPlain":"About The Role\n\nOur Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.\n\nAs a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>Our Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.</div><div><br></div><div>As a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.</div><div><br></div>","id":"6aac2e66-88b7-46a3-9c91-605a33dc532d","lists":[{"text":"What You Will Do","content":"<li>Work closely with Product designers and Interaction designers to discuss the possible solutions for a problem</li><li>Transform those ideas into production-ready solutions using UI transitions, micro-interactions, and character animations</li><li>Work closely with the developers to implement those ideas as envisioned</li><li>Work on tools and documentation to improve the process of motion design</li><li>Help evangelize the significance of motion design across the team by engaging in discussions with other designers and stakeholders and promoting open discussions</li><li>Work on new and experimental streams for motion design as and when they are needed</li><li>Work on the motion design for Gojek’s Aloha Design System to add micro-interactions and transitions to components and work with the design system team to improve the system and animations</li>"},{"text":"What You Will Need","content":"<li>At least 1 year of experience working in motion design - creating Motion Graphics and UI Animations</li><li>A portfolio that demonstrates a deep understanding of micro-interactions, micro-animations, UI animations, and character animations</li><li>Solid grasp of Adobe after effects (Brownie points for expertise in other tools such as&nbsp; protopie, Figma, Rive, etc) and experience working with Lottie JSON animations</li><li>A natural curiosity and interest in picking up and learning new tools and technologies in motion design</li><li>Ability and willingness to work with Designers and Researchers to understand project requirements</li><li>Strong command of visual and communication design principles</li><li>Ability to tell stories with motion, and pitch them to stakeholders from different backgrounds</li><li>A keen awareness of visual trends associated with entertainment, gaming, and particularly in mobile app spaces. Experience in designing for these industries would be good to have.</li><li>Should be able to communicate effectively in English</li>"}],"text":"UX Motion Designer","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>Our Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.</div><div><br></div><div>As a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nOur Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.\n\nAs a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6aac2e66-88b7-46a3-9c91-605a33dc532d","applyUrl":"https://jobs.lever.co/GoToGroup/6aac2e66-88b7-46a3-9c91-605a33dc532d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1711601639371,"description":"","descriptionPlain":"","id":"ea17a902-a106-48ab-be52-08ce99f99b4b","lists":[{"text":"What You Will Do ","content":"<li>Lead the content designing process in assigned streams involving stakeholders from Designers, Researchers, Illustrators, Product Managers, Business Teams, Marketing, Legal, and others, following the pre-defined processes but also able to identify rooms for improvement during the processes</li><li>Effectively deliver features and improvements per agreed mass timelines with high-quality output</li><li>Strategize for how Gojek better communicates to its users</li><li>Contribute to team discussions in improving collective quality output&nbsp;</li><li>Closely and intensely collaborate and communicate with stakeholders in given contexts such as: gathering feedback, aligning thoughts to reach an agreement, giving feedback to stakeholders, resolving conflicts, and so on.</li>"},{"text":"What You Will Need","content":"<li>Proficient in English and Indonesian grammar. Have a knack for languages and their role in society, daily conversation, device-mediated communication, and others</li><li>Excellent understanding of writing fundamentals, such as structured thinking, critical and creative thinking, context gathering, research, problem-solving, seeking feedback, and prioritization</li><li>Able to think beyond common structures, but generate original ideas and craft copywriting</li><li>Strong self-driven purpose of work and possess a high initiative of doing what’s right and not what’s easy</li><li>A rich understanding of Indonesians and how they go about their daily lives</li><li>Fearlessness in getting your hands dirty to find out root causes, or to validate your design, through qualitative and quantitative research</li><li>Remarkable communication in collaborating with stakeholders and advocating your work</li><li>Confident and independent self-management, project management, and leadership</li>"}],"text":"UX Writer - Food","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/ea17a902-a106-48ab-be52-08ce99f99b4b","applyUrl":"https://jobs.lever.co/GoToGroup/ea17a902-a106-48ab-be52-08ce99f99b4b/apply"},{"additionalPlain":"About the Team \n\nMerchant Lending is part of GoTo Financial’s financial services unit. Our team works to provide responsible and sustainable financial services to our merchant partners. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.\n\nOur team’s mission is to empower our users to realize their dreams through responsible lending. GoModal, our flagship product, currently helps many merchant partners to increase the size, scale, and quality of their operations. We’re planning on growing aggressively by tapping into and expanding our services into new platforms and partners.\n\nThe team is based in Indonesia, thus allowing us to enjoy collaborative iterative development with fast feedback cycles. We work in a highly supportive environment where we never hesitate to help each other out, unblock any and all barriers, and have fun along the way. We love taking time to learn about one another through informal hangouts.  \n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team </b></div><div><br></div><div>Merchant Lending is part of GoTo Financial’s financial services unit. Our team works to provide responsible and sustainable financial services to our merchant partners. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.</div><div><br></div><div>Our team’s mission is to empower our users to realize their dreams through responsible lending. GoModal, our flagship product, currently helps many merchant partners to increase the size, scale, and quality of their operations. We’re planning on growing aggressively by tapping into and expanding our services into new platforms and partners.</div><div><br></div><div>The team is based in Indonesia, thus allowing us to enjoy collaborative iterative development with fast feedback cycles. We work in a highly supportive environment where we never hesitate to help each other out, unblock any and all barriers, and have fun along the way. We love taking time to learn about one another through informal hangouts.&nbsp;&nbsp;</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1699352283243,"descriptionPlain":"About the Role \n\nAt GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>At GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.</div><div><br></div>","id":"8549d480-ea87-43fe-b974-b7c65a9851f9","lists":[{"text":"What You Will Do","content":"<li>Think like the end-users and consumers to come up with a communication strategy that is intuitive, easy to understand, and in line with the goals of the product</li><li>Plan, write, and execute copies with the aim of improving the user interface and experience</li><li>Responsible for creating end-to-end communication for all products (including product, marketing, telesales, collections, customer service, ops, etc) and maintaining consistency with the brands’ tone of voice</li><li>Conduct research and competitive benchmarking about the product and the market to improve copies and communication strategies</li><li>Partner with Product Designer and Researcher to collect user feedback to optimize communication content</li><li>Create and maintain a library of reference guidelines and standards for copywriting</li>"},{"text":"What You Will Need ","content":"<li>A bachelor's degree and a minimum of 3 years of Copywriting or Product writing experience for digital products or services</li><li>Creative storyteller with a user-focused mindset and a drive to write engaging and effective copies</li><li>A strong portfolio of written work that shows business impact and results</li><li>Excellent written and verbal communication, proofreading, and editing skills in English and Bahasa Indonesia</li><li>Ability to collaborate effectively with stakeholders, act as a strategic partner in product strategy, and be an advocate for our users</li><li>Creative and able to develop original ideas, detail-oriented, and willing to grow</li><li>Ability to multitask and prioritize work across multiple projects simultaneously</li>"}],"text":"UX Writer - Merchant Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>At GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAt GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/8549d480-ea87-43fe-b974-b7c65a9851f9","applyUrl":"https://jobs.lever.co/GoToGroup/8549d480-ea87-43fe-b974-b7c65a9851f9/apply"},{"additionalPlain":"About the Team\n\nThis vital team within GoTo Financial is dedicated to serving businesses of various scales and enabling their productivity with technology and a high caliber of service. The team comprises passionate, welcoming, vibrant, and talented people from Indonesia and around the world. When they are not working, they spend time hanging out together, sharing their interests, and regularly meeting outside of work for games and meals. You will be tightly integrated into GTF Merchant Services: Design, UX Writing, and Research team of 9 practitioners; who are there to drive merchant centricity and empathy towards our users. You will work alongside 2 other writers; a senior writer and Design Manager will provide oversight.\n\n\n","additional":"<div><span style=\"font-size: 10pt\"><b>About the Team</b></span></div><div><br></div><div><span style=\"font-size: 10pt\">This vital team within GoTo Financial is dedicated to serving businesses of various scales and enabling their productivity with technology and a high caliber of service.&nbsp;The team comprises passionate, welcoming, vibrant, and talented people from Indonesia and around the world. When they are not working, they spend time hanging out together, sharing their interests, and regularly meeting outside of work for games and meals.&nbsp;You will be tightly integrated into GTF Merchant Services: Design, UX Writing, and Research team of 9 practitioners; who are there to drive merchant centricity and empathy towards our users.&nbsp;You will work alongside 2 other writers; a senior writer and Design Manager will provide oversight.</span></div><div><br></div><div><br></div>","categories":{"department":"FinTech - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715763492798,"descriptionPlain":"About the Role \n\nAs UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>As UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.</div><div><br></div>","id":"d224e3c3-d6f0-43cd-9608-cec1990cb6a0","lists":[{"text":"What You Will Do ","content":"<li>Understand the product briefs and be able to present ideas/solutions to the team under the supervision of the Writer lead</li><li>Effectively craft content for features and improvements</li><li>Proactively seek feedback to improve your work</li><li>Proactively seek knowledge about your craft and the industry to stay relevant</li><li>Participate in end-to-end design processes involving researchers, designers, product, business, and engineering teams. You will also get to engage with marketing and sales to ensure the content is cohesive</li><li>Own your assigned scope and organize assigned tasks; which includes communicating updates and progress via the provided forums and channels</li><li>Utilize design reviews to gather feedback to improve the quality of your deliverables and provide critique where needed</li><li>Possess strong communication and collaboration skills with stakeholders</li>"},{"text":"What You Will Need","content":"<li>A Bachelor’s degree and a minimum of 3 years of copywriting or product writing experience for digital products or services</li><li>Creative storytelling flair with a user-focused mindset and a drive to write engaging and effective content</li><li>A structured portfolio of written work that shows your ability and problem-solving skills, a bonus if it demonstrates business impact and results</li><li>Excellent written and verbal communication, proofreading, and editing skills in English and Bahasa Indonesia</li><li>Ability to collaborate and set expectations effectively with stakeholders, act as a strategic partner in product strategy, and be an advocate for our users</li><li>Comprehensive and punctual communication with excellent documentation discipline&nbsp;</li><li>Develop original ideas, and demonstrate a detail-oriented thought process</li><li>Open to participate in user research to improve the quality of work</li><li>Ability to multitask and prioritize work across multiple projects simultaneously</li>"}],"text":"UX Writer - Merchant Services","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>As UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAs UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d224e3c3-d6f0-43cd-9608-cec1990cb6a0","applyUrl":"https://jobs.lever.co/GoToGroup/d224e3c3-d6f0-43cd-9608-cec1990cb6a0/apply"},{"additionalPlain":"About the Team \n\nThe Service Excellence team, an integral part of the Gojek Singapore team, is dedicated to providing end-to-end support for our valued driver-partners and customers. Collaborating closely with operations and product teams, we aim to ensure a smooth experience for users at every stage, continuously seeking improvement. Our relentless pursuit of improvement drives us to constantly innovate and refine our processes. Furthermore, as a cohesive unit, we prioritize not just the company's advancement, but also the individual development, welfare, and unity among our team members.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b><span style=\"font-size: 16px\">&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">The Service Excellence team, an integral part of the Gojek Singapore team, is dedicated to providing end-to-end support for our valued driver-partners and customers. Collaborating closely with operations and product teams, we aim to ensure a smooth experience for users at every stage, continuously seeking improvement. Our relentless pursuit of improvement drives us to constantly innovate and refine our processes. Furthermore, as a cohesive unit, we prioritize not just the company's advancement, but also the individual development, welfare, and unity among our team members.</span></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1715929009192,"descriptionPlain":"About the Role\n\nIf you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. \n\nThis position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">If you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. </span></div><div><br></div><div><span style=\"font-size: 16px\">This position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.</span></div>","id":"8b9f79f1-25ac-45cd-b2a1-98a4e7217644","lists":[{"text":"What You Will Do:","content":"<li>Establish, maintain, and supervise relationships with our BPO contact center, focusing on efficiency and cost-effectiveness</li><li>Conduct regular evaluations of vendor performance to ensure compliance with contractual obligations and service level agreements</li><li>Collaborate with internal and external stakeholders to ensure alignment of goals and effective communication channels</li><li>Use performance metrics to pinpoint areas for improvement, implement necessary corrections, and regularly produce detailed reports on vendor performance, risks, opportunities, and relevant metrics</li><li>Travel to BPO vendor sites for assessments, meetings, and relationship building</li><li>Stay updated on industry trends, driving innovation in BPO management and ensuring competitiveness</li><li>Facilitate effective communication across the team, encouraging feedback and customer insights to enhance the customer experience</li><li>Promote best practices, processes, and systems, fostering a culture of continuous improvement within the BPO</li>"},{"text":"What You Will Need","content":"<li>At least 3 years of working experience as an operations manager in a contact center or in a vendor management role</li><li>Complete understanding of contact center operations, efficiency models, key performance indicators and contributing factors</li><li>Capable of making or guiding decisions regarding staffing, systems, and operational requirements for the BPO contact center</li><li>Structured, proven ability to meet deadlines, manage multiple priorities and achieve results through strong stakeholder and project management skills</li><li>Exceptional interpersonal, customer service, problem-solving, verbal and written communication skills</li><li>Decisive with excellent attention to detail, possessing strong analytical skills and structured thinking process</li><li>Ability to travel to visit BPO vendor (25%)</li>"}],"text":"Vendor Manager","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">If you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. </span></div><div><br></div><div><span style=\"font-size: 16px;\">This position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.</span></div>","descriptionBodyPlain":"About the Role\n\nIf you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. \n\nThis position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/8b9f79f1-25ac-45cd-b2a1-98a4e7217644","applyUrl":"https://jobs.lever.co/GoToGroup/8b9f79f1-25ac-45cd-b2a1-98a4e7217644/apply"}]
  recorded_at: Sun, 26 May 2024 06:23:53 GMT
- request:
    method: get
    uri: https://jobs.lever.co/GoToGroup
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - jobs.lever.co
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 26 May 2024 06:23:54 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '463611'
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Etag:
      - W/"712fb-BmDxLOGEN6Mw6lNgiGn0okLYVTE"
      X-Stream-Path:
      - djobs
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html><html><head prefix="og: http://ogp.me/ns#"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><title>GoTo Group</title><style>.template-btn-submit.hex-color {background: #00CC33;border-color: #00c230;color: white;}.template-btn-submit.hex-color:visited {color: white;}.template-btn-submit.hex-color:hover {background: #00c230;color: white;}.template-btn-submit.hex-color:active,.template-btn-submit.hex-color:focus {background: #008f24;color: white;}</style><meta name="twitter:card" value="summary"><meta name="twitter:title" content="GoTo Group"><meta name="twitter:description" content="Job openings at GoTo Group"><meta name="twitter:image" content="https://lever-client-logos.s3.us-west-2.amazonaws.com/ea3dc26a-36d6-4989-8596-ac871e4a9e82-1707733905611.png"><meta property="og:title" content="GoTo Group jobs" /><meta property="og:description" content="Job openings at GoTo Group" /><meta property="og:url" content="https://jobs.lever.co/GoToGroup" /><meta property="og:image" content="https://lever-client-logos.s3.us-west-2.amazonaws.com/ea3dc26a-36d6-4989-8596-ac871e4a9e82-1707733917014.png" /><meta property="og:image:height" content="630" /><meta property="og:image:width" content="1200" /><style>@font-face {font-family: 'Meta';src: url("https://cdn.lever.co/fonts/Meta/metaboldlf-webfont-2017.woff") format('woff');font-weight: 600;font-style: normal;}@font-face {font-family: 'Meta';src: url("https://cdn.lever.co/fonts/Meta/metanormal-webfont-2017.woff") format('woff');font-weight: 400;font-style: normal;}@font-face {font-family: 'Meta';src: url("https://cdn.lever.co/fonts/Meta/metanormalitaliclf-webfont-2017.woff") format('woff');font-weight: 400;font-style: italic;}@font-face {font-family: 'Meta';src: url("https://cdn.lever.co/fonts/Meta/metabolditaliclf-webfont-2017.woff") format('woff');font-weight: 600;font-style: italic;}@font-face {font-family: 'Meta-Caps';src: url("https://cdn.lever.co/fonts/Meta/MetaScWeb-Normal.eot");src: url("https://cdn.lever.co/fonts/Meta/MetaScWeb-Normal.woff") format('woff');font-weight: 400;font-style: normal;}@font-face {font-family: 'Avenir';src: url("https://cdn.lever.co/fonts/Avenir/Avenir-Next-Pro-Regular.eot");src: url("https://cdn.lever.co/fonts/Avenir/Avenir-Next-Pro-Regular.woff") format('woff');src: url("https://cdn.lever.co/fonts/Avenir/Avenir-Next-Pro-Regular.ttf") format('truetype');font-weight: normal;font-style: normal;}.caps-label,.classic-table th,h4,h6,th,.btn,.submit,.btn-large,.submit-large,.btn-large-secondary,.dark-button,.toggle-label,.gated-feature:before,.gated-feature-inline:before,.gated-feature-inline-enterprise:before,.gated-feature-inline-professional:before,.gated-feature-inline-starter:before,.gated-feature-block:before,.gated-feature-block-pro:before,.cc-btn {font: 14px/1.4em 'Meta-Caps', sans-serif;text-transform: lowercase;letter-spacing: 1px;}.label,body,input,select,textarea,.btn-no-style,.application-question input,.application-additional input,.application-question textarea,.application-additional textarea,.application-question select,.application-additional select,.eeo-light-text,h5.eeo-paragraph-heading,.list .filter-popup {font: 400 14px/1.4em Meta, sans-serif;text-transform: none;letter-spacing: 0;}p.larger,.large-input,.large-input.dark,.message-banner {font: 400 16px/1.4em Meta, sans-serif;}h1,h2,h3,h5 {font: 600 16px/1.4em Meta, sans-serif;-webkit-font-smoothing: antialiased;}h1,h2,h3,h5 {color: #222326;}.gated-feature:after,.gated-feature-inline:after,.gated-feature-inline-enterprise:after,.gated-feature-inline-professional:after,.gated-feature-inline-starter:after,.gated-feature-block:after,.gated-feature-block-pro:after {position: absolute;top: 0;bottom: 0;}.gated-feature:after,.gated-feature-inline:after,.gated-feature-inline-enterprise:after,.gated-feature-inline-professional:after,.gated-feature-inline-starter:after,.gated-feature-block:after,.gated-feature-block-pro:after {position: absolute;right: 0;left: 0;}.hidden {display: none !important;}.fadein {-webkit-animation: lever-fadein 300ms ease-in;-moz-animation: lever-fadein 300ms ease-in;-o-animation: lever-fadein 300ms ease-in;-ms-animation: lever-fadein 300ms ease-in;animation: lever-fadein 300ms ease-in;opacity: 1;-ms-filter: none;filter: none;}.fadeout {-webkit-animation: lever-fadeout 300ms ease-in;-moz-animation: lever-fadeout 300ms ease-in;-o-animation: lever-fadeout 300ms ease-in;-ms-animation: lever-fadeout 300ms ease-in;animation: lever-fadeout 300ms ease-in;opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}.slidedown {-webkit-animation: lever-slidedown 300ms ease-in;-moz-animation: lever-slidedown 300ms ease-in;-o-animation: lever-slidedown 300ms ease-in;-ms-animation: lever-slidedown 300ms ease-in;animation: lever-slidedown 300ms ease-in;}.slideup {-webkit-animation: lever-slideup 300ms ease-out;-moz-animation: lever-slideup 300ms ease-out;-o-animation: lever-slideup 300ms ease-out;-ms-animation: lever-slideup 300ms ease-out;animation: lever-slideup 300ms ease-out;}.face-off {background-color: #f0f;}.face-off-border {border-color: #f0f !important;}.face-off-label {display: block;position: absolute;top: 24px;font-size: 24px;width: 100%;text-align: center;color: #fff;}.comma-separated:after {content: ", ";}.comma-separated:last-of-type:after {content: "";}.numbers,.dates,.count {font-family: 'Avenir';font-size: 0.857em;}.numbers,.dates {font-size: 0.92em;text-transform: uppercase;}.label {font-size: 12px;color: #969799;}.label.dark {color: #6a7c83;}.caps-label,.classic-table th {font-size: 12px;color: #969799;}.caps-label.dark,.classic-table th.dark {color: #6a7c83;}.vert-space-1 {margin-top: 5px;}.vert-space-2 {margin-top: 10px;}.vert-space-3 {margin-top: 15px;}.vert-space-4 {margin-top: 20px;}.vert-space-5 {margin-top: 25px;}.vert-space-6 {margin-top: 30px;}.vert-space-7 {margin-top: 35px;}.vert-space-8 {margin-top: 40px;}.vert-space-9 {margin-top: 45px;}.vert-space-10 {margin-top: 50px;}.vert-space-11 {margin-top: 55px;}.vert-space-12 {margin-top: 60px;}.full-width {width: 100%;}.left-align {text-align: left;}.right-align {text-align: right;}.centered {text-align: center;}.bulleted-list,.numbered-list {margin-left: 15px;}.bulleted-list li,.numbered-list li {margin-bottom: 8px;}.classic-table.fixed {table-layout: fixed;}.classic-table.no-padding td,.classic-table.no-padding th {padding: initial;}.classic-table.dark td,.classic-table.dark th {border-bottom: 1px solid #536266;}.classic-table.dark th {color: #6a7c83;}.classic-table td,.classic-table th {border-bottom: 1px solid #e3e4e6;padding: 10px 15px;vertical-align: top;}.classic-table td:first-of-type,.classic-table th:first-of-type {padding-left: 0;}.classic-table.no-bottom-border tr:last-child > td,.classic-table.no-bottom-border tr:last-child > th {border-bottom: none;}@-moz-keyframes lever-fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-webkit-keyframes lever-fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-o-keyframes lever-fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@keyframes lever-fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-moz-keyframes lever-fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-webkit-keyframes lever-fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-o-keyframes lever-fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@keyframes lever-fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-moz-keyframes lever-slidedown {0% {-webkit-transform: translateY(-20px);-moz-transform: translateY(-20px);-o-transform: translateY(-20px);-ms-transform: translateY(-20px);transform: translateY(-20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@-webkit-keyframes lever-slidedown {0% {-webkit-transform: translateY(-20px);-moz-transform: translateY(-20px);-o-transform: translateY(-20px);-ms-transform: translateY(-20px);transform: translateY(-20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@-o-keyframes lever-slidedown {0% {-webkit-transform: translateY(-20px);-moz-transform: translateY(-20px);-o-transform: translateY(-20px);-ms-transform: translateY(-20px);transform: translateY(-20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@keyframes lever-slidedown {0% {-webkit-transform: translateY(-20px);-moz-transform: translateY(-20px);-o-transform: translateY(-20px);-ms-transform: translateY(-20px);transform: translateY(-20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@-moz-keyframes lever-slideup {0% {-webkit-transform: translateY(20px);-moz-transform: translateY(20px);-o-transform: translateY(20px);-ms-transform: translateY(20px);transform: translateY(20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@-webkit-keyframes lever-slideup {0% {-webkit-transform: translateY(20px);-moz-transform: translateY(20px);-o-transform: translateY(20px);-ms-transform: translateY(20px);transform: translateY(20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@-o-keyframes lever-slideup {0% {-webkit-transform: translateY(20px);-moz-transform: translateY(20px);-o-transform: translateY(20px);-ms-transform: translateY(20px);transform: translateY(20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}@keyframes lever-slideup {0% {-webkit-transform: translateY(20px);-moz-transform: translateY(20px);-o-transform: translateY(20px);-ms-transform: translateY(20px);transform: translateY(20px);opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {-webkit-transform: translateY(0px);-moz-transform: translateY(0px);-o-transform: translateY(0px);-ms-transform: translateY(0px);transform: translateY(0px);opacity: 1;-ms-filter: none;filter: none;}}* {-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;}body {background: #f9f9f9;color: #555659;}th {text-align: left;}body,dd,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,li,menu,ol,p,td,th,ul,.toggle-label,.main-footer,.application .application-label,.eeo-survey .application-label,.application .application-field label,.eeo-survey .application-field label,.application .application-question input[type=text],.eeo-survey .application-question input[type=text],.application .application-additional input[type=text],.eeo-survey .application-additional input[type=text],.application .application-question input[type=email],.eeo-survey .application-question input[type=email],.application .application-additional input[type=email],.eeo-survey .application-additional input[type=email],.application .application-question input[type=tel],.eeo-survey .application-question input[type=tel],.application .application-additional input[type=tel],.eeo-survey .application-additional input[type=tel],.application .application-question textarea,.eeo-survey .application-question textarea,.application .application-additional textarea,.eeo-survey .application-additional textarea,.application .application-question select,.eeo-survey .application-question select,.application .application-additional select,.eeo-survey .application-additional select,.application .application-question .application-answer-alternative,.eeo-survey .application-question .application-answer-alternative,.application .application-additional .application-answer-alternative,.eeo-survey .application-additional .application-answer-alternative {margin: 0;padding: 0;}ul {margin: 0 auto;}table {border-collapse: collapse;border-spacing: 0;}fieldset,img {border: 0;}img.desaturate {-webkit-filter: grayscale(100%);}h1 {font-size: 36px;}h2,h5 {font-size: 24px;}h3 {font-size: 18px;}h5 {font-size: 16px;}h6,th {font-size: 12px;}a,a:visited {color: #579eee;text-decoration: none;}a:hover {color: #555659;cursor: pointer;}a:active {color: #0c92f3;}p>a {text-decoration: underline;color: inherit;}b {font-weight: 600;-webkit-font-smoothing: antialiased;}input,select,textarea {color: #555659;margin: 0;}input,select {height: 30px;}section {padding-bottom: 16px;}button {-webkit-appearance: button;-moz-appearance: button;appearance: button;cursor: pointer;}.btn,.submit,.btn-large,.submit-large,.btn-large-secondary,.dark-button,.cc-btn {position: relative;display: inline-block;margin: 0;font-size: 14px;font-weight: normal;line-height: 1.33;padding: 5px 15px;text-align: center;white-space: nowrap;vertical-align: middle;cursor: pointer;border: 1px solid #dcdcdc;border-radius: 3px;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;-webkit-appearance: none;-moz-appearance: none;appearance: none;color: #555659;background: #fcfcfc;background: -webkit-linear-gradient(top, #fff, #f9f9f9);background: -moz-linear-gradient(top, #fff, #f9f9f9);background: -o-linear-gradient(top, #fff, #f9f9f9);background: -ms-linear-gradient(top, #fff, #f9f9f9);background: linear-gradient(to bottom, #fff, #f9f9f9);-webkit-transition: background 0.15s, border-color 0.15s, color 0.15s, box-shadow 0.15s, fill 0.15s;-moz-transition: background 0.15s, border-color 0.15s, color 0.15s, box-shadow 0.15s, fill 0.15s;-o-transition: background 0.15s, border-color 0.15s, color 0.15s, box-shadow 0.15s, fill 0.15s;-ms-transition: background 0.15s, border-color 0.15s, color 0.15s, box-shadow 0.15s, fill 0.15s;transition: background 0.15s, border-color 0.15s, color 0.15s, box-shadow 0.15s, fill 0.15s;}.btn:hover,.submit:hover,.btn-large:hover,.submit-large:hover,.btn-large-secondary:hover,.dark-button:hover,.cc-btn:hover,.btn-invisible:hover,.btn-no-style:hover {color: #1a1b1c;border-color: #969799;}.btn:active,.submit:active,.btn-large:active,.submit-large:active,.btn-large-secondary:active,.dark-button:active,.cc-btn:active {border-color: #555659;background: -webkit-linear-gradient(top, #f9f9f9, #fff);background: -moz-linear-gradient(top, #f9f9f9, #fff);background: -o-linear-gradient(top, #f9f9f9, #fff);background: -ms-linear-gradient(top, #f9f9f9, #fff);background: linear-gradient(to bottom, #f9f9f9, #fff);}.btn:active .icon >path,.submit:active .icon >path,.btn-large:active .icon >path,.submit-large:active .icon >path,.btn-large-secondary:active .icon >path,.dark-button:active .icon >path,.cc-btn:active .icon >path {fill: #555659;}.btn:focus,.submit:focus,.btn-large:focus,.submit-large:focus,.btn-large-secondary:focus,.dark-button:focus,.cc-btn:focus {outline: thin dotted;outline: 3px auto #0c92f3;outline-offset: -2px;}.btn.disabled,.submit.disabled,.btn-large.disabled,.submit-large.disabled,.btn-large-secondary.disabled,.dark-button.disabled,.cc-btn.disabled,.btn:disabled,.submit:disabled,.btn-large:disabled,.submit-large:disabled,.btn-large-secondary:disabled,.dark-button:disabled,.cc-btn:disabled,input.btn:disabled {cursor: default;pointer-events: none;-webkit-box-shadow: none;box-shadow: none;background: #e3e4e6;color: #555659;border-color: #dcdcdc;outline: none;}.btn.disabled.has-tip,.submit.disabled.has-tip,.btn-large.disabled.has-tip,.submit-large.disabled.has-tip,.btn-large-secondary.disabled.has-tip,.dark-button.disabled.has-tip,.cc-btn.disabled.has-tip,.btn:disabled.has-tip,.submit:disabled.has-tip,.btn-large:disabled.has-tip,.submit-large:disabled.has-tip,.btn-large-secondary:disabled.has-tip,.dark-button:disabled.has-tip,.cc-btn:disabled.has-tip,input.btn:disabled.has-tip {pointer-events: auto;}.btn.disabled:hover,.submit.disabled:hover,.btn-large.disabled:hover,.submit-large.disabled:hover,.btn-large-secondary.disabled:hover,.dark-button.disabled:hover,.cc-btn.disabled:hover,.btn:disabled:hover,.submit:disabled:hover,.btn-large:disabled:hover,.submit-large:disabled:hover,.btn-large-secondary:disabled:hover,.dark-button:disabled:hover,.cc-btn:disabled:hover,input.btn:disabled:hover,.btn.disabled:active,.submit.disabled:active,.btn-large.disabled:active,.submit-large.disabled:active,.btn-large-secondary.disabled:active,.dark-button.disabled:active,.cc-btn.disabled:active,.btn:disabled:active,.submit:disabled:active,.btn-large:disabled:active,.submit-large:disabled:active,.btn-large-secondary:disabled:active,.dark-button:disabled:active,.cc-btn:disabled:active,input.btn:disabled:active {color: #555659;background: #e3e4e6;border-color: #dcdcdc;}.btn.dropdown-button,.submit.dropdown-button,.btn-large.dropdown-button,.submit-large.dropdown-button,.btn-large-secondary.dropdown-button,.dark-button.dropdown-button,.cc-btn.dropdown-button {text-align: left;white-space: nowrap;overflow: hidden;-o-text-overflow: ellipsis;text-overflow: ellipsis;padding-right: 19px;}.btn.dropdown-button.full-width,.submit.dropdown-button.full-width,.btn-large.dropdown-button.full-width,.submit-large.dropdown-button.full-width,.btn-large-secondary.dropdown-button.full-width,.dark-button.dropdown-button.full-width,.cc-btn.dropdown-button.full-width {width: 100%;}.btn .icon >path,.submit .icon >path,.btn-large .icon >path,.submit-large .icon >path,.btn-large-secondary .icon >path,.dark-button .icon >path,.cc-btn .icon >path {fill: #555659;}.btn.has-icon,.submit.has-icon,.btn-large.has-icon,.submit-large.has-icon,.btn-large-secondary.has-icon,.dark-button.has-icon,.cc-btn.has-icon {padding-left: 41px;}.btn.has-icon .icon,.submit.has-icon .icon,.btn-large.has-icon .icon,.submit-large.has-icon .icon,.btn-large-secondary.has-icon .icon,.dark-button.has-icon .icon,.cc-btn.has-icon .icon,.btn.has-icon .loading-indicator,.submit.has-icon .loading-indicator,.btn-large.has-icon .loading-indicator,.submit-large.has-icon .loading-indicator,.btn-large-secondary.has-icon .loading-indicator,.dark-button.has-icon .loading-indicator,.cc-btn.has-icon .loading-indicator {position: absolute;left: 15px;top: calc(50% - 8px);}.btn.has-icon .btn-content,.submit.has-icon .btn-content,.btn-large.has-icon .btn-content,.submit-large.has-icon .btn-content,.btn-large-secondary.has-icon .btn-content,.dark-button.has-icon .btn-content,.cc-btn.has-icon .btn-content {position: relative;display: inline-block;}.btn.has-icon .btn-content .icon,.submit.has-icon .btn-content .icon,.btn-large.has-icon .btn-content .icon,.submit-large.has-icon .btn-content .icon,.btn-large-secondary.has-icon .btn-content .icon,.dark-button.has-icon .btn-content .icon,.cc-btn.has-icon .btn-content .icon,.btn.has-icon .btn-content .loading-indicator,.submit.has-icon .btn-content .loading-indicator,.btn-large.has-icon .btn-content .loading-indicator,.submit-large.has-icon .btn-content .loading-indicator,.btn-large-secondary.has-icon .btn-content .loading-indicator,.dark-button.has-icon .btn-content .loading-indicator,.cc-btn.has-icon .btn-content .loading-indicator {left: -26px;}.btn.has-icon.right,.submit.has-icon.right,.btn-large.has-icon.right,.submit-large.has-icon.right,.btn-large-secondary.has-icon.right,.dark-button.has-icon.right,.cc-btn.has-icon.right {padding-left: 15px;padding-right: 41px;}.btn.has-icon.right .icon,.submit.has-icon.right .icon,.btn-large.has-icon.right .icon,.submit-large.has-icon.right .icon,.btn-large-secondary.has-icon.right .icon,.dark-button.has-icon.right .icon,.cc-btn.has-icon.right .icon {right: 15px;left: initial;}.btn small,.submit small,.btn-large small,.submit-large small,.btn-large-secondary small,.dark-button small,.cc-btn small {margin-left: 10px;font-size: 12px;opacity: 0.67;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=67)";filter: alpha(opacity=67);}.btn small.dates,.submit small.dates,.btn-large small.dates,.submit-large small.dates,.btn-large-secondary small.dates,.dark-button small.dates,.cc-btn small.dates {font-size: 11px;}.submit,.submit-large {color: #fff;background: #0c92f3;border: 1px solid #0c92f3;}.submit .icon >path,.submit-large .icon >path {fill: #fff;}.submit:hover,.submit-large:hover {color: #fff;background: #007fd9;border: 1px solid #0c92f3;}.submit:active,.submit-large:active {background: #1a1b1c;border-color: #1a1b1c;}.submit:active .icon >path,.submit-large:active .icon >path {fill: #fff;}.submit:focus,.submit-large:focus {outline-color: #064979;}.btn-large,.btn-large-secondary {padding: 10px 15px;}.submit-large {padding: 10px 15px;}.btn-large-secondary {background: #969799;color: #fff;border: 1px solid #969799;}.btn-large-secondary:hover {background: #555659;color: #fff;border-color: #555659;}.btn-large-secondary:active {background: #555659;color: #fff;border-color: #555659;}.btn-large-secondary .icon >path {fill: #e3e4e6;}a.btn,a.btn-large {color: #555659;}a.submit,a.submit-large,a.btn-large-secondary {color: #fff;}.dark-button {background: #2c2e2f;border: 1px solid rgba(106,124,131,0.75);color: #e3e4e6;-webkit-transition: background-color 0.15s;-moz-transition: background-color 0.15s;-o-transition: background-color 0.15s;-ms-transition: background-color 0.15s;transition: background-color 0.15s;}.dark-button .icon >path {fill: #dcdcdc;}.dark-button.disabled,.dark-button:disabled {background: #3f484b;border: 1px solid rgba(106,124,131,0.5);color: #555659;pointer-events: none;}.dark-button.disabled .icon > path,.dark-button:disabled .icon > path {fill: rgba(106,124,131,0.5);}.dark-button.disabled.has-tip,.dark-button:disabled.has-tip {pointer-events: auto;}.dark-button.disabled.has-tip:hover,.dark-button:disabled.has-tip:hover {background: #3f484b;border: 1px solid rgba(106,124,131,0.5);color: #555659;}.dark-button.transparent {background-color: transparent;}.dark-button:hover {background: #1a1b1c;border-color: #7d8f95;color: #fcfcfc;}.dark-button:hover .icon > path {fill: #fff;}.dark-button:active {border-color: #dcdcdc;}.icon-only {position: relative;width: 32px;height: 30px;}.icon-only .icon {position: absolute;left: calc(50% - 8px);top: calc(50% - 8px);}.icon-only:hover .icon >path {fill: #555659;}.icon-only:active .icon >path {fill: #2c2e2f;}.icon-only.dark-button:hover .icon >path {fill: #fff;}.btn-invisible,.btn-no-style {color: #555659;padding: 5px 15px;border-color: transparent;-webkit-box-shadow: inset 0 0 0 1px transparent;box-shadow: inset 0 0 0 1px transparent;background: transparent;-webkit-transition: background 0.15s, box-shadow 0.15s, color 0.15s;-moz-transition: background 0.15s, box-shadow 0.15s, color 0.15s;-o-transition: background 0.15s, box-shadow 0.15s, color 0.15s;-ms-transition: background 0.15s, box-shadow 0.15s, color 0.15s;transition: background 0.15s, box-shadow 0.15s, color 0.15s;}.btn-invisible.disabled,.btn-no-style.disabled,.btn-invisible:disabled,.btn-no-style:disabled {cursor: default;}.btn-no-style {padding: 5px 10px 5px 0;vertical-align: baseline;}.btn-no-style:hover {border-color: transparent;color: #555659;}.btn-no-style:focus {border-radius: 0;outline: none;}.btn-no-style.dark {color: #7d8f95;}.btn-no-style.dark:hover {color: #f9f9f9;}.btn-no-style.dark:active {background: transparent;border-color: transparent;color: #fff;}.btn-no-style .css-icon::before {right: 0;}.link {display: inline-block;position: relative;cursor: pointer;-webkit-transition: all 0.15s;-moz-transition: all 0.15s;-o-transition: all 0.15s;-ms-transition: all 0.15s;transition: all 0.15s;}.link.has-icon {padding-left: 20px;}.link.has-icon .icon {position: absolute;left: 0;top: calc(50% - 8px);}.link.has-icon .icon >path {fill: #969799;}.link.has-icon .icon-plus,.link.has-icon .icon-close,.link.has-icon .icon-delete {top: calc(50% - 10px);}.link.has-icon:hover .icon >path {fill: #555659;}.link.has-icon:active .icon >path {fill: #0c92f3;}.link.dark,.popup-content .link {color: #7d8f95;}.link.dark .icon >path,.popup-content .link .icon >path {fill: #7d8f95;}.link.dark:hover,.popup-content .link:hover {color: #dcdcdc;}.link.dark:hover .icon >path,.popup-content .link:hover .icon >path {fill: #dcdcdc;}.link.dark:active,.popup-content .link:active {color: #fff;}.link.secondary {color: #969799;}.link.secondary:hover {color: #555659;}button.icon-btn {border: 0;background: none;padding: 0;}button.icon-btn:active {outline: none;}.icon-btn {display: inline-block;margin-left: 10px;vertical-align: middle;}.icon-btn .icon {display: block;}.icon-btn .icon >path {fill: #969799;}.icon-btn:hover .icon >path {fill: #555659;}.icon-btn.dark .icon >path {fill: #6a7c83;}.icon-btn.dark:hover .icon >path {fill: #f9f9f9;}.link-bar {display: block;margin-top: 16px;white-space: nowrap;}.link-bar.no-margin {margin-top: 0;}.link-bar .submit,.link-bar .submit-large,.link-bar .dark-button {min-width: 120px;}.link-bar a,.link-bar button {vertical-align: baseline;}.link-bar.right,.link-bar.center {text-align: right;}.link-bar.right a,.link-bar.center a,.link-bar.right button,.link-bar.center button {margin-right: 15px;}.link-bar.right .btn,.link-bar.center .btn,.link-bar.right .dark-button,.link-bar.center .dark-button,.link-bar.right .submit,.link-bar.center .submit {margin-right: 10px;}.link-bar.right *:nth-last-child(1),.link-bar.center *:nth-last-child(1) {margin-right: 0;}.link-bar.left {text-align: left;}.link-bar.left a,.link-bar.left button {margin-left: 15px;}.link-bar.left .btn,.link-bar.left .dark-button,.link-bar.left .submit {margin-left: 10px;}.link-bar.left *:first-child {margin-left: 0;}.link-bar.center {text-align: center;}input[type=radio],input[type=checkbox] {-webkit-appearance: none;-moz-appearance: none;appearance: none;width: 17px;height: 17px;position: relative;border: 1px solid #dcdcdc;margin: 0;background: #fff;cursor: pointer;}input[type=radio].disabled,input[type=checkbox].disabled,input[type=radio]:disabled,input[type=checkbox]:disabled {background: #e3e4e6;}input[type=radio].dark,input[type=checkbox].dark {background: rgba(106,124,131,0.2);border-color: rgba(106,124,131,0.8);}input[type=radio].dark:checked,input[type=checkbox].dark:checked {background: #dcdcdc;}input[type=radio].dark:focus,input[type=checkbox].dark:focus {background: #f9f9f9;}input[type=radio].dark:active,input[type=checkbox].dark:active {background: #fff;}input[type=radio].dark.disabled,input[type=checkbox].dark.disabled,input[type=radio].dark:disabled,input[type=checkbox].dark:disabled {background: rgba(106,124,131,0.5);}input[type=radio] {border-radius: 8.5px;}input[type=radio]:active {background: #dcdcdc;}input[type=radio]:checked::after {position: absolute;content: "";height: 9px;width: 9px;left: calc(50% - 4.5px);top: calc(50% - 4.5px);border-radius: 4.25px;background-color: #0c92f3;}input[type=checkbox] {border-radius: 3px;}input[type=checkbox]:active {background: #dcdcdc;}input[type=checkbox]:checked::after {position: absolute;content: "";left: 15%;top: 3%;height: 40%;width: 69%;border-bottom: 2px solid #0c92f3;border-left: 2px solid #0c92f3;-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-o-transform: rotate(-45deg);-ms-transform: rotate(-45deg);transform: rotate(-45deg);}input[type=submit] {height: inherit;}input.required-checkbox[type=checkbox]:hover::after {position: absolute;-webkit-transform: none;-moz-transform: none;-o-transform: none;-ms-transform: none;transform: none;top: calc(50% - 6px);left: calc(50% - 6px);content: "";width: 11px;height: 11px;border: none;background-size: contain;background-repeat: no-repeat;background-image: url("data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADe0lEQVRYCe2WW0jTYRTA3V3pZRWEJJJFUQQFRtCFogt7kV7cxVkGmlBPdoHepCh6CCHoJYIIyvlgLYdzUfjQnSjoQXpIYUSZ9aZQQmNzDHVbvzPa+O/bf9sf0Tf/8PF9536+c853zt9Us4RvZGTkuMlkeqOITrrd7m0KriporsqxwgyrDqxGYDUCVnlloVBoK1vC7/fPrPCrK6gPh8P70+n0WM4Bq9XaB8VDg3nPHlpcXAzjzO8C9zIdhoeH95rN5nbUtdHINmUyGZeV29cBtICUejgmC4fuRiKRdzAMQYt4PJ5Z8Ev6MNqMUT/CfnRt0SqxWCw+bFnF+BotAUYLsAtBF/s9IvOaPRSLxSLd3d1/tbx6Zy61C71yUzFatj1Dc5tQ/pjDKT1FKi6bzc6De8WaROaSlg5thnUffDtrh5ZW6WyFuQ7BNLvcuuIHjx2GE3pM0OpZ1/Vo5XDYnTUzwdypVKoB4DyMH1jZcgLLhJcUDmCvZXx8vN6kKiV/DRRHG/k/CW2fSl8KjLEE0XnGs3tCYb/ghUkqc1+JA3mC7MFgsMlut0shSV73aGkGzkkMj8pLisfjoxRvSk+mogNaAWlWRKaLyFzV4tUzRqfAXUkkEs87OzvnVLoKG54FhE0qf62qQAduhG/KiHGRNewADaUVxT06BotQ8NhADAUCAWcRoQxgyAFqoZHQP9TT8T/kKqnJ6XQGVKQeXNUBcm+pra19xM3WqQowPsg6xNKbG62086JmpcoLXNUBWuo1+A7rCP9KJpM9Xq93mko/A72kf+DYLRlAOrIFVMVXQJs+Audbbl/kKIrT4I8ypD7mNcF7G77LeViz/1xYWGimiGMaXOFYpLiA5YDC9WwS+hIeHOjTGhc5Rngv22c5K99motiv4ApgifICpaamH+MNGjh3xPjYxMTEDRUv3Y2bSveMqzT0ePgBuaDiBdZNgTBT9Xd0BOZop80+n++7Di2HInKnMTio0nF8HvxBRk9RlEocoOq322y2LyhwqEootnMU3QMVr8I4MYCxLhWPEz9I1U7tLChJQTQaldv1wZxRFDw1YlxkaMM9yH9T5CU1vVrjQi+JQF6INLi4hRThBpRNM7J3d3R0/MnTq+3yK8bs+ASfRDJK6ryk7qsqV9YBYaQDbnQ4HEGcuEnuXqrC1WBScRGeA0TkrNHZUE3nstP/Ae08V3wBOebTAAAAAElFTkSuQmCC");background-position: 50% 50%;}input.required-checkbox[type=checkbox]:checked {border: none;background: #f26161;}input.required-checkbox[type=checkbox]:checked:hover {background: #d95757;}input.required-checkbox[type=checkbox]:checked:disabled {background: #f8b0b0;cursor: auto;}input[type=checkbox].required-checkbox:checked::after {position: absolute;-webkit-transform: none;-moz-transform: none;-o-transform: none;-ms-transform: none;transform: none;top: calc(50% - 6px);content: "";width: 11px;height: 11px;border: none;background-size: contain;background-repeat: no-repeat;background-image: url("data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAABtklEQVRIDe2UzStEYRSHZwxpwpSNlNQUEQsbSztK7BUmbKzITvkPWMjKjpSywlIpSc1CkWxkQ5IslCQpHwvCeM6k27nnvnfuhKyceu49H79z3vv5xmJFWi6X2wBtjcW0lhQj+onmf4HIp/c3j4hPYxjqIi+nSAGzyqAXWmIc0iD2AbswAbV2FrmCnyn1UuiGJbgDsXlZYDLv+g/vhFkYgxpZjHNgAXIJ6IQFuAVrV9K4b7MmfiPegTOTXye+MblAGCfTzwUOQg+Uw2/ZCYPWvGEslIIR2IRX+I6d0zQNbd5gl4OgGkZhG+QRFbJLirPQ7poVmaNRvoww26IQjxwSJqC5Ak7Dpn/lh8L6I/MMWDbDX4gPTO6RuDlymBXQlDGDJJyCGriWQNkxftLOCI0RN8CDGiBuFvJ7F+cukJ9R22LoQF2gQ/aRQ92Jfw/1RjdjNBJmtMbpI5pzNMrP6DM0svfsGa28jyafUAcU5dZl09O2ojXaR5QGuTttRwQJrfN8CpWwqtQX+ClP4HCo9yn9E/6AQ+ZPIRqHZ+jwV9wROtlN5X9pdSscWcT5bdpRCqTQJqEqUCDxCYHVRpVrffeeAAAAAElFTkSuQmCC");background-position: 50% 50%;}input::placeholder,textarea::placeholder {color: #969799;}input:-ms-input-placeholder,textarea:-ms-input-placeholder {color: #969799;}.classic-input,.large-input {-webkit-transition: border-color 0.15s, background 0.15s;-moz-transition: border-color 0.15s, background 0.15s;-o-transition: border-color 0.15s, background 0.15s;-ms-transition: border-color 0.15s, background 0.15s;transition: border-color 0.15s, background 0.15s;border: 1px solid #e3e4e6;background-color: #fff;padding: 4px 10px;border-radius: 3px;}.classic-input.invalid,.large-input.invalid {border: 1px solid #d94141;}.classic-input.invalid:focus,.large-input.invalid:focus {outline: none;}.classic-input.invalid:hover,.large-input.invalid:hover {border: 1px solid #d94141;}.classic-input:hover,.large-input:hover {background-color: #fff;border-color: rgba(12,146,243,0.5);}.classic-input:active,.large-input:active,.classic-input:focus,.large-input:focus {outline: none;-webkit-box-shadow: none;box-shadow: none;background-color: #fff;border-color: #0c92f3;}.classic-input.disabled,.large-input.disabled,.classic-input:disabled,.large-input:disabled {background: #f9f9f9;color: #969799;}.classic-input.disabled:hover,.large-input.disabled:hover,.classic-input:disabled:hover,.large-input:disabled:hover,.classic-input.disabled:active,.large-input.disabled:active,.classic-input:disabled:active,.large-input:disabled:active {border-color: #e3e4e6;}.classic-input::-ms-clear,.large-input::-ms-clear {display: none;}textarea.classic-input {resize: vertical;}.hoverable-input {-webkit-transition: border-color 0.3s, background-color 0.3s;-moz-transition: border-color 0.3s, background-color 0.3s;-o-transition: border-color 0.3s, background-color 0.3s;-ms-transition: border-color 0.3s, background-color 0.3s;transition: border-color 0.3s, background-color 0.3s;border: 1px solid transparent;background-color: transparent;padding: 4px 10px;border-radius: 3px;}.hoverable-input.invalid {border: 1px solid #d94141;outline: none;}.hoverable-input:hover {background-color: #fff;border-color: #e3e4e6;}.hoverable-input:active,.hoverable-input:focus {outline: none;-webkit-box-shadow: none;box-shadow: none;background-color: #f9f9f9;border-color: #e3e4e6;}.dark-input,.large-input.dark {height: 30px;color: #f9f9f9;padding: 4px 10px;background: rgba(106,124,131,0.5);border: none;color: #e3e4e6;border-radius: 3px;}.dark-input.invalid,.large-input.dark.invalid {border: 1px solid #d94141;}.dark-input.invalid:focus,.large-input.dark.invalid:focus {outline: none;}.dark-input.invalid:hover,.large-input.dark.invalid:hover {border: 1px solid #d94141;}.dark-input:hover,.large-input.dark:hover {background: #6a7c83;}.dark-input:focus,.large-input.dark:focus {background: #fff;color: #555659;outline: none;}textarea.dark-input {height: auto;}.large-input {height: 40px;}.large-input.dark {height: 40px;}.no-input {background: none;border: none;outline: none;-webkit-box-shadow: none;box-shadow: none;margin: 0;padding: 0;resize: none;}.no-input.dark {color: #f9f9f9;}.options-list {list-style-type: none;}.options-list li {margin-bottom: 8px;}.options-list li.list-padding {margin-bottom: 16px;}.options-list label {display: block;position: relative;cursor: pointer;}.options-list label input[type=checkbox],.options-list label input[type=radio] {position: absolute;}.options-list label input[type=checkbox] ~ span,.options-list label input[type=radio] ~ span,.options-list label input[type=checkbox] ~ p,.options-list label input[type=radio] ~ p {padding-left: 26px;display: block;color: #555659;}.options-list label input[type=checkbox]:checked ~ span,.options-list label input[type=radio]:checked ~ span,.options-list label input[type=checkbox]:checked ~ p,.options-list label input[type=radio]:checked ~ p {color: #555659;}.popup-content .options-list input[type="checkbox"],.sheets-content .options-list input[type="checkbox"],.modal-legacy.dark .options-list input[type="checkbox"],.popup-content .options-list input[type="radio"],.sheets-content .options-list input[type="radio"],.modal-legacy.dark .options-list input[type="radio"] {background: rgba(106,124,131,0.5);border-color: rgba(106,124,131,0.8);}.popup-content .options-list input[type="checkbox"] ~ span,.sheets-content .options-list input[type="checkbox"] ~ span,.modal-legacy.dark .options-list input[type="checkbox"] ~ span,.popup-content .options-list input[type="radio"] ~ span,.sheets-content .options-list input[type="radio"] ~ span,.modal-legacy.dark .options-list input[type="radio"] ~ span,.popup-content .options-list input[type="checkbox"] ~ p,.sheets-content .options-list input[type="checkbox"] ~ p,.modal-legacy.dark .options-list input[type="checkbox"] ~ p,.popup-content .options-list input[type="radio"] ~ p,.sheets-content .options-list input[type="radio"] ~ p,.modal-legacy.dark .options-list input[type="radio"] ~ p {color: #a4b0b4;}.popup-content .options-list input[type="checkbox"]:checked,.sheets-content .options-list input[type="checkbox"]:checked,.modal-legacy.dark .options-list input[type="checkbox"]:checked,.popup-content .options-list input[type="radio"]:checked,.sheets-content .options-list input[type="radio"]:checked,.modal-legacy.dark .options-list input[type="radio"]:checked {background: #dcdcdc;}.popup-content .options-list input[type="checkbox"]:checked ~ span,.sheets-content .options-list input[type="checkbox"]:checked ~ span,.modal-legacy.dark .options-list input[type="checkbox"]:checked ~ span,.popup-content .options-list input[type="radio"]:checked ~ span,.sheets-content .options-list input[type="radio"]:checked ~ span,.modal-legacy.dark .options-list input[type="radio"]:checked ~ span,.popup-content .options-list input[type="checkbox"]:checked ~ p,.sheets-content .options-list input[type="checkbox"]:checked ~ p,.modal-legacy.dark .options-list input[type="checkbox"]:checked ~ p,.popup-content .options-list input[type="radio"]:checked ~ p,.sheets-content .options-list input[type="radio"]:checked ~ p,.modal-legacy.dark .options-list input[type="radio"]:checked ~ p {color: #f9f9f9;}.popup-content .options-list input[type="checkbox"]:focus,.sheets-content .options-list input[type="checkbox"]:focus,.modal-legacy.dark .options-list input[type="checkbox"]:focus,.popup-content .options-list input[type="radio"]:focus,.sheets-content .options-list input[type="radio"]:focus,.modal-legacy.dark .options-list input[type="radio"]:focus {background: #f9f9f9;}.popup-content .options-list input[type="checkbox"].disabled,.sheets-content .options-list input[type="checkbox"].disabled,.modal-legacy.dark .options-list input[type="checkbox"].disabled,.popup-content .options-list input[type="radio"].disabled,.sheets-content .options-list input[type="radio"].disabled,.modal-legacy.dark .options-list input[type="radio"].disabled,.popup-content .options-list input[type="checkbox"]:disabled,.sheets-content .options-list input[type="checkbox"]:disabled,.modal-legacy.dark .options-list input[type="checkbox"]:disabled,.popup-content .options-list input[type="radio"]:disabled,.sheets-content .options-list input[type="radio"]:disabled,.modal-legacy.dark .options-list input[type="radio"]:disabled {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.popup-content .options-list input[type="checkbox"].disabled ~ span,.sheets-content .options-list input[type="checkbox"].disabled ~ span,.modal-legacy.dark .options-list input[type="checkbox"].disabled ~ span,.popup-content .options-list input[type="radio"].disabled ~ span,.sheets-content .options-list input[type="radio"].disabled ~ span,.modal-legacy.dark .options-list input[type="radio"].disabled ~ span,.popup-content .options-list input[type="checkbox"]:disabled ~ span,.sheets-content .options-list input[type="checkbox"]:disabled ~ span,.modal-legacy.dark .options-list input[type="checkbox"]:disabled ~ span,.popup-content .options-list input[type="radio"]:disabled ~ span,.sheets-content .options-list input[type="radio"]:disabled ~ span,.modal-legacy.dark .options-list input[type="radio"]:disabled ~ span,.popup-content .options-list input[type="checkbox"].disabled ~ p,.sheets-content .options-list input[type="checkbox"].disabled ~ p,.modal-legacy.dark .options-list input[type="checkbox"].disabled ~ p,.popup-content .options-list input[type="radio"].disabled ~ p,.sheets-content .options-list input[type="radio"].disabled ~ p,.modal-legacy.dark .options-list input[type="radio"].disabled ~ p,.popup-content .options-list input[type="checkbox"]:disabled ~ p,.sheets-content .options-list input[type="checkbox"]:disabled ~ p,.modal-legacy.dark .options-list input[type="checkbox"]:disabled ~ p,.popup-content .options-list input[type="radio"]:disabled ~ p,.sheets-content .options-list input[type="radio"]:disabled ~ p,.modal-legacy.dark .options-list input[type="radio"]:disabled ~ p {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.popup-content .options-list input[type="radio"],.sheets-content .options-list input[type="radio"],.modal-legacy.dark .options-list input[type="radio"] {border-radius: 8.5px;}.loading-indicator {display: inline-block;border-radius: 30px;-webkit-animation: loading 1.2s infinite linear;-moz-animation: loading 1.2s infinite linear;-o-animation: loading 1.2s infinite linear;-ms-animation: loading 1.2s infinite linear;animation: loading 1.2s infinite linear;width: 30px;height: 30px;border: 4px solid #0c92f3;border-top: 4px solid #e3e4e6;border-left: 4px solid #e3e4e6;vertical-align: middle;}.loading-indicator.small {margin-right: 10px;width: 16px;height: 16px;border: 2px solid #0c92f3;border-top: 2px solid #e3e4e6;border-left: 2px solid #e3e4e6;}.loading-indicator.small.completed {border: 2px solid #555659;}.loading-indicator.small.completed .icon {vertical-align: top;width: 10px;height: 10px;}.loading-indicator.completed {border: 4px solid #555659;text-align: center;-webkit-animation: none;-moz-animation: none;-o-animation: none;-ms-animation: none;animation: none;}.loading-indicator .icon {margin-left: 1px;height: 100%;vertical-align: middle;}.loading-indicator .icon >path {fill: #39bf87;}.loading-indicator.fadein {-webkit-animation: loading 1.2s linear infinite, lever-fadein 300ms ease-in 150ms;-moz-animation: loading 1.2s linear infinite, lever-fadein 300ms ease-in 150ms;-o-animation: loading 1.2s linear infinite, lever-fadein 300ms ease-in 150ms;-ms-animation: loading 1.2s linear infinite, lever-fadein 300ms ease-in 150ms;animation: loading 1.2s linear infinite, lever-fadein 300ms ease-in 150ms;}@-moz-keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-webkit-keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-o-keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}.css-icon {display: inline-block;width: 16px;height: 1px;}.css-icon::before {position: absolute;display: block;content: "";right: 10px;top: calc(50% - 8px);width: 16px;height: 16px;}.css-icon-plus::before {background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16'><path d='M7.5,3h1v4.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3z'></path></svg>") no-repeat 0 0;}.css-icon-caret-down::before {background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16'><path fill='%23979797' d='M8 12l6.8-7.3L14.1 4l-6.1 6.5L1.9 4l-0.7 0.7L8 12zM8 12l6.8-7.3L14.1 4l-6.1 6.5L1.9 4l-0.7 0.7L8 12z'></path></svg>") no-repeat 0 0;}.btn-no-style.dark:hover .css-icon-caret-down::before {background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16'><path fill='%23DCDCDC' d='M8 12l6.8-7.3L14.1 4l-6.1 6.5L1.9 4l-0.7 0.7L8 12zM8 12l6.8-7.3L14.1 4l-6.1 6.5L1.9 4l-0.7 0.7L8 12z'></path></svg>") no-repeat 0 0;}.toggle-label {clear: left;color: #969799;line-height: 22px;}.toggle-label button {float: left;margin-right: 10px;}.toggle-slider {margin-left: 10px;background: #fff;width: 45px;height: 22px;border-radius: 11px;position: relative;vertical-align: middle;border: 1px solid #dcdcdc;-webkit-transition: background 150ms;-moz-transition: background 150ms;-o-transition: background 150ms;-ms-transition: background 150ms;transition: background 150ms;}.toggle-slider:focus {outline: none;}.toggle-slider:hover {background-color: #f9f9f9;}.toggle-slider .ball {height: 16px;width: 16px;border-radius: 8px;position: absolute;background-color: #dcdcdc;left: 2px;top: 2px;right: auto;-webkit-transition: 150ms;-moz-transition: 150ms;-o-transition: 150ms;-ms-transition: 150ms;transition: 150ms;}.toggle-slider .ball:hover {background: #969799;}.toggle-slider.on .ball {left: 25px;background: #39bf87;}.toggle-slider.on .ball:hover {background: #30a272;}.message-banner {position: relative;display: inline-block;margin-bottom: 20px;padding: 9px 15px;border-radius: 3px;background: #e1f3ff;color: #6a7c83;}.message-banner.full-width {display: block;}.message-banner.centered {text-align: center;}.message-banner.has-icon {padding-left: 41px;}.message-banner.has-dismiss {padding-right: 41px;}.message-banner.has-dismiss .icon-btn {position: absolute;right: 15px;top: 6px;}.message-banner.has-dismiss .icon-btn .icon {position: relative;left: inherit;top: inherit;}.message-banner.has-button {padding-top: 14px;padding-right: 180px;padding-bottom: 14px;}.message-banner.has-button .icon {top: 15px;}.message-banner.has-button .btn,.message-banner.has-button button {position: absolute;right: 10px;top: 10px;}.message-banner a,.message-banner a:visited {color: #555659;}.message-banner a:hover,.message-banner a:visited:hover {color: #1a1b1c;}.message-banner .icon {position: absolute;left: 15px;top: 10px;}.message-banner .icon >path {fill: #6a7c83;}.message-banner .label {color: #555659;}.message-banner .btn {float: right;}.message-banner.warning {background: #fec;}.message-banner.error {background: #ffe6e6;color: #555659;}.message-banner.error .label {color: #555659;}.message-banner.error .icon >path {fill: #555659;}.what-is-this {display: inline-block;color: #969799;cursor: default;padding-left: 4px;font-size: 12px;}.what-is-this.dark {color: #6a7c83;}.what-is-this.dark:hover {color: #f9f9f9;}.what-is-this .icon >path {fill: #969799;}.what-is-this:hover {color: #555659;}.what-is-this:hover .icon >path {fill: #555659;}.what-is-this-icon {display: inline-block;margin-left: 10px;}.what-is-this-icon .icon {width: 12px;height: 12px;}.what-is-this-icon .icon >path {fill: #969799;}.what-is-this-icon:hover .icon >path {fill: #555659;}.what-is-this-icon.no-margin {margin-left: 4px;}.what-is-this-icon.dark .icon >path {fill: #6a7c83;}.what-is-this-icon.dark:hover .icon >path {fill: #dde5e7;}.gated-feature,.gated-feature-inline,.gated-feature-inline-enterprise,.gated-feature-inline-professional,.gated-feature-inline-starter,.gated-feature-block,.gated-feature-block-pro {position: relative;cursor: pointer;background: rgba(227,228,230,0.5);}.gated-feature:before,.gated-feature-inline:before,.gated-feature-inline-enterprise:before,.gated-feature-inline-professional:before,.gated-feature-inline-starter:before,.gated-feature-block:before,.gated-feature-block-pro:before {content: 'Enterprise';font-size: 12px;color: #fff;background-color: #39bf87;border-radius: 3px;padding: 2px 10px;position: absolute;right: 15px;}.gated-feature:after,.gated-feature-inline:after,.gated-feature-inline-enterprise:after,.gated-feature-inline-professional:after,.gated-feature-inline-starter:after,.gated-feature-block:after,.gated-feature-block-pro:after {cursor: pointer;content: '';border-radius: 3px;border: 1px solid #e3e4e6;}.gated-feature-inline,.gated-feature-inline-enterprise,.gated-feature-inline-professional,.gated-feature-inline-starter {border: 1px solid #e3e4e6;border-radius: 3px;}.gated-feature-inline:before,.gated-feature-inline-enterprise:before,.gated-feature-inline-professional:before,.gated-feature-inline-starter:before {content: 'Enterprise';position: absolute;float: right;top: 50%;-webkit-transform: translateY(-50%);-moz-transform: translateY(-50%);-o-transform: translateY(-50%);-ms-transform: translateY(-50%);transform: translateY(-50%);margin-left: 10px;}.gated-feature-inline:after,.gated-feature-inline-enterprise:after,.gated-feature-inline-professional:after,.gated-feature-inline-starter:after {content: none;display: none;}.gated-feature-inline *,.gated-feature-inline-enterprise *,.gated-feature-inline-professional *,.gated-feature-inline-starter * {pointer-events: none;}.gated-feature-inline-professional:before {content: 'Pro';}.gated-feature-inline-starter:before {content: 'Starter';}.gated-feature-block,.gated-feature-block-pro {margin-top: 32px;padding: 15px 15px;}.gated-feature-block:before,.gated-feature-block-pro:before {top: 15px;-webkit-transform: none;-moz-transform: none;-o-transform: none;-ms-transform: none;transform: none;}.gated-feature-block:after,.gated-feature-block-pro:after {pointer-events: none;}.gated-feature-block-pro:before {content: 'Pro';}.gated-ad {max-width: 600px;min-height: 270px;}.gated-ad .pull-left {float: left;margin-right: 70px;}.gated-ad div.pull-left,.gated-ad div.image {margin-top: 25px;}.gated-ad ul li {margin: 0 0 32px 0;list-style: none;}.gated-ad ul li .icon {vertical-align: sub;margin-right: 10px;}.gated-ad ul li .icon > path {fill: #969799;}.momentum-body,.badge,.theme-inverse .button.button-link,.button.button-link,.font-base {font-family: 'Meta', sans-serif;letter-spacing: 0;text-transform: none;}.momentum-body .icon,.badge .icon,.theme-inverse .button.button-link .icon,.button.button-link .icon,.font-base .icon,.momentum-body .momentum-body .icon,.momentum-body .badge .icon,.momentum-body .theme-inverse .button.button-link .icon,.momentum-body .button.button-link .icon,.momentum-body .font-base .icon {vertical-align: -0.15em;}.momentum-body {color: #222326;font-size: 16px;font-weight: normal;line-height: 24px;margin: 0;}.button,.mo-identicon-initials,.col-list-row-header,.nav-link,.font-caps {font-family: 'Meta-Caps', 'Meta', sans-serif;letter-spacing: 1px;text-transform: lowercase;}.button .icon,.mo-identicon-initials .icon,.col-list-row-header .icon,.nav-link .icon,.font-caps .icon,.momentum-body .button .icon,.momentum-body .mo-identicon-initials .icon,.momentum-body .col-list-row-header .icon,.momentum-body .nav-link .icon,.momentum-body .font-caps .icon {vertical-align: -0.188em;}.form-control,.font-inherit {font-family: inherit;letter-spacing: inherit;text-transform: inherit;}.theme-inverse .button {-moz-osx-font-smoothing: auto;-webkit-font-smoothing: auto;}.theme-inverse,.theme-inverse .text-base,.theme-inverse .text-small,.theme-inverse .text-caption {-moz-osx-font-smoothing: auto;-webkit-font-smoothing: auto;}.momentum-body h1,.momentum-body h2,.momentum-body h3,.momentum-body h4,.momentum-body h5,.momentum-body b,.momentum-body strong,.text-h1,.text-h2,.text-h3,.text-h3_5,.text-h4,.text-h5 {-moz-osx-font-smoothing: grayscale;-webkit-font-smoothing: antialiased;}.theme-inverse h1,.theme-inverse h2,.theme-inverse h3,.theme-inverse h4,.theme-inverse h5,.theme-inverse b,.theme-inverse strong,.theme-inverse .text-h1,.theme-inverse .text-h2,.theme-inverse .text-h3,.theme-inverse .text-h3_5,.theme-inverse .text-h4,.theme-inverse .text-h5 {-moz-osx-font-smoothing: grayscale;-webkit-font-smoothing: antialiased;}.theme-inverse {background-color: #3b3d3f;color: #d7d7d9;}.card {border-radius: 3px;-webkit-box-shadow: 0 1px 1px rgba(0,0,0,0.15);box-shadow: 0 1px 1px rgba(0,0,0,0.15);}.momentum-body p {margin-bottom: 16px;margin-top: 0;}.momentum-body h1,.momentum-body h2,.momentum-body h3,.momentum-body h4,.momentum-body h5 {color: #222326;font-weight: bold;margin-bottom: 8px;margin-top: 0;text-transform: none;}.momentum-body h1 {font-size: 40px;line-height: 48px;}.momentum-body h2 {font-size: 32px;line-height: 40px;}.momentum-body h3 {font-size: 24px;line-height: 36px;}.momentum-body h4 {font-size: 16px;letter-spacing: 0;font-family: 'Meta', sans-serif;line-height: 24px;}.momentum-body h5 {font-size: 14px;line-height: 21px;}.momentum-body small {font-size: 14px;line-height: 21px;}.momentum-body ol,.momentum-body ul {margin-bottom: 16px;margin-top: 0;padding-left: 16px;}.momentum-body ol ol,.momentum-body ul ol,.momentum-body ol ul,.momentum-body ul ul {margin-bottom: 0;}.momentum-body b,.momentum-body strong {font-weight: bolder;}.momentum-body a {-webkit-text-decoration-skip: objects;background-color: transparent;color: inherit;text-decoration: underline;}.momentum-body a:visited {color: inherit;}.momentum-body a:hover {color: #0068b3;}.momentum-body a:active {color: #003459;}.momentum-body a.strikethrough {text-decoration: line-through;}.momentum-body a.text-muted {color: #555659;}.momentum-body a.text-decoration-none {text-decoration: none;}.momentum-body a.underline-on-hover {text-decoration: none;}.momentum-body a.underline-on-hover:hover,.momentum-body a.underline-on-hover:active,.momentum-body a.underline-on-hover:focus {text-decoration: underline;}.momentum-body hr {background: #e3e4e6;border: none;height: 1px;margin-bottom: 4px;margin-top: 3px;}.momentum-body section {margin-bottom: 32px;}.momentum-body input[type=text] {height: auto;}.momentum-body button {cursor: pointer;}.momentum-body .icon {display: inline-block;height: 16px;margin-left: 8px;margin-right: 8px;width: 16px;}.momentum-body .icon:not(.icon-ms-teams) > path {fill: currentColor;}.momentum-body .icon:first-child {margin-left: 0;}.momentum-body .icon:last-child {margin-right: 0;}.momentum-body .icon-large {height: 24px;margin-left: 8px;margin-right: 8px;width: 24px;}.momentum-body .icon-small {height: 14px;width: 14px;margin-left: 8px;margin-right: 8px;}.momentum-body .icon-caption {height: 12px;width: 12px;margin-left: 4px;margin-right: 4px;}.momentum-body .icon-thumbnail {height: 48px;margin-left: $iconThumbnailMarginX;margin-right: $iconThumbnailMarginX;width: 48px;}.badge {border-radius: 3px;display: inline-block;font-size: 14px;height: 20px;line-height: 20px;margin-left: 8px;margin-right: 8px;min-width: 20px;padding-left: 4px;padding-right: 4px;text-align: center;}.badge:first-child {margin-left: 0;}.badge:last-child {margin-right: 0;}.badge {background-color: #e3e4e6;color: #969799;}.theme-inverse .badge {background-color: #555659;color: #d7d7d9;}.theme-inverse .badge.badge-default {background-color: #e3e4e6;color: #969799;}.badge.badge-primary {background-color: #0c92f3;color: #fff;}.badge.badge-secondary {background-color: #969799;color: #fff;}.badge.badge-positive {background-color: #39bf71;color: #fff;}.badge.badge-negative {background-color: #d94141;color: #fff;}.badge.badge-inverse {background-color: #555659;color: #d7d7d9;}.badge.badge-white {background-color: #fff;color: #555659;}.badge.badge-gray {background-color: #969799;color: #fff;}.badge.badge-black {background-color: #000;color: #fff;}.badge.badge-small {font-size: 12px;height: 18px;line-height: 18px;min-width: 18px;}.badge.badge-caption {font-size: 12px;height: 16px;line-height: 16px;min-width: 16px;}.button,a.button {background-color: #fff;background-image: -webkit-linear-gradient(rgba(249,249,249,0) 0%, #f9f9f9 100%);background-image: -moz-linear-gradient(rgba(249,249,249,0) 0%, #f9f9f9 100%);background-image: -o-linear-gradient(rgba(249,249,249,0) 0%, #f9f9f9 100%);background-image: -ms-linear-gradient(rgba(249,249,249,0) 0%, #f9f9f9 100%);background-image: linear-gradient(rgba(249,249,249,0) 0%, #f9f9f9 100%);border: 1px solid rgba(215,215,217,0.7);color: #555659;padding: 7px 15px;}.button:hover,a.button:hover,.button.hover,a.button.hover {background-color: #fff;border-color: #b1b1b3;color: #555659;}.button:focus,a.button:focus,.button.focus,a.button.focus {opacity: 0.8;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";filter: alpha(opacity=80);}.button:active,a.button:active,.button.active,a.button.active {background-color: #e3e4e6;border-color: #b1b1b3;color: #222326;}.button.selected,a.button.selected {background-color: #e3e4e6;color: #222326;}.button[disabled],a.button[disabled],.button.disabled,a.button.disabled {cursor: not-allowed;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.button[disabled]:hover,a.button[disabled]:hover,.button.disabled:hover,a.button.disabled:hover,.button[disabled]:active,a.button[disabled]:active,.button.disabled:active,a.button.disabled:active {background-color: #fff;background-image: $buttonBackgroundGradient;border-color: rgba(215,215,217,0.7);color: #555659;}.button.button-square,a.button.button-square {padding: 7px 11px;}.button.button-lg,a.button.button-lg {padding: 5px 15px;}.button.button-lg.button-square,a.button.button-lg.button-square {padding: 5px 14px;}.button.button-sm,a.button.button-sm {padding: 3px 15px;}.button.button-sm.button-square,a.button.button-sm.button-square {padding: 3px 8px;}.button-group .button:hover,.button-group a.button:hover {border-right-width: 1px;}.button-group .button:hover + .button,.button-group a.button:hover + .button {margin-left: 0;border-left-width: 0;}.button {border-radius: 3px;cursor: pointer;display: inline-block;font-size: 14px;line-height: 24px;margin-right: 8px;text-align: center;-webkit-transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;-moz-transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;-o-transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;-ms-transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;}.button,.momentum-body .button {text-decoration: none;}.button:last-child {margin-right: 0;}.button .icon {margin-left: 12px;margin-right: 12px;opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);-webkit-transition: opacity 0.15s ease-in-out;-moz-transition: opacity 0.15s ease-in-out;-o-transition: opacity 0.15s ease-in-out;-ms-transition: opacity 0.15s ease-in-out;transition: opacity 0.15s ease-in-out;}.button .icon:first-child {margin-left: 0;}.button .icon:last-child {margin-right: 0;}.theme-inverse .button {background-color: #555659;background-image: none;border-color: #969799;border-width: 0;color: #fff;padding: 8px 16px;}.theme-inverse .button .icon {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.theme-inverse .button:visited {color: #fff;}.theme-inverse .button:hover,.theme-inverse .button.hover {background-color: #707173;border-color: #969799;color: #fff;}.theme-inverse .button:hover .icon,.theme-inverse .button.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.theme-inverse .button:active,.theme-inverse .button.active {background-color: #969799;border-color: #969799;color: #fff;}.theme-inverse .button.selected {background-color: #969799;border-color: #969799;color: #fff;}.theme-inverse .button[disabled]:hover,.theme-inverse .button.disabled:hover,.theme-inverse .button[disabled]:active,.theme-inverse .button.disabled:active {background-color: #555659;background-image: none;color: #fff;}.theme-inverse .button[disabled]:hover .icon,.theme-inverse .button.disabled:hover .icon,.theme-inverse .button[disabled]:active .icon,.theme-inverse .button.disabled:active .icon {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.theme-inverse .button.button-square {padding: 8px 12px;}.theme-inverse .button.button-lg {padding: 6px 16px;}.theme-inverse .button.button-lg.button-square {padding: 6px 15px;}.theme-inverse .button.button-sm {padding: 4px 16px;}.theme-inverse .button.button-sm.button-square {padding: 4px 9px;}.button-group .theme-inverse .button:hover {border-right-width: 0;}.button-group .theme-inverse .button:hover + .button {margin-left: -1px;border-left-width: 1px;}.theme-inverse .button.button-link {border: none;background-color: transparent;background-image: none;color: #969799;padding: 0;text-decoration: underline;text-transform: none;}.theme-inverse .button.button-link:visited {color: #969799;}.theme-inverse .button.button-link:hover {color: #d7d7d9;}.theme-inverse .button.button-link:active {color: #0c92f3;}.theme-inverse .button.button-link.text-decoration-none {text-decoration: none;}.button.button-link {border: none;background-color: transparent;background-image: none;color: inherit;padding: 0;text-decoration: underline;text-transform: none;}.button.button-link:visited {color: inherit;}.button.button-link:hover {color: #0068b3;border: none;background-color: transparent;background-image: none;}.button.button-link:active {color: #003459;}.button.button-link.text-decoration-none {text-decoration: none;}.button.button-primary,.button.button-blue {background-color: #0c92f3;background-image: none;border-color: #fff;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-primary .icon,.button.button-blue .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-primary:visited,.button.button-blue:visited {color: #fff;}.button.button-primary:hover,.button.button-blue:hover,.button.button-primary.hover,.button.button-blue.hover {background-color: #007fd9;border-color: #fff;color: #fff;}.button.button-primary:hover .icon,.button.button-blue:hover .icon,.button.button-primary.hover .icon,.button.button-blue.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-primary:active,.button.button-blue:active,.button.button-primary.active,.button.button-blue.active {background-color: #0068b3;border-color: #fff;color: #fff;}.button.button-primary.selected,.button.button-blue.selected {background-color: #0068b3;border-color: #fff;color: #fff;}.button.button-primary[disabled]:hover,.button.button-blue[disabled]:hover,.button.button-primary.disabled:hover,.button.button-blue.disabled:hover,.button.button-primary[disabled]:active,.button.button-blue[disabled]:active,.button.button-primary.disabled:active,.button.button-blue.disabled:active {background-color: #0c92f3;background-image: none;color: #fff;}.button.button-primary[disabled]:hover .icon,.button.button-blue[disabled]:hover .icon,.button.button-primary.disabled:hover .icon,.button.button-blue.disabled:hover .icon,.button.button-primary[disabled]:active .icon,.button.button-blue[disabled]:active .icon,.button.button-primary.disabled:active .icon,.button.button-blue.disabled:active .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-primary.button-square,.button.button-blue.button-square {padding: 8px 12px;}.button.button-primary.button-lg,.button.button-blue.button-lg {padding: 6px 16px;}.button.button-primary.button-lg.button-square,.button.button-blue.button-lg.button-square {padding: 6px 15px;}.button.button-primary.button-sm,.button.button-blue.button-sm {padding: 4px 16px;}.button.button-primary.button-sm.button-square,.button.button-blue.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-primary:hover,.button-group .button.button-blue:hover {border-right-width: 0;}.button-group .button.button-primary:hover + .button,.button-group .button.button-blue:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-primary[disabled],.button.button-primary.disabled {background-color: #e3e4e6;background-image: none;border-color: #d7d7d9;border-width: 0;color: #555659;padding: 8px 16px;}.button.button-primary[disabled] .icon,.button.button-primary.disabled .icon {opacity: 0.9;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";filter: alpha(opacity=90);}.button.button-primary[disabled]:visited,.button.button-primary.disabled:visited {color: #555659;}.button.button-primary[disabled]:hover,.button.button-primary.disabled:hover,.button.button-primary[disabled].hover,.button.button-primary.disabled.hover {background-color: #d7d7d9;border-color: #d7d7d9;color: #555659;}.button.button-primary[disabled]:hover .icon,.button.button-primary.disabled:hover .icon,.button.button-primary[disabled].hover .icon,.button.button-primary.disabled.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-primary[disabled]:active,.button.button-primary.disabled:active,.button.button-primary[disabled].active,.button.button-primary.disabled.active {background-color: #b1b1b3;border-color: #d7d7d9;color: #555659;}.button.button-primary[disabled].selected,.button.button-primary.disabled.selected {background-color: #b1b1b3;border-color: #d7d7d9;color: #555659;}.button.button-primary[disabled][disabled]:hover,.button.button-primary.disabled[disabled]:hover,.button.button-primary[disabled].disabled:hover,.button.button-primary.disabled.disabled:hover,.button.button-primary[disabled][disabled]:active,.button.button-primary.disabled[disabled]:active,.button.button-primary[disabled].disabled:active,.button.button-primary.disabled.disabled:active {background-color: #e3e4e6;background-image: none;color: #555659;}.button.button-primary[disabled][disabled]:hover .icon,.button.button-primary.disabled[disabled]:hover .icon,.button.button-primary[disabled].disabled:hover .icon,.button.button-primary.disabled.disabled:hover .icon,.button.button-primary[disabled][disabled]:active .icon,.button.button-primary.disabled[disabled]:active .icon,.button.button-primary[disabled].disabled:active .icon,.button.button-primary.disabled.disabled:active .icon {opacity: 0.9;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";filter: alpha(opacity=90);}.button.button-primary[disabled].button-square,.button.button-primary.disabled.button-square {padding: 8px 12px;}.button.button-primary[disabled].button-lg,.button.button-primary.disabled.button-lg {padding: 6px 16px;}.button.button-primary[disabled].button-lg.button-square,.button.button-primary.disabled.button-lg.button-square {padding: 6px 15px;}.button.button-primary[disabled].button-sm,.button.button-primary.disabled.button-sm {padding: 4px 16px;}.button.button-primary[disabled].button-sm.button-square,.button.button-primary.disabled.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-primary[disabled]:hover,.button-group .button.button-primary.disabled:hover {border-right-width: 0;}.button-group .button.button-primary[disabled]:hover + .button,.button-group .button.button-primary.disabled:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-positive,.button.button-green {background-color: #39bf71;background-image: none;border-color: #fff;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-positive .icon,.button.button-green .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-positive:visited,.button.button-green:visited {color: #fff;}.button.button-positive:hover,.button.button-green:hover,.button.button-positive.hover,.button.button-green.hover {background-color: #19a654;border-color: #fff;color: #fff;}.button.button-positive:hover .icon,.button.button-green:hover .icon,.button.button-positive.hover .icon,.button.button-green.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-positive:active,.button.button-green:active,.button.button-positive.active,.button.button-green.active {background-color: #0e8c42;border-color: #fff;color: #fff;}.button.button-positive.selected,.button.button-green.selected {background-color: #0e8c42;border-color: #fff;color: #fff;}.button.button-positive[disabled]:hover,.button.button-green[disabled]:hover,.button.button-positive.disabled:hover,.button.button-green.disabled:hover,.button.button-positive[disabled]:active,.button.button-green[disabled]:active,.button.button-positive.disabled:active,.button.button-green.disabled:active {background-color: #39bf71;background-image: none;color: #fff;}.button.button-positive[disabled]:hover .icon,.button.button-green[disabled]:hover .icon,.button.button-positive.disabled:hover .icon,.button.button-green.disabled:hover .icon,.button.button-positive[disabled]:active .icon,.button.button-green[disabled]:active .icon,.button.button-positive.disabled:active .icon,.button.button-green.disabled:active .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-positive.button-square,.button.button-green.button-square {padding: 8px 12px;}.button.button-positive.button-lg,.button.button-green.button-lg {padding: 6px 16px;}.button.button-positive.button-lg.button-square,.button.button-green.button-lg.button-square {padding: 6px 15px;}.button.button-positive.button-sm,.button.button-green.button-sm {padding: 4px 16px;}.button.button-positive.button-sm.button-square,.button.button-green.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-positive:hover,.button-group .button.button-green:hover {border-right-width: 0;}.button-group .button.button-positive:hover + .button,.button-group .button.button-green:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-negative,.button.button-red {background-color: #d94141;background-image: none;border-color: #fff;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-negative .icon,.button.button-red .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-negative:visited,.button.button-red:visited {color: #fff;}.button.button-negative:hover,.button.button-red:hover,.button.button-negative.hover,.button.button-red.hover {background-color: #bf3939;border-color: #fff;color: #fff;}.button.button-negative:hover .icon,.button.button-red:hover .icon,.button.button-negative.hover .icon,.button.button-red.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-negative:active,.button.button-red:active,.button.button-negative.active,.button.button-red.active {background-color: #a62929;border-color: #fff;color: #fff;}.button.button-negative.selected,.button.button-red.selected {background-color: #a62929;border-color: #fff;color: #fff;}.button.button-negative[disabled]:hover,.button.button-red[disabled]:hover,.button.button-negative.disabled:hover,.button.button-red.disabled:hover,.button.button-negative[disabled]:active,.button.button-red[disabled]:active,.button.button-negative.disabled:active,.button.button-red.disabled:active {background-color: #d94141;background-image: none;color: #fff;}.button.button-negative[disabled]:hover .icon,.button.button-red[disabled]:hover .icon,.button.button-negative.disabled:hover .icon,.button.button-red.disabled:hover .icon,.button.button-negative[disabled]:active .icon,.button.button-red[disabled]:active .icon,.button.button-negative.disabled:active .icon,.button.button-red.disabled:active .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-negative.button-square,.button.button-red.button-square {padding: 8px 12px;}.button.button-negative.button-lg,.button.button-red.button-lg {padding: 6px 16px;}.button.button-negative.button-lg.button-square,.button.button-red.button-lg.button-square {padding: 6px 15px;}.button.button-negative.button-sm,.button.button-red.button-sm {padding: 4px 16px;}.button.button-negative.button-sm.button-square,.button.button-red.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-negative:hover,.button-group .button.button-red:hover {border-right-width: 0;}.button-group .button.button-negative:hover + .button,.button-group .button.button-red:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-inverse,.button.button-gray {background-color: #555659;background-image: none;border-color: #969799;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-inverse .icon,.button.button-gray .icon {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.button.button-inverse:visited,.button.button-gray:visited {color: #fff;}.button.button-inverse:hover,.button.button-gray:hover,.button.button-inverse.hover,.button.button-gray.hover {background-color: #707173;border-color: #969799;color: #fff;}.button.button-inverse:hover .icon,.button.button-gray:hover .icon,.button.button-inverse.hover .icon,.button.button-gray.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-inverse:active,.button.button-gray:active,.button.button-inverse.active,.button.button-gray.active {background-color: #969799;border-color: #969799;color: #fff;}.button.button-inverse.selected,.button.button-gray.selected {background-color: #969799;border-color: #969799;color: #fff;}.button.button-inverse[disabled]:hover,.button.button-gray[disabled]:hover,.button.button-inverse.disabled:hover,.button.button-gray.disabled:hover,.button.button-inverse[disabled]:active,.button.button-gray[disabled]:active,.button.button-inverse.disabled:active,.button.button-gray.disabled:active {background-color: #555659;background-image: none;color: #fff;}.button.button-inverse[disabled]:hover .icon,.button.button-gray[disabled]:hover .icon,.button.button-inverse.disabled:hover .icon,.button.button-gray.disabled:hover .icon,.button.button-inverse[disabled]:active .icon,.button.button-gray[disabled]:active .icon,.button.button-inverse.disabled:active .icon,.button.button-gray.disabled:active .icon {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.button.button-inverse.button-square,.button.button-gray.button-square {padding: 8px 12px;}.button.button-inverse.button-lg,.button.button-gray.button-lg {padding: 6px 16px;}.button.button-inverse.button-lg.button-square,.button.button-gray.button-lg.button-square {padding: 6px 15px;}.button.button-inverse.button-sm,.button.button-gray.button-sm {padding: 4px 16px;}.button.button-inverse.button-sm.button-square,.button.button-gray.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-inverse:hover,.button-group .button.button-gray:hover {border-right-width: 0;}.button-group .button.button-inverse:hover + .button,.button-group .button.button-gray:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-violet {background-color: #a452cc;background-image: none;border-color: #fff;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-violet .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-violet:visited {color: #fff;}.button.button-violet:hover,.button.button-violet.hover {background-color: #9c2bd4;border-color: #fff;color: #fff;}.button.button-violet:hover .icon,.button.button-violet.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-violet:active,.button.button-violet.active {background-color: #801bb2;border-color: #fff;color: #fff;}.button.button-violet.selected {background-color: #801bb2;border-color: #fff;color: #fff;}.button.button-violet[disabled]:hover,.button.button-violet.disabled:hover,.button.button-violet[disabled]:active,.button.button-violet.disabled:active {background-color: #a452cc;background-image: none;color: #fff;}.button.button-violet[disabled]:hover .icon,.button.button-violet.disabled:hover .icon,.button.button-violet[disabled]:active .icon,.button.button-violet.disabled:active .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-violet.button-square {padding: 8px 12px;}.button.button-violet.button-lg {padding: 6px 16px;}.button.button-violet.button-lg.button-square {padding: 6px 15px;}.button.button-violet.button-sm {padding: 4px 16px;}.button.button-violet.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-violet:hover {border-right-width: 0;}.button-group .button.button-violet:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-violet-light {background-color: #f5e0ff;background-image: none;border-color: #f5e0ff;border-width: 0;color: #620e8c;padding: 8px 16px;}.button.button-violet-light .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-violet-light:visited {color: #620e8c;}.button.button-violet-light:hover,.button.button-violet-light.hover {background-color: #ebc4ff;border-color: #f5e0ff;color: #620e8c;}.button.button-violet-light:hover .icon,.button.button-violet-light.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-violet-light:active,.button.button-violet-light.active {background-color: #dea2fc;border-color: #f5e0ff;color: #620e8c;}.button.button-violet-light.selected {background-color: #dea2fc;border-color: #f5e0ff;color: #620e8c;}.button.button-violet-light[disabled]:hover,.button.button-violet-light.disabled:hover,.button.button-violet-light[disabled]:active,.button.button-violet-light.disabled:active {background-color: #f5e0ff;background-image: none;color: #620e8c;}.button.button-violet-light[disabled]:hover .icon,.button.button-violet-light.disabled:hover .icon,.button.button-violet-light[disabled]:active .icon,.button.button-violet-light.disabled:active .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-violet-light.button-square {padding: 8px 12px;}.button.button-violet-light.button-lg {padding: 6px 16px;}.button.button-violet-light.button-lg.button-square {padding: 6px 15px;}.button.button-violet-light.button-sm {padding: 4px 16px;}.button.button-violet-light.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-violet-light:hover {border-right-width: 0;}.button-group .button.button-violet-light:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-blue-light {background-color: #e1f3ff;background-image: none;border-color: #e1f3ff;border-width: 0;color: #555659;padding: 8px 16px;}.button.button-blue-light .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-blue-light:visited {color: #555659;}.button.button-blue-light:hover,.button.button-blue-light.hover {background-color: #bfe5ff;border-color: #e1f3ff;color: #555659;}.button.button-blue-light:hover .icon,.button.button-blue-light.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-blue-light:active,.button.button-blue-light.active {background-color: #a6daff;border-color: #e1f3ff;color: #555659;}.button.button-blue-light.selected {background-color: #a6daff;border-color: #e1f3ff;color: #555659;}.button.button-blue-light[disabled]:hover,.button.button-blue-light.disabled:hover,.button.button-blue-light[disabled]:active,.button.button-blue-light.disabled:active {background-color: #e1f3ff;background-image: none;color: #555659;}.button.button-blue-light[disabled]:hover .icon,.button.button-blue-light.disabled:hover .icon,.button.button-blue-light[disabled]:active .icon,.button.button-blue-light.disabled:active .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-blue-light.button-square {padding: 8px 12px;}.button.button-blue-light.button-lg {padding: 6px 16px;}.button.button-blue-light.button-lg.button-square {padding: 6px 15px;}.button.button-blue-light.button-sm {padding: 4px 16px;}.button.button-blue-light.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-blue-light:hover {border-right-width: 0;}.button-group .button.button-blue-light:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-turquoise {background-color: #1cadba;background-image: none;border-color: #1cadba;border-width: 0;color: #555659;padding: 8px 16px;}.button.button-turquoise .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-turquoise:visited {color: #555659;}.button.button-turquoise:hover,.button.button-turquoise.hover {background-color: #0097a6;border-color: #1cadba;color: #555659;}.button.button-turquoise:hover .icon,.button.button-turquoise.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-turquoise:active,.button.button-turquoise.active {background-color: #007580;border-color: #1cadba;color: #555659;}.button.button-turquoise.selected {background-color: #007580;border-color: #1cadba;color: #555659;}.button.button-turquoise[disabled]:hover,.button.button-turquoise.disabled:hover,.button.button-turquoise[disabled]:active,.button.button-turquoise.disabled:active {background-color: #1cadba;background-image: none;color: #555659;}.button.button-turquoise[disabled]:hover .icon,.button.button-turquoise.disabled:hover .icon,.button.button-turquoise[disabled]:active .icon,.button.button-turquoise.disabled:active .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-turquoise.button-square {padding: 8px 12px;}.button.button-turquoise.button-lg {padding: 6px 16px;}.button.button-turquoise.button-lg.button-square {padding: 6px 15px;}.button.button-turquoise.button-sm {padding: 4px 16px;}.button.button-turquoise.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-turquoise:hover {border-right-width: 0;}.button-group .button.button-turquoise:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-yellow {background-color: #ffa60d;background-image: none;border-color: #ffa60d;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-yellow .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-yellow:visited {color: #fff;}.button.button-yellow:hover,.button.button-yellow.hover {background-color: #ff9000;border-color: #ffa60d;color: #fff;}.button.button-yellow:hover .icon,.button.button-yellow.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-yellow:active,.button.button-yellow.active {background-color: #e67600;border-color: #ffa60d;color: #fff;}.button.button-yellow.selected {background-color: #e67600;border-color: #ffa60d;color: #fff;}.button.button-yellow[disabled]:hover,.button.button-yellow.disabled:hover,.button.button-yellow[disabled]:active,.button.button-yellow.disabled:active {background-color: #ffa60d;background-image: none;color: #fff;}.button.button-yellow[disabled]:hover .icon,.button.button-yellow.disabled:hover .icon,.button.button-yellow[disabled]:active .icon,.button.button-yellow.disabled:active .icon {opacity: 0.95;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";filter: alpha(opacity=95);}.button.button-yellow.button-square {padding: 8px 12px;}.button.button-yellow.button-lg {padding: 6px 16px;}.button.button-yellow.button-lg.button-square {padding: 6px 15px;}.button.button-yellow.button-sm {padding: 4px 16px;}.button.button-yellow.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-yellow:hover {border-right-width: 0;}.button-group .button.button-yellow:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-black {background-color: #000;background-image: none;border-color: #000;border-width: 0;color: #fff;padding: 8px 16px;}.button.button-black .icon {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.button.button-black:visited {color: #fff;}.button.button-black:hover,.button.button-black.hover {background-color: #3b3d3f;border-color: #000;color: #fff;}.button.button-black:hover .icon,.button.button-black.hover .icon {opacity: 1;-ms-filter: none;filter: none;}.button.button-black:active,.button.button-black.active {background-color: #555659;border-color: #000;color: #fff;}.button.button-black.selected {background-color: #555659;border-color: #000;color: #fff;}.button.button-black[disabled]:hover,.button.button-black.disabled:hover,.button.button-black[disabled]:active,.button.button-black.disabled:active {background-color: #000;background-image: none;color: #fff;}.button.button-black[disabled]:hover .icon,.button.button-black.disabled:hover .icon,.button.button-black[disabled]:active .icon,.button.button-black.disabled:active .icon {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.button.button-black.button-square {padding: 8px 12px;}.button.button-black.button-lg {padding: 6px 16px;}.button.button-black.button-lg.button-square {padding: 6px 15px;}.button.button-black.button-sm {padding: 4px 16px;}.button.button-black.button-sm.button-square {padding: 4px 9px;}.button-group .button.button-black:hover {border-right-width: 0;}.button-group .button.button-black:hover + .button {margin-left: -1px;border-left-width: 1px;}.button.button-lg {border-radius: 3px;font-size: 18px;line-height: 36px;}.button.button-lg .icon,.momentum-body .button.button-lg .icon {height: 18px;width: 18px;}.button.button-sm {border-radius: 3px;font-size: 14px;line-height: 24px;}.button.button-sm .icon,.momentum-body .button.button-sm .icon {height: 14px;width: 14px;}.button-group {margin-right: 8px;}.button-group:last-child {margin-right: 0;}.button-group .button {border-radius: 0;margin-right: 0;}.button-group .button:first-child {border-bottom-left-radius: 3px;border-top-left-radius: 3px;}.button-group .button:last-child {border-bottom-right-radius: 3px;border-top-right-radius: 3px;}.button-group .button + .button {border-left-width: 1px;margin-left: -1px;}.button-circle {border-radius: 50%;background-color: #fff;border: 0;padding: 12px 0;color: #969799;height: 46px;width: 46px;line-height: 23px;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;}.button-circle >.icon {height: 23px;width: 23px;margin: auto;}.button-circle:hover {color: #fff;background-color: #0c92f3;}.button-circle,a.button-circle {display: inline-block;background: #fff;}.button-circle,.momentum-body .button-circle {text-decoration: none;}.button-circle.button-shadow {-webkit-box-shadow: 0px 1px 4px rgba(0,0,0,0.25);box-shadow: 0px 1px 4px rgba(0,0,0,0.25);}.button-circle.button-circle-sm {height: 28px;width: 28px;line-height: 14px;padding: 6px 7px 6px 5px;}.button-circle.button-circle-sm >.icon {height: 14px;width: 14px;}.button-circle.button-circle-lg {height: 56px;width: 56px;line-height: 28px;padding: 13px 0;}.button-circle.button-circle-lg >.icon {height: 28px;width: 28px;}.card {background-color: #fff;border: 1px solid #f0f1f2;padding: 16px;width: 100%;}.centered-content {align-items: center;display: flex;justify-content: center;}.ol-chain-list {padding: 8px 16px;border-radius: 3px;}.ol-chain-list .ol-chain-separator:not(:last-child) {border-bottom: 1px solid #d7d7d9;border-color: #d7d7d9;}.ol-chain-list .ol-chain-link {position: relative;padding: 8px 0;margin-left: 40px;}.ol-chain-list .ol-chain-link:before {position: absolute;top: 8px;bottom: -8px;border-color: #d7d7d9;border-style: dashed;border-width: 0 0 0 1px;content: "";left: -28px;}.ol-chain-list .ol-chain-link:last-child:before {display: none;}.ol-chain-list .ol-chain-link .ol-chain-counter {border: 1px solid #d7d7d9;border-radius: 50%;}.ol-chain-list .ol-chain-link .ol-chain-icon {align-items: center;display: flex;justify-content: center;padding-bottom: 4px;padding-top: 4px;}.ol-chain-list .ol-chain-link .ol-chain-counter,.ol-chain-list .ol-chain-link .ol-chain-icon {position: absolute;left: -40px;width: 24px;height: 24px;background: #fff;text-align: center;font-size: 14px;}.ol-chain-list .ol-chain-link .ol-chain-counter.optional,.ol-chain-list .ol-chain-link .ol-chain-icon.optional {border: 1px dotted #d7d7d9;}.ol-chain-list .ol-chain-link .ol-chain-content {width: 70%;}.ol-chain-list .ol-chain-link .ol-chain-content-100 {width: 100%;}.ol-chain-list .ol-chain-link .ol-chain-content-distributed {display: flex;justify-content: space-between;}.chip {border-radius: 12px;border-style: solid;border-width: 1px;display: inline-block;font-size: 14px;line-height: 14px;height: 24px;margin: 1px 4px 3px;max-width: 100%;overflow: hidden;padding: 4px 7px;-o-text-overflow: ellipsis;text-overflow: ellipsis;-webkit-transition: border-color 0.10s ease-in-out, background-color 0.10s ease-in-out;-moz-transition: border-color 0.10s ease-in-out, background-color 0.10s ease-in-out;-o-transition: border-color 0.10s ease-in-out, background-color 0.10s ease-in-out;-ms-transition: border-color 0.10s ease-in-out, background-color 0.10s ease-in-out;transition: border-color 0.10s ease-in-out, background-color 0.10s ease-in-out;vertical-align: middle;white-space: nowrap;}.chip,.momentum-body .chip {text-decoration: none;}.chip.chip-box {border-radius: 3px;}.chip:first-child {margin-left: 0;}.chip:last-child {margin-right: 0;}.chip + .chip {margin-left: 0;}.chip .icon {height: 1em;width: 1em;}.chip .icon,.chip .icon.momentum-body {margin-left: 0.5em;margin-right: 0.5em;}.chip > .close {color: inherit;}.chip > .close::after {color: inherit;content: "✕";display: inline-block;font-size: 11px;margin-left: 8px;opacity: 0.54;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=54)";filter: alpha(opacity=54);vertical-align: text-bottom;}.chip > .close:hover {color: inherit;}.chip > .close:hover::after {opacity: 0.75;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=75)";filter: alpha(opacity=75);}.chip > .close:active {color: inherit;}.chip > .close:active::after {opacity: 0.96;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=96)";filter: alpha(opacity=96);}.chip,.momentum-body  .chip {background-color: #e3e4e6;border-color: #e3e4e6;color: #555659;}a.chip:hover,button.chip:hover,.chip.hover {background-color: #d7d7d9;border-color: #d7d7d9;color: #555659;}a.chip:active,button.chip:active,.chip.active {background-color: #b1b1b3;border-color: #b1b1b3;color: #555659;}a.chip:focus,button.chip:focus,.chip.focus {background-color: #e3e4e6;border-color: #e3e4e6;color: #555659;}.chip[disabled],.chip.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip[disabled]:hover,.chip.disabled:hover,.chip[disabled]:active,.chip.disabled:active {background-color: #e3e4e6;border-color: #e3e4e6;color: #555659;}.chip.chip-outlined,.momentum-body  .chip.chip-outlined {background-color: #fff;border-color: #e3e4e6;color: #555659;}a.chip.chip-outlined:hover,button.chip.chip-outlined:hover,.chip.chip-outlined.hover {background-color: #f0f1f2;border-color: #d7d7d9;color: #555659;}a.chip.chip-outlined:active,button.chip.chip-outlined:active,.chip.chip-outlined.active {background-color: #e3e4e6;border-color: #b1b1b3;color: #555659;}a.chip.chip-outlined:focus,button.chip.chip-outlined:focus,.chip.chip-outlined.focus {background-color: #fff;border-color: #e3e4e6;color: #555659;}.chip.chip-outlined[disabled],.chip.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-outlined[disabled]:hover,.chip.chip-outlined.disabled:hover,.chip.chip-outlined[disabled]:active,.chip.chip-outlined.disabled:active {background-color: #fff;border-color: #e3e4e6;color: #555659;}.theme-inverse .chip,.momentum-body .theme-inverse .chip {background-color: #555659;border-color: #555659;color: #f0f1f2;}.theme-inverse a.chip:hover,.theme-inverse button.chip:hover,.theme-inverse .chip.hover {background-color: #707173;border-color: #707173;color: #f0f1f2;}.theme-inverse a.chip:active,.theme-inverse button.chip:active,.theme-inverse .chip.active {background-color: #969799;border-color: #969799;color: #f0f1f2;}.theme-inverse a.chip:focus,.theme-inverse button.chip:focus,.theme-inverse .chip.focus {background-color: #555659;border-color: #555659;color: #f0f1f2;}.theme-inverse .chip[disabled],.theme-inverse .chip.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.theme-inverse .chip[disabled]:hover,.theme-inverse .chip.disabled:hover,.theme-inverse .chip[disabled]:active,.theme-inverse .chip.disabled:active {background-color: #555659;border-color: #555659;color: #f0f1f2;}.theme-inverse .chip.chip-outlined,.momentum-body .theme-inverse .chip.chip-outlined {background-color: #3b3d3f;border-color: #969799;color: #d7d7d9;}.theme-inverse a.chip.chip-outlined:hover,.theme-inverse button.chip.chip-outlined:hover,.theme-inverse .chip.chip-outlined.hover {background-color: #555659;border-color: #969799;color: #f0f1f2;}.theme-inverse a.chip.chip-outlined:active,.theme-inverse button.chip.chip-outlined:active,.theme-inverse .chip.chip-outlined.active {background-color: #707173;border-color: #969799;color: #f0f1f2;}.theme-inverse a.chip.chip-outlined:focus,.theme-inverse button.chip.chip-outlined:focus,.theme-inverse .chip.chip-outlined.focus {background-color: #3b3d3f;border-color: #969799;color: #d7d7d9;}.theme-inverse .chip.chip-outlined[disabled],.theme-inverse .chip.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.theme-inverse .chip.chip-outlined[disabled]:hover,.theme-inverse .chip.chip-outlined.disabled:hover,.theme-inverse .chip.chip-outlined[disabled]:active,.theme-inverse .chip.chip-outlined.disabled:active {background-color: #3b3d3f;border-color: #969799;color: #d7d7d9;}.chip.chip-inverse,.momentum-body  .chip.chip-inverse {background-color: #555659;border-color: #555659;color: #f0f1f2;}a.chip.chip-inverse:hover,button.chip.chip-inverse:hover,.chip.chip-inverse.hover {background-color: #707173;border-color: #707173;color: #f0f1f2;}a.chip.chip-inverse:active,button.chip.chip-inverse:active,.chip.chip-inverse.active {background-color: #969799;border-color: #969799;color: #f0f1f2;}a.chip.chip-inverse:focus,button.chip.chip-inverse:focus,.chip.chip-inverse.focus {background-color: #555659;border-color: #555659;color: #f0f1f2;}.chip.chip-inverse[disabled],.chip.chip-inverse.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-inverse[disabled]:hover,.chip.chip-inverse.disabled:hover,.chip.chip-inverse[disabled]:active,.chip.chip-inverse.disabled:active {background-color: #555659;border-color: #555659;color: #f0f1f2;}.chip.chip-inverse.chip-outlined,.momentum-body  .chip.chip-inverse.chip-outlined {background-color: #3b3d3f;border-color: #969799;color: #d7d7d9;}a.chip.chip-inverse.chip-outlined:hover,button.chip.chip-inverse.chip-outlined:hover,.chip.chip-inverse.chip-outlined.hover {background-color: #555659;border-color: #969799;color: #f0f1f2;}a.chip.chip-inverse.chip-outlined:active,button.chip.chip-inverse.chip-outlined:active,.chip.chip-inverse.chip-outlined.active {background-color: #707173;border-color: #969799;color: #f0f1f2;}a.chip.chip-inverse.chip-outlined:focus,button.chip.chip-inverse.chip-outlined:focus,.chip.chip-inverse.chip-outlined.focus {background-color: #3b3d3f;border-color: #969799;color: #d7d7d9;}.chip.chip-inverse.chip-outlined[disabled],.chip.chip-inverse.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-inverse.chip-outlined[disabled]:hover,.chip.chip-inverse.chip-outlined.disabled:hover,.chip.chip-inverse.chip-outlined[disabled]:active,.chip.chip-inverse.chip-outlined.disabled:active {background-color: #3b3d3f;border-color: #969799;color: #d7d7d9;}.chip.chip-blue,.momentum-body  .chip.chip-blue {background-color: #e1f3ff;border-color: #e1f3ff;color: #555659;}a.chip.chip-blue:hover,button.chip.chip-blue:hover,.chip.chip-blue.hover {background-color: #bfe5ff;border-color: #bfe5ff;color: #555659;}a.chip.chip-blue:active,button.chip.chip-blue:active,.chip.chip-blue.active {background-color: #a6daff;border-color: #a6daff;color: #555659;}a.chip.chip-blue:focus,button.chip.chip-blue:focus,.chip.chip-blue.focus {background-color: #e1f3ff;border-color: #e1f3ff;color: #555659;}.chip.chip-blue[disabled],.chip.chip-blue.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-blue[disabled]:hover,.chip.chip-blue.disabled:hover,.chip.chip-blue[disabled]:active,.chip.chip-blue.disabled:active {background-color: #e1f3ff;border-color: #e1f3ff;color: #555659;}.chip.chip-blue.chip-outlined,.momentum-body  .chip.chip-blue.chip-outlined {background-color: #e1f3ff;border-color: #0c92f3;color: #555659;}a.chip.chip-blue.chip-outlined:hover,button.chip.chip-blue.chip-outlined:hover,.chip.chip-blue.chip-outlined.hover {background-color: #bfe5ff;border-color: #0c92f3;color: #555659;}a.chip.chip-blue.chip-outlined:active,button.chip.chip-blue.chip-outlined:active,.chip.chip-blue.chip-outlined.active {background-color: #a6daff;border-color: #0c92f3;color: #555659;}a.chip.chip-blue.chip-outlined:focus,button.chip.chip-blue.chip-outlined:focus,.chip.chip-blue.chip-outlined.focus {background-color: #e1f3ff;border-color: #0c92f3;color: #555659;}.chip.chip-blue.chip-outlined[disabled],.chip.chip-blue.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-blue.chip-outlined[disabled]:hover,.chip.chip-blue.chip-outlined.disabled:hover,.chip.chip-blue.chip-outlined[disabled]:active,.chip.chip-blue.chip-outlined.disabled:active {background-color: #e1f3ff;border-color: #0c92f3;color: #555659;}.chip.chip-blue-dark,.momentum-body  .chip.chip-blue-dark {background-color: #007fd9;border-color: #007fd9;color: #f3faff;}a.chip.chip-blue-dark:hover,button.chip.chip-blue-dark:hover,.chip.chip-blue-dark.hover {background-color: #0068b3;border-color: #0068b3;color: #f3faff;}a.chip.chip-blue-dark:active,button.chip.chip-blue-dark:active,.chip.chip-blue-dark.active {background-color: #004a7f;border-color: #004a7f;color: #f3faff;}a.chip.chip-blue-dark:focus,button.chip.chip-blue-dark:focus,.chip.chip-blue-dark.focus {background-color: #007fd9;border-color: #007fd9;color: #f3faff;}.chip.chip-blue-dark[disabled],.chip.chip-blue-dark.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-blue-dark[disabled]:hover,.chip.chip-blue-dark.disabled:hover,.chip.chip-blue-dark[disabled]:active,.chip.chip-blue-dark.disabled:active {background-color: #007fd9;border-color: #007fd9;color: #f3faff;}.chip.chip-blue-dark.chip-outlined,.momentum-body  .chip.chip-blue-dark.chip-outlined {background-color: #007fd9;border-color: #4cb5ff;color: #f3faff;}a.chip.chip-blue-dark.chip-outlined:hover,button.chip.chip-blue-dark.chip-outlined:hover,.chip.chip-blue-dark.chip-outlined.hover {background-color: #0068b3;border-color: #4cb5ff;color: #f3faff;}a.chip.chip-blue-dark.chip-outlined:active,button.chip.chip-blue-dark.chip-outlined:active,.chip.chip-blue-dark.chip-outlined.active {background-color: #004a7f;border-color: #4cb5ff;color: #f3faff;}a.chip.chip-blue-dark.chip-outlined:focus,button.chip.chip-blue-dark.chip-outlined:focus,.chip.chip-blue-dark.chip-outlined.focus {background-color: #007fd9;border-color: #4cb5ff;color: #f3faff;}.chip.chip-blue-dark.chip-outlined[disabled],.chip.chip-blue-dark.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-blue-dark.chip-outlined[disabled]:hover,.chip.chip-blue-dark.chip-outlined.disabled:hover,.chip.chip-blue-dark.chip-outlined[disabled]:active,.chip.chip-blue-dark.chip-outlined.disabled:active {background-color: #007fd9;border-color: #4cb5ff;color: #f3faff;}.chip.chip-red,.momentum-body  .chip.chip-red {background-color: #ffe6e6;border-color: #ffe6e6;color: #555659;}a.chip.chip-red:hover,button.chip.chip-red:hover,.chip.chip-red.hover {background-color: #ffbfbf;border-color: #ffbfbf;color: #555659;}a.chip.chip-red:active,button.chip.chip-red:active,.chip.chip-red.active {background-color: #f99;border-color: #f99;color: #555659;}a.chip.chip-red:focus,button.chip.chip-red:focus,.chip.chip-red.focus {background-color: #ffe6e6;border-color: #ffe6e6;color: #555659;}.chip.chip-red[disabled],.chip.chip-red.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-red[disabled]:hover,.chip.chip-red.disabled:hover,.chip.chip-red[disabled]:active,.chip.chip-red.disabled:active {background-color: #ffe6e6;border-color: #ffe6e6;color: #555659;}.chip.chip-red.chip-outlined,.momentum-body  .chip.chip-red.chip-outlined {background-color: #ffe6e6;border-color: #d94141;color: #555659;}a.chip.chip-red.chip-outlined:hover,button.chip.chip-red.chip-outlined:hover,.chip.chip-red.chip-outlined.hover {background-color: #ffbfbf;border-color: #d94141;color: #555659;}a.chip.chip-red.chip-outlined:active,button.chip.chip-red.chip-outlined:active,.chip.chip-red.chip-outlined.active {background-color: #f99;border-color: #d94141;color: #555659;}a.chip.chip-red.chip-outlined:focus,button.chip.chip-red.chip-outlined:focus,.chip.chip-red.chip-outlined.focus {background-color: #ffe6e6;border-color: #d94141;color: #555659;}.chip.chip-red.chip-outlined[disabled],.chip.chip-red.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-red.chip-outlined[disabled]:hover,.chip.chip-red.chip-outlined.disabled:hover,.chip.chip-red.chip-outlined[disabled]:active,.chip.chip-red.chip-outlined.disabled:active {background-color: #ffe6e6;border-color: #d94141;color: #555659;}.chip.chip-red-dark,.momentum-body  .chip.chip-red-dark {background-color: #bf3939;border-color: #bf3939;color: #fff7f7;}a.chip.chip-red-dark:hover,button.chip.chip-red-dark:hover,.chip.chip-red-dark.hover {background-color: #a62929;border-color: #a62929;color: #fff7f7;}a.chip.chip-red-dark:active,button.chip.chip-red-dark:active,.chip.chip-red-dark.active {background-color: #801a1a;border-color: #801a1a;color: #fff7f7;}a.chip.chip-red-dark:focus,button.chip.chip-red-dark:focus,.chip.chip-red-dark.focus {background-color: #bf3939;border-color: #bf3939;color: #fff7f7;}.chip.chip-red-dark[disabled],.chip.chip-red-dark.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-red-dark[disabled]:hover,.chip.chip-red-dark.disabled:hover,.chip.chip-red-dark[disabled]:active,.chip.chip-red-dark.disabled:active {background-color: #bf3939;border-color: #bf3939;color: #fff7f7;}.chip.chip-red-dark.chip-outlined,.momentum-body  .chip.chip-red-dark.chip-outlined {background-color: #bf3939;border-color: #f26161;color: #fff7f7;}a.chip.chip-red-dark.chip-outlined:hover,button.chip.chip-red-dark.chip-outlined:hover,.chip.chip-red-dark.chip-outlined.hover {background-color: #a62929;border-color: #f26161;color: #fff7f7;}a.chip.chip-red-dark.chip-outlined:active,button.chip.chip-red-dark.chip-outlined:active,.chip.chip-red-dark.chip-outlined.active {background-color: #801a1a;border-color: #f26161;color: #fff7f7;}a.chip.chip-red-dark.chip-outlined:focus,button.chip.chip-red-dark.chip-outlined:focus,.chip.chip-red-dark.chip-outlined.focus {background-color: #bf3939;border-color: #f26161;color: #fff7f7;}.chip.chip-red-dark.chip-outlined[disabled],.chip.chip-red-dark.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-red-dark.chip-outlined[disabled]:hover,.chip.chip-red-dark.chip-outlined.disabled:hover,.chip.chip-red-dark.chip-outlined[disabled]:active,.chip.chip-red-dark.chip-outlined.disabled:active {background-color: #bf3939;border-color: #f26161;color: #fff7f7;}.chip.chip-green,.momentum-body  .chip.chip-green {background-color: #d4f5c4;border-color: #d4f5c4;color: #555659;}a.chip.chip-green:hover,button.chip.chip-green:hover,.chip.chip-green.hover {background-color: #b4f0a8;border-color: #b4f0a8;color: #555659;}a.chip.chip-green:active,button.chip.chip-green:active,.chip.chip-green.active {background-color: #8ae58a;border-color: #8ae58a;color: #555659;}a.chip.chip-green:focus,button.chip.chip-green:focus,.chip.chip-green.focus {background-color: #d4f5c4;border-color: #d4f5c4;color: #555659;}.chip.chip-green[disabled],.chip.chip-green.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-green[disabled]:hover,.chip.chip-green.disabled:hover,.chip.chip-green[disabled]:active,.chip.chip-green.disabled:active {background-color: #d4f5c4;border-color: #d4f5c4;color: #555659;}.chip.chip-green.chip-outlined,.momentum-body  .chip.chip-green.chip-outlined {background-color: #d4f5c4;border-color: #39bf71;color: #555659;}a.chip.chip-green.chip-outlined:hover,button.chip.chip-green.chip-outlined:hover,.chip.chip-green.chip-outlined.hover {background-color: #b4f0a8;border-color: #39bf71;color: #555659;}a.chip.chip-green.chip-outlined:active,button.chip.chip-green.chip-outlined:active,.chip.chip-green.chip-outlined.active {background-color: #8ae58a;border-color: #39bf71;color: #555659;}a.chip.chip-green.chip-outlined:focus,button.chip.chip-green.chip-outlined:focus,.chip.chip-green.chip-outlined.focus {background-color: #d4f5c4;border-color: #39bf71;color: #555659;}.chip.chip-green.chip-outlined[disabled],.chip.chip-green.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-green.chip-outlined[disabled]:hover,.chip.chip-green.chip-outlined.disabled:hover,.chip.chip-green.chip-outlined[disabled]:active,.chip.chip-green.chip-outlined.disabled:active {background-color: #d4f5c4;border-color: #39bf71;color: #555659;}.chip.chip-green-dark,.momentum-body  .chip.chip-green-dark {background-color: #19a654;border-color: #19a654;color: #e1fae5;}a.chip.chip-green-dark:hover,button.chip.chip-green-dark:hover,.chip.chip-green-dark.hover {background-color: #0e8c42;border-color: #0e8c42;color: #e1fae5;}a.chip.chip-green-dark:active,button.chip.chip-green-dark:active,.chip.chip-green-dark.active {background-color: #007343;border-color: #007343;color: #e1fae5;}a.chip.chip-green-dark:focus,button.chip.chip-green-dark:focus,.chip.chip-green-dark.focus {background-color: #19a654;border-color: #19a654;color: #e1fae5;}.chip.chip-green-dark[disabled],.chip.chip-green-dark.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-green-dark[disabled]:hover,.chip.chip-green-dark.disabled:hover,.chip.chip-green-dark[disabled]:active,.chip.chip-green-dark.disabled:active {background-color: #19a654;border-color: #19a654;color: #e1fae5;}.chip.chip-green-dark.chip-outlined,.momentum-body  .chip.chip-green-dark.chip-outlined {background-color: #19a654;border-color: #61d086;color: #e1fae5;}a.chip.chip-green-dark.chip-outlined:hover,button.chip.chip-green-dark.chip-outlined:hover,.chip.chip-green-dark.chip-outlined.hover {background-color: #0e8c42;border-color: #61d086;color: #e1fae5;}a.chip.chip-green-dark.chip-outlined:active,button.chip.chip-green-dark.chip-outlined:active,.chip.chip-green-dark.chip-outlined.active {background-color: #007343;border-color: #61d086;color: #e1fae5;}a.chip.chip-green-dark.chip-outlined:focus,button.chip.chip-green-dark.chip-outlined:focus,.chip.chip-green-dark.chip-outlined.focus {background-color: #19a654;border-color: #61d086;color: #e1fae5;}.chip.chip-green-dark.chip-outlined[disabled],.chip.chip-green-dark.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-green-dark.chip-outlined[disabled]:hover,.chip.chip-green-dark.chip-outlined.disabled:hover,.chip.chip-green-dark.chip-outlined[disabled]:active,.chip.chip-green-dark.chip-outlined.disabled:active {background-color: #19a654;border-color: #61d086;color: #e1fae5;}.chip.chip-yellow,.momentum-body  .chip.chip-yellow {background-color: #fec;border-color: #fec;color: #555659;}a.chip.chip-yellow:hover,button.chip.chip-yellow:hover,.chip.chip-yellow.hover {background-color: #ffe5b2;border-color: #ffe5b2;color: #555659;}a.chip.chip-yellow:active,button.chip.chip-yellow:active,.chip.chip-yellow.active {background-color: #ffdf88;border-color: #ffdf88;color: #555659;}a.chip.chip-yellow:focus,button.chip.chip-yellow:focus,.chip.chip-yellow.focus {background-color: #fec;border-color: #fec;color: #555659;}.chip.chip-yellow[disabled],.chip.chip-yellow.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-yellow[disabled]:hover,.chip.chip-yellow.disabled:hover,.chip.chip-yellow[disabled]:active,.chip.chip-yellow.disabled:active {background-color: #fec;border-color: #fec;color: #555659;}.chip.chip-yellow.chip-outlined,.momentum-body  .chip.chip-yellow.chip-outlined {background-color: #fec;border-color: #ffa60d;color: #555659;}a.chip.chip-yellow.chip-outlined:hover,button.chip.chip-yellow.chip-outlined:hover,.chip.chip-yellow.chip-outlined.hover {background-color: #ffe5b2;border-color: #ffa60d;color: #555659;}a.chip.chip-yellow.chip-outlined:active,button.chip.chip-yellow.chip-outlined:active,.chip.chip-yellow.chip-outlined.active {background-color: #ffdf88;border-color: #ffa60d;color: #555659;}a.chip.chip-yellow.chip-outlined:focus,button.chip.chip-yellow.chip-outlined:focus,.chip.chip-yellow.chip-outlined.focus {background-color: #fec;border-color: #ffa60d;color: #555659;}.chip.chip-yellow.chip-outlined[disabled],.chip.chip-yellow.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-yellow.chip-outlined[disabled]:hover,.chip.chip-yellow.chip-outlined.disabled:hover,.chip.chip-yellow.chip-outlined[disabled]:active,.chip.chip-yellow.chip-outlined.disabled:active {background-color: #fec;border-color: #ffa60d;color: #555659;}.chip.chip-yellow-dark,.momentum-body  .chip.chip-yellow-dark {background-color: #ff9000;border-color: #ff9000;color: #fff6e5;}a.chip.chip-yellow-dark:hover,button.chip.chip-yellow-dark:hover,.chip.chip-yellow-dark.hover {background-color: #e67600;border-color: #e67600;color: #fff6e5;}a.chip.chip-yellow-dark:active,button.chip.chip-yellow-dark:active,.chip.chip-yellow-dark.active {background-color: #cc5f00;border-color: #cc5f00;color: #fff6e5;}a.chip.chip-yellow-dark:focus,button.chip.chip-yellow-dark:focus,.chip.chip-yellow-dark.focus {background-color: #ff9000;border-color: #ff9000;color: #fff6e5;}.chip.chip-yellow-dark[disabled],.chip.chip-yellow-dark.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-yellow-dark[disabled]:hover,.chip.chip-yellow-dark.disabled:hover,.chip.chip-yellow-dark[disabled]:active,.chip.chip-yellow-dark.disabled:active {background-color: #ff9000;border-color: #ff9000;color: #fff6e5;}.chip.chip-yellow-dark.chip-outlined,.momentum-body  .chip.chip-yellow-dark.chip-outlined {background-color: #ff9000;border-color: #fb3;color: #fff6e5;}a.chip.chip-yellow-dark.chip-outlined:hover,button.chip.chip-yellow-dark.chip-outlined:hover,.chip.chip-yellow-dark.chip-outlined.hover {background-color: #e67600;border-color: #fb3;color: #fff6e5;}a.chip.chip-yellow-dark.chip-outlined:active,button.chip.chip-yellow-dark.chip-outlined:active,.chip.chip-yellow-dark.chip-outlined.active {background-color: #cc5f00;border-color: #fb3;color: #fff6e5;}a.chip.chip-yellow-dark.chip-outlined:focus,button.chip.chip-yellow-dark.chip-outlined:focus,.chip.chip-yellow-dark.chip-outlined.focus {background-color: #ff9000;border-color: #fb3;color: #fff6e5;}.chip.chip-yellow-dark.chip-outlined[disabled],.chip.chip-yellow-dark.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-yellow-dark.chip-outlined[disabled]:hover,.chip.chip-yellow-dark.chip-outlined.disabled:hover,.chip.chip-yellow-dark.chip-outlined[disabled]:active,.chip.chip-yellow-dark.chip-outlined.disabled:active {background-color: #ff9000;border-color: #fb3;color: #fff6e5;}.chip.chip-violet,.momentum-body  .chip.chip-violet {background-color: #f5e0ff;border-color: #f5e0ff;color: #555659;}a.chip.chip-violet:hover,button.chip.chip-violet:hover,.chip.chip-violet.hover {background-color: #ebc4ff;border-color: #ebc4ff;color: #555659;}a.chip.chip-violet:active,button.chip.chip-violet:active,.chip.chip-violet.active {background-color: #dea2fc;border-color: #dea2fc;color: #555659;}a.chip.chip-violet:focus,button.chip.chip-violet:focus,.chip.chip-violet.focus {background-color: #f5e0ff;border-color: #f5e0ff;color: #555659;}.chip.chip-violet[disabled],.chip.chip-violet.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-violet[disabled]:hover,.chip.chip-violet.disabled:hover,.chip.chip-violet[disabled]:active,.chip.chip-violet.disabled:active {background-color: #f5e0ff;border-color: #f5e0ff;color: #555659;}.chip.chip-violet.chip-outlined,.momentum-body  .chip.chip-violet.chip-outlined {background-color: #f5e0ff;border-color: #a452cc;color: #555659;}a.chip.chip-violet.chip-outlined:hover,button.chip.chip-violet.chip-outlined:hover,.chip.chip-violet.chip-outlined.hover {background-color: #ebc4ff;border-color: #a452cc;color: #555659;}a.chip.chip-violet.chip-outlined:active,button.chip.chip-violet.chip-outlined:active,.chip.chip-violet.chip-outlined.active {background-color: #dea2fc;border-color: #a452cc;color: #555659;}a.chip.chip-violet.chip-outlined:focus,button.chip.chip-violet.chip-outlined:focus,.chip.chip-violet.chip-outlined.focus {background-color: #f5e0ff;border-color: #a452cc;color: #555659;}.chip.chip-violet.chip-outlined[disabled],.chip.chip-violet.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-violet.chip-outlined[disabled]:hover,.chip.chip-violet.chip-outlined.disabled:hover,.chip.chip-violet.chip-outlined[disabled]:active,.chip.chip-violet.chip-outlined.disabled:active {background-color: #f5e0ff;border-color: #a452cc;color: #555659;}.chip.chip-turquoise,.momentum-body  .chip.chip-turquoise {background-color: #d9f7fa;border-color: #d9f7fa;color: #222326;}a.chip.chip-turquoise:hover,button.chip.chip-turquoise:hover,.chip.chip-turquoise.hover {background-color: #b8f0f5;border-color: #b8f0f5;color: #222326;}a.chip.chip-turquoise:active,button.chip.chip-turquoise:active,.chip.chip-turquoise.active {background-color: #91eaf2;border-color: #91eaf2;color: #222326;}a.chip.chip-turquoise:focus,button.chip.chip-turquoise:focus,.chip.chip-turquoise.focus {background-color: #b8f0f5;border-color: #b8f0f5;color: #222326;}.chip.chip-turquoise[disabled],.chip.chip-turquoise.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-turquoise[disabled]:hover,.chip.chip-turquoise.disabled:hover,.chip.chip-turquoise[disabled]:active,.chip.chip-turquoise.disabled:active {background-color: #d9f7fa;border-color: #d9f7fa;color: #222326;}.chip.chip-turquoise.chip-outlined,.momentum-body  .chip.chip-turquoise.chip-outlined {background-color: #d9f7fa;border-color: #b8f0f5;color: #222326;}a.chip.chip-turquoise.chip-outlined:hover,button.chip.chip-turquoise.chip-outlined:hover,.chip.chip-turquoise.chip-outlined.hover {background-color: #b8f0f5;border-color: #91eaf2;color: #222326;}a.chip.chip-turquoise.chip-outlined:active,button.chip.chip-turquoise.chip-outlined:active,.chip.chip-turquoise.chip-outlined.active {background-color: #91eaf2;border-color: #33c0cd;color: #222326;}a.chip.chip-turquoise.chip-outlined:focus,button.chip.chip-turquoise.chip-outlined:focus,.chip.chip-turquoise.chip-outlined.focus {background-color: #b8f0f5;border-color: #91eaf2;color: #222326;}.chip.chip-turquoise.chip-outlined[disabled],.chip.chip-turquoise.chip-outlined.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.chip.chip-turquoise.chip-outlined[disabled]:hover,.chip.chip-turquoise.chip-outlined.disabled:hover,.chip.chip-turquoise.chip-outlined[disabled]:active,.chip.chip-turquoise.chip-outlined.disabled:active {background-color: #d9f7fa;border-color: #b8f0f5;color: #222326;}.chip.chip-turquoise.closable.closable-wide > .close::after {color: #555659;}.chip.chip-turquoise.closable.closable-wide > .close:hover::after {background-color: #91eaf2;}.chip.chip-turquoise.closable.closable-wide > .close:active::after {background-color: #33c0cd;}.chip.chip-lg {border-radius: 16px;font-size: 16px;height: 32px;line-height: 16px;padding: 7px 11px;}.chip.chip-lg.chip-box {border-radius: 3px;}.chip.chip-lg > .close::after {font-size: 13px;margin-left: 8px;}.chip.chip-sm {border-radius: 8px;font-size: 12px;height: 16px;line-height: 12px;padding: 1px 7px;}.chip.chip-sm.chip-box {border-radius: 3px;}.chip.chip-sm > .close::after {font-size: 9px;margin-left: 4px;}.chip.closable {padding-right: 20px;position: relative;}.chip.closable.closable-wide {align-items: center;display: inline-flex;padding-right: 8px;}.chip.closable.closable-wide > .close {position: relative;right: auto;}.chip.closable.closable-wide > .close::after {align-items: center;border-radius: 3px;display: inline-flex;justify-content: center;margin-left: 8px;opacity: 1;-ms-filter: none;filter: none;height: 16px;width: 16px;}.chip.closable.closable-wide > .close:hover::after {opacity: 1;-ms-filter: none;filter: none;}.chip.closable.closable-wide > .close:focus::after {opacity: 1;-ms-filter: none;filter: none;}.chip.closable.closable-wide.chip-lg {padding-right: 8px;}.chip.closable.closable-wide.chip-lg > .close::after {margin-left: 8px;height: 20px;width: 20px;}.chip.closable.closable-wide.chip-sm {padding-right: 4px;}.chip.closable.closable-wide.chip-sm > .close::after {margin-left: 4px;height: 12px;width: 12px;}.chip.closable > .close {color: inherit;position: absolute;right: 8px;text-decoration: none;}.chip.closable > .close::after {color: inherit;content: "✕";display: inline-block;font-size: 11px;margin-left: 0;opacity: 0.54;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=54)";filter: alpha(opacity=54);vertical-align: text-bottom;}.chip.closable > .close:hover {color: inherit;}.chip.closable > .close:hover::after {opacity: 0.75;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=75)";filter: alpha(opacity=75);}.chip.closable > .close:active {color: inherit;}.chip.closable > .close:active::after {opacity: 0.96;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=96)";filter: alpha(opacity=96);}.chip.closable.chip-lg {padding-right: 22px;}.chip.closable.chip-lg > .close::after {font-size: 13px;}.chip.closable.chip-sm {padding-right: 19px;}.chip.closable.chip-sm > .close::after {font-size: 9px;}.display-on-hover .displayed-on-hover {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}.display-on-hover:hover .displayed-on-hover {opacity: 1;-ms-filter: none;filter: none;-webkit-transition: opacity 200ms ease-in-out;-moz-transition: opacity 200ms ease-in-out;-o-transition: opacity 200ms ease-in-out;-ms-transition: opacity 200ms ease-in-out;transition: opacity 200ms ease-in-out;}.display-on-hover:hover .displayed-on-hover.display-fast {-webkit-transition: opacity 100ms ease-in-out;-moz-transition: opacity 100ms ease-in-out;-o-transition: opacity 100ms ease-in-out;-ms-transition: opacity 100ms ease-in-out;transition: opacity 100ms ease-in-out;}.display-on-hover:hover .displayed-on-hover.display-slow {-webkit-transition: opacity 500ms ease-in-out;-moz-transition: opacity 500ms ease-in-out;-o-transition: opacity 500ms ease-in-out;-ms-transition: opacity 500ms ease-in-out;transition: opacity 500ms ease-in-out;}.text-divider {display: flex;align-items: center;text-align: center;}.text-divider::before,.text-divider::after {content: '';flex: 1;border-bottom: 1px solid #e3e4e6;}.text-divider:not(:empty)::before {margin-right: 8px;}.text-divider:not(:empty)::after {margin-left: 8px;}.marginless-divider {border-bottom: 1px solid #e3e4e6;}.form-group {margin-bottom: 24px;}.form-group label {display: block;font-size: 16px;margin-bottom: 4px;color: #222326;line-height: 24px;}.form-control,.form-control[disabled]:hover,.form-control.disabled:hover,.form-control.form-control-outlined,.theme-inverse .form-control.form-control-outlined,.form-control.form-control-outlined[disabled]:hover,.theme-inverse .form-control.form-control-outlined[disabled]:hover,.form-control.form-control-outlined.disabled:hover,.theme-inverse .form-control.form-control-outlined.disabled:hover {background-color: #fff;border-color: #e3e4e6;color: #222326;}.form-control::placeholder,.form-control[disabled]:hover::placeholder,.form-control.disabled:hover::placeholder,.form-control.form-control-outlined::placeholder,.theme-inverse .form-control.form-control-outlined::placeholder,.form-control.form-control-outlined[disabled]:hover::placeholder,.theme-inverse .form-control.form-control-outlined[disabled]:hover::placeholder,.form-control.form-control-outlined.disabled:hover::placeholder,.theme-inverse .form-control.form-control-outlined.disabled:hover::placeholder,.form-control .form-control-placeholder,.form-control[disabled]:hover .form-control-placeholder,.form-control.disabled:hover .form-control-placeholder,.form-control.form-control-outlined .form-control-placeholder,.theme-inverse .form-control.form-control-outlined .form-control-placeholder,.form-control.form-control-outlined[disabled]:hover .form-control-placeholder,.theme-inverse .form-control.form-control-outlined[disabled]:hover .form-control-placeholder,.form-control.form-control-outlined.disabled:hover .form-control-placeholder,.theme-inverse .form-control.form-control-outlined.disabled:hover .form-control-placeholder {color: #555659;}.form-control:hover,.form-control.hover,.form-control.form-control-transparent:hover,.form-control.form-control-transparent.hover,.form-control.form-control-outlined:hover,.theme-inverse .form-control.form-control-outlined:hover,.form-control.form-control-outlined.hover,.theme-inverse .form-control.form-control-outlined.hover {background-color: #fff;border-color: #b1b1b3;color: #222326;}.theme-inverse .form-control,.theme-inverse .form-control[disabled]:hover,.theme-inverse .form-control.disabled:hover {background-color: rgba(177,177,179,0.4);border-color: rgba(177,177,179,0);color: #d7d7d9;}.theme-inverse .form-control::placeholder,.theme-inverse .form-control[disabled]:hover::placeholder,.theme-inverse .form-control.disabled:hover::placeholder,.theme-inverse .form-control .form-control-placeholder,.theme-inverse .form-control[disabled]:hover .form-control-placeholder,.theme-inverse .form-control.disabled:hover .form-control-placeholder {color: #b1b1b3;}.theme-inverse .form-control:hover,.theme-inverse .form-control.hover {background-color: rgba(215,215,217,0.4);border-color: rgba(215,215,217,0);color: #d7d7d9;}.form-control.invalid,.form-control.invalid[disabled]:hover,.form-control.invalid.disabled:hover {background-color: #fff7f7;border-color: #d94141;color: #222326;}.form-control.invalid::placeholder,.form-control.invalid[disabled]:hover::placeholder,.form-control.invalid.disabled:hover::placeholder,.form-control.invalid .form-control-placeholder,.form-control.invalid[disabled]:hover .form-control-placeholder,.form-control.invalid.disabled:hover .form-control-placeholder {color: #555659;}.form-control.invalid:hover,.form-control.invalid.hover {background-color: #ffe6e6;border-color: #d94141;color: #222326;}.theme-inverse .form-control.invalid,.theme-inverse .form-control.invalid[disabled]:hover,.theme-inverse .form-control.invalid.disabled:hover {background-color: #ffe6e6;border-color: #d94141;color: #222326;}.theme-inverse .form-control.invalid::placeholder,.theme-inverse .form-control.invalid[disabled]:hover::placeholder,.theme-inverse .form-control.invalid.disabled:hover::placeholder,.theme-inverse .form-control.invalid .form-control-placeholder,.theme-inverse .form-control.invalid[disabled]:hover .form-control-placeholder,.theme-inverse .form-control.invalid.disabled:hover .form-control-placeholder {color: #f99;}.theme-inverse .form-control.invalid:hover,.theme-inverse .form-control.invalid.hover {background-color: #fff7f7;border-color: #d94141;color: #222326;}.form-control.form-control-transparent,.form-control.form-control-transparent[disabled]:hover,.form-control.form-control-transparent.disabled:hover {background-color: transparent;border-color: transparent;color: inherit;}.form-control:focus,.form-control.focus,.form-control.form-control-transparent:focus,.form-control.form-control-transparent.focus,.theme-inverse .form-control:focus,.theme-inverse .form-control.focus,.form-control.form-control-outlined:focus,.theme-inverse .form-control.form-control-outlined:focus,.form-control.form-control-outlined.focus,.theme-inverse .form-control.form-control-outlined.focus,.form-control.invalid:focus,.form-control.invalid.focus,.theme-inverse .form-control.invalid:focus,.theme-inverse .form-control.invalid.focus {background-color: #fff;border-color: #0c92f3;color: #222326;}.form-control:focus::placeholder,.form-control.focus::placeholder,.form-control.form-control-transparent:focus::placeholder,.form-control.form-control-transparent.focus::placeholder,.theme-inverse .form-control:focus::placeholder,.theme-inverse .form-control.focus::placeholder,.form-control.form-control-outlined:focus::placeholder,.theme-inverse .form-control.form-control-outlined:focus::placeholder,.form-control.form-control-outlined.focus::placeholder,.theme-inverse .form-control.form-control-outlined.focus::placeholder,.form-control.invalid:focus::placeholder,.form-control.invalid.focus::placeholder,.theme-inverse .form-control.invalid:focus::placeholder,.theme-inverse .form-control.invalid.focus::placeholder,.form-control:focus .form-control-placeholder,.form-control.focus .form-control-placeholder,.form-control.form-control-transparent:focus .form-control-placeholder,.form-control.form-control-transparent.focus .form-control-placeholder,.theme-inverse .form-control:focus .form-control-placeholder,.theme-inverse .form-control.focus .form-control-placeholder,.form-control.form-control-outlined:focus .form-control-placeholder,.theme-inverse .form-control.form-control-outlined:focus .form-control-placeholder,.form-control.form-control-outlined.focus .form-control-placeholder,.theme-inverse .form-control.form-control-outlined.focus .form-control-placeholder,.form-control.invalid:focus .form-control-placeholder,.form-control.invalid.focus .form-control-placeholder,.theme-inverse .form-control.invalid:focus .form-control-placeholder,.theme-inverse .form-control.invalid.focus .form-control-placeholder {color: #555659;}.form-control-label,label.form-control-label {display: block;line-height: 24px;font-size: 16px;margin-bottom: 4px;color: #222326;}.form-control-helper-text {display: block;margin-bottom: 4px;color: #222326;font-size: 14px;line-height: 21px;}.theme-inverse .form-group label,.theme-inverse .form-control-label,.theme-inverse label.form-control-label,.theme-inverse .form-control-helper-text {color: #d7d7d9;}.form-control {border-radius: 3px;border-style: solid;border-width: 1px;display: block;font-size: 16px;line-height: 24px;padding: 7px 15px;resize: vertical;-webkit-transition: border-color 0.15s ease-in-out;-moz-transition: border-color 0.15s ease-in-out;-o-transition: border-color 0.15s ease-in-out;-ms-transition: border-color 0.15s ease-in-out;transition: border-color 0.15s ease-in-out;width: 100%;}.form-control:focus,.form-control.focus {outline: 0;}.form-control[disabled],.form-control.disabled {cursor: default;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.form-control.multi-select-input {padding: 6px 15px;}input.form-control {height: 40px;}.form-control-inline {display: inline-block;width: auto;}.form-control-inherit {-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;color: inherit;font-size: inherit;font-weight: inherit;line-height: inherit;margin: -1px -8px;padding: 0 7px;}.form-control-inherit,input.form-control-inherit {height: auto;}.form-control-inherit.form-control-inline {margin-left: 0;margin-right: 0;}.form-control-lg {border-radius: 3px;font-size: 32px;line-height: 40px;padding: 3px 15px;}input.form-control-lg {height: 48px;}.form-control-sm {border-radius: 3px;font-size: 14px;line-height: 21px;padding: 4.5px 15px;}.form-control-sm.multi-select-input {padding: 3.5px 15px;}input.form-control-sm {height: 32px;}.form-check {display: block;}.form-check + .form-check {margin-top: 8px;}.form-check.disabled,.form-check [disabled] {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.form-check-label {display: inline-block;min-height: 24px;padding-left: 24px;position: relative;vertical-align: top;}.form-check-label .form-text {margin-top: 0;}.form-group label.form-check-label {display: inline-block;margin-bottom: 0;}.form-check-input,input[type=checkbox].form-check-input,input[type=radio].form-check-input {-moz-appearance: none;-webkit-appearance: none;-webkit-appearance: none;-moz-appearance: none;appearance: none;border-style: solid;border-width: 1px;display: inline-block;height: 16px;margin: 0;position: relative;vertical-align: -0.15em;width: 16px;}.form-check-input,input[type=checkbox].form-check-input,input[type=radio].form-check-input {background: rgba(177,177,179,0.4);border-color: rgba(177,177,179,0);}.form-check-input:hover,input[type=checkbox].form-check-input:hover,input[type=radio].form-check-input:hover,.form-check.hover .form-check-input,.form-check.hover input[type=checkbox].form-check-input,.form-check.hover input[type=radio].form-check-input {background: rgba(150,151,153,0.4);border-color: #b1b1b3;}.form-check-input:active,input[type=checkbox].form-check-input:active,input[type=radio].form-check-input:active,.form-check.active .form-check-input,.form-check.active input[type=checkbox].form-check-input,.form-check.active input[type=radio].form-check-input {background: rgba(112,113,115,0.4);border-color: #969799;}.form-check-input:checked,input[type=checkbox].form-check-input:checked,input[type=radio].form-check-input:checked {background: #0c92f3;border-width: 0;}.form-check-input:checked:hover,input[type=checkbox].form-check-input:checked:hover,input[type=radio].form-check-input:checked:hover,.form-check.hover .form-check-input:checked,.form-check.hover input[type=checkbox].form-check-input:checked,.form-check.hover input[type=radio].form-check-input:checked {background: #007fd9;}.form-check-input:checked:active,input[type=checkbox].form-check-input:checked:active,input[type=radio].form-check-input:checked:active,.form-check.active .form-check-input:checked,.form-check.active input[type=checkbox].form-check-input:checked,.form-check.active input[type=radio].form-check-input:checked {background: #0068b3;}input[type=checkbox].form-check-input.form-check-input:indeterminate,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate,input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate {background: #0c92f3;border-width: 0;}input[type=checkbox].form-check-input.form-check-input:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate:hover,.form-check.hover input[type=checkbox].form-check-input.form-check-input:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate {background: #007fd9;}input[type=checkbox].form-check-input.form-check-input:indeterminate:active,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate:active,input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate:active,.form-check.active input[type=checkbox].form-check-input.form-check-input:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate {background: #0068b3;}.form-check-input[disabled]:hover,input[type=checkbox].form-check-input[disabled]:hover,input[type=radio].form-check-input[disabled]:hover,.form-check-input:indeterminate:hover,input[type=checkbox].form-check-input:indeterminate:hover,input[type=radio].form-check-input:indeterminate:hover,.form-check.disabled .form-check-input:hover,.form-check.disabled input[type=checkbox].form-check-input:hover,.form-check.disabled input[type=radio].form-check-input:hover,.form-check-input[disabled]:active,input[type=checkbox].form-check-input[disabled]:active,input[type=radio].form-check-input[disabled]:active,.form-check-input:indeterminate:active,input[type=checkbox].form-check-input:indeterminate:active,input[type=radio].form-check-input:indeterminate:active,.form-check.disabled .form-check-input:active,.form-check.disabled input[type=checkbox].form-check-input:active,.form-check.disabled input[type=radio].form-check-input:active {background: rgba(177,177,179,0.4);border-color: rgba(177,177,179,0);cursor: default;}.form-check-input[disabled]:checked,input[type=checkbox].form-check-input[disabled]:checked,input[type=radio].form-check-input[disabled]:checked,.form-check-input:indeterminate:checked,input[type=checkbox].form-check-input:indeterminate:checked,input[type=radio].form-check-input:indeterminate:checked,.form-check.disabled .form-check-input:checked,.form-check.disabled input[type=checkbox].form-check-input:checked,.form-check.disabled input[type=radio].form-check-input:checked {background: #0c92f3;border-width: 0;}.form-check-label .form-check-input,.form-check-label input[type=checkbox].form-check-input,.form-check-label input[type=radio].form-check-input {left: 0;position: absolute;top: 3px;}.form-check-input:focus,input[type=checkbox].form-check-input:focus,input[type=radio].form-check-input:focus {outline: 0;}.theme-inverse .form-check-input,.theme-inverse input[type=checkbox].form-check-input,.theme-inverse input[type=radio].form-check-input {background: $formCheckOutlinedBackgroundInverse;border-color: $formCheckOutlinedBorderColorInverse;}.theme-inverse .form-check-input:hover,.theme-inverse input[type=checkbox].form-check-input:hover,.theme-inverse input[type=radio].form-check-input:hover,.theme-inverse .form-check.hover .form-check-input,.theme-inverse .form-check.hover input[type=checkbox].form-check-input,.theme-inverse .form-check.hover input[type=radio].form-check-input {background: $formCheckOutlinedHoverBackgroundInverse;border-color: $formCheckOutlinedHoverBorderColorInverse;}.theme-inverse .form-check-input:active,.theme-inverse input[type=checkbox].form-check-input:active,.theme-inverse input[type=radio].form-check-input:active,.theme-inverse .form-check.active .form-check-input,.theme-inverse .form-check.active input[type=checkbox].form-check-input,.theme-inverse .form-check.active input[type=radio].form-check-input {background: $formCheckOutlinedActiveBackgroundInverse;border-color: $formCheckOutlinedActiveBorderColorInverse;}.theme-inverse .form-check-input:checked,.theme-inverse input[type=checkbox].form-check-input:checked,.theme-inverse input[type=radio].form-check-input:checked {background: #0c92f3;border-width: 0;}.theme-inverse .form-check-input:checked:hover,.theme-inverse input[type=checkbox].form-check-input:checked:hover,.theme-inverse input[type=radio].form-check-input:checked:hover,.theme-inverse .form-check.hover .form-check-input:checked,.theme-inverse .form-check.hover input[type=checkbox].form-check-input:checked,.theme-inverse .form-check.hover input[type=radio].form-check-input:checked {background: #007fd9;}.theme-inverse .form-check-input:checked:active,.theme-inverse input[type=checkbox].form-check-input:checked:active,.theme-inverse input[type=radio].form-check-input:checked:active,.theme-inverse .form-check.active .form-check-input:checked,.theme-inverse .form-check.active input[type=checkbox].form-check-input:checked,.theme-inverse .form-check.active input[type=radio].form-check-input:checked {background: #0068b3;}.theme-inverse input[type=checkbox].form-check-input.form-check-input:indeterminate,.theme-inverse input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate,.theme-inverse input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate {background: #0c92f3;border-width: 0;}.theme-inverse input[type=checkbox].form-check-input.form-check-input:indeterminate:hover,.theme-inverse input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate:hover,.theme-inverse input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate:hover,.theme-inverse .form-check.hover input[type=checkbox].form-check-input.form-check-input:indeterminate,.theme-inverse .form-check.hover input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate,.theme-inverse .form-check.hover input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate {background: #007fd9;}.theme-inverse input[type=checkbox].form-check-input.form-check-input:indeterminate:active,.theme-inverse input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate:active,.theme-inverse input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate:active,.theme-inverse .form-check.active input[type=checkbox].form-check-input.form-check-input:indeterminate,.theme-inverse .form-check.active input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input:indeterminate,.theme-inverse .form-check.active input[type=checkbox].form-check-inputinput[type=radio].form-check-input:indeterminate {background: #0068b3;}.theme-inverse .form-check-input[disabled]:hover,.theme-inverse input[type=checkbox].form-check-input[disabled]:hover,.theme-inverse input[type=radio].form-check-input[disabled]:hover,.theme-inverse .form-check-input:indeterminate:hover,.theme-inverse input[type=checkbox].form-check-input:indeterminate:hover,.theme-inverse input[type=radio].form-check-input:indeterminate:hover,.theme-inverse .form-check.disabled .form-check-input:hover,.theme-inverse .form-check.disabled input[type=checkbox].form-check-input:hover,.theme-inverse .form-check.disabled input[type=radio].form-check-input:hover,.theme-inverse .form-check-input[disabled]:active,.theme-inverse input[type=checkbox].form-check-input[disabled]:active,.theme-inverse input[type=radio].form-check-input[disabled]:active,.theme-inverse .form-check-input:indeterminate:active,.theme-inverse input[type=checkbox].form-check-input:indeterminate:active,.theme-inverse input[type=radio].form-check-input:indeterminate:active,.theme-inverse .form-check.disabled .form-check-input:active,.theme-inverse .form-check.disabled input[type=checkbox].form-check-input:active,.theme-inverse .form-check.disabled input[type=radio].form-check-input:active {background: $formCheckOutlinedBackgroundInverse;border-color: $formCheckOutlinedBorderColorInverse;cursor: default;}.theme-inverse .form-check-input[disabled]:checked,.theme-inverse input[type=checkbox].form-check-input[disabled]:checked,.theme-inverse input[type=radio].form-check-input[disabled]:checked,.theme-inverse .form-check-input:indeterminate:checked,.theme-inverse input[type=checkbox].form-check-input:indeterminate:checked,.theme-inverse input[type=radio].form-check-input:indeterminate:checked,.theme-inverse .form-check.disabled .form-check-input:checked,.theme-inverse .form-check.disabled input[type=checkbox].form-check-input:checked,.theme-inverse .form-check.disabled input[type=radio].form-check-input:checked {background: #0c92f3;border-width: 0;}.form-check-input.form-check-input-outlined,input[type=checkbox].form-check-input.form-check-input-outlined,input[type=radio].form-check-input.form-check-input-outlined {background: #fff;border-color: #e3e4e6;}.form-check-input.form-check-input-outlined:hover,input[type=checkbox].form-check-input.form-check-input-outlined:hover,input[type=radio].form-check-input.form-check-input-outlined:hover,.form-check.hover .form-check-input.form-check-input-outlined,.form-check.hover input[type=checkbox].form-check-input.form-check-input-outlined,.form-check.hover input[type=radio].form-check-input.form-check-input-outlined {background: #fff;border-color: #b1b1b3;}.form-check-input.form-check-input-outlined:active,input[type=checkbox].form-check-input.form-check-input-outlined:active,input[type=radio].form-check-input.form-check-input-outlined:active,.form-check.active .form-check-input.form-check-input-outlined,.form-check.active input[type=checkbox].form-check-input.form-check-input-outlined,.form-check.active input[type=radio].form-check-input.form-check-input-outlined {background: #f0f1f2;border-color: #969799;}.form-check-input.form-check-input-outlined:checked,input[type=checkbox].form-check-input.form-check-input-outlined:checked,input[type=radio].form-check-input.form-check-input-outlined:checked {background: #0c92f3;border-width: 0;}.form-check-input.form-check-input-outlined:checked:hover,input[type=checkbox].form-check-input.form-check-input-outlined:checked:hover,input[type=radio].form-check-input.form-check-input-outlined:checked:hover,.form-check.hover .form-check-input.form-check-input-outlined:checked,.form-check.hover input[type=checkbox].form-check-input.form-check-input-outlined:checked,.form-check.hover input[type=radio].form-check-input.form-check-input-outlined:checked {background: #007fd9;}.form-check-input.form-check-input-outlined:checked:active,input[type=checkbox].form-check-input.form-check-input-outlined:checked:active,input[type=radio].form-check-input.form-check-input-outlined:checked:active,.form-check.active .form-check-input.form-check-input-outlined:checked,.form-check.active input[type=checkbox].form-check-input.form-check-input-outlined:checked,.form-check.active input[type=radio].form-check-input.form-check-input-outlined:checked {background: #0068b3;}input[type=checkbox].form-check-input.form-check-input.form-check-input-outlined:indeterminate,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-outlined:indeterminate,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-outlined:indeterminate {background: #0c92f3;border-width: 0;}input[type=checkbox].form-check-input.form-check-input.form-check-input-outlined:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-outlined:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-outlined:indeterminate:hover,.form-check.hover input[type=checkbox].form-check-input.form-check-input.form-check-input-outlined:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-outlined:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-outlined:indeterminate {background: #007fd9;}input[type=checkbox].form-check-input.form-check-input.form-check-input-outlined:indeterminate:active,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-outlined:indeterminate:active,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-outlined:indeterminate:active,.form-check.active input[type=checkbox].form-check-input.form-check-input.form-check-input-outlined:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-outlined:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-outlined:indeterminate {background: #0068b3;}.form-check-input.form-check-input-outlined[disabled]:hover,input[type=checkbox].form-check-input.form-check-input-outlined[disabled]:hover,input[type=radio].form-check-input.form-check-input-outlined[disabled]:hover,.form-check-input.form-check-input-outlined:indeterminate:hover,input[type=checkbox].form-check-input.form-check-input-outlined:indeterminate:hover,input[type=radio].form-check-input.form-check-input-outlined:indeterminate:hover,.form-check.disabled .form-check-input.form-check-input-outlined:hover,.form-check.disabled input[type=checkbox].form-check-input.form-check-input-outlined:hover,.form-check.disabled input[type=radio].form-check-input.form-check-input-outlined:hover,.form-check-input.form-check-input-outlined[disabled]:active,input[type=checkbox].form-check-input.form-check-input-outlined[disabled]:active,input[type=radio].form-check-input.form-check-input-outlined[disabled]:active,.form-check-input.form-check-input-outlined:indeterminate:active,input[type=checkbox].form-check-input.form-check-input-outlined:indeterminate:active,input[type=radio].form-check-input.form-check-input-outlined:indeterminate:active,.form-check.disabled .form-check-input.form-check-input-outlined:active,.form-check.disabled input[type=checkbox].form-check-input.form-check-input-outlined:active,.form-check.disabled input[type=radio].form-check-input.form-check-input-outlined:active {background: #fff;border-color: #e3e4e6;cursor: default;}.form-check-input.form-check-input-outlined[disabled]:checked,input[type=checkbox].form-check-input.form-check-input-outlined[disabled]:checked,input[type=radio].form-check-input.form-check-input-outlined[disabled]:checked,.form-check-input.form-check-input-outlined:indeterminate:checked,input[type=checkbox].form-check-input.form-check-input-outlined:indeterminate:checked,input[type=radio].form-check-input.form-check-input-outlined:indeterminate:checked,.form-check.disabled .form-check-input.form-check-input-outlined:checked,.form-check.disabled input[type=checkbox].form-check-input.form-check-input-outlined:checked,.form-check.disabled input[type=radio].form-check-input.form-check-input-outlined:checked {background: #0c92f3;border-width: 0;}.form-check-input.form-check-input-required,input[type=checkbox].form-check-input.form-check-input-required,input[type=radio].form-check-input.form-check-input-required {content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='9' height='8' viewBox='0 0 9 8'%3E%3Cpath d='M8.39561 3.4945L7.97802 2.21978L4.85714 3.27472V0H3.53846V3.27472L0.417582 2.21978L0 3.4945L3.0989 4.54945L1.18681 7.16483L2.28571 8L4.1978 5.2967L6.17583 8L7.25275 7.16483L5.2967 4.54945L8.39561 3.4945Z' fill='%23B1B1B3'/%3E%3C/svg%3E%0A");padding: 3px;}.form-check-input.form-check-input-required,input[type=checkbox].form-check-input.form-check-input-required,input[type=radio].form-check-input.form-check-input-required {background: ;border-color: ;}.form-check-input.form-check-input-required:hover,input[type=checkbox].form-check-input.form-check-input-required:hover,input[type=radio].form-check-input.form-check-input-required:hover,.form-check.hover .form-check-input.form-check-input-required,.form-check.hover input[type=checkbox].form-check-input.form-check-input-required,.form-check.hover input[type=radio].form-check-input.form-check-input-required {background: ;border-color: ;}.form-check-input.form-check-input-required:active,input[type=checkbox].form-check-input.form-check-input-required:active,input[type=radio].form-check-input.form-check-input-required:active,.form-check.active .form-check-input.form-check-input-required,.form-check.active input[type=checkbox].form-check-input.form-check-input-required,.form-check.active input[type=radio].form-check-input.form-check-input-required {background: ;border-color: ;}.form-check-input.form-check-input-required:checked,input[type=checkbox].form-check-input.form-check-input-required:checked,input[type=radio].form-check-input.form-check-input-required:checked {background: #f26161;border-width: 0;}.form-check-input.form-check-input-required:checked:hover,input[type=checkbox].form-check-input.form-check-input-required:checked:hover,input[type=radio].form-check-input.form-check-input-required:checked:hover,.form-check.hover .form-check-input.form-check-input-required:checked,.form-check.hover input[type=checkbox].form-check-input.form-check-input-required:checked,.form-check.hover input[type=radio].form-check-input.form-check-input-required:checked {background: #d94141;}.form-check-input.form-check-input-required:checked:active,input[type=checkbox].form-check-input.form-check-input-required:checked:active,input[type=radio].form-check-input.form-check-input-required:checked:active,.form-check.active .form-check-input.form-check-input-required:checked,.form-check.active input[type=checkbox].form-check-input.form-check-input-required:checked,.form-check.active input[type=radio].form-check-input.form-check-input-required:checked {background: #bf3939;}input[type=checkbox].form-check-input.form-check-input.form-check-input-required:indeterminate,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-required:indeterminate,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-required:indeterminate {background: #f26161;border-width: 0;}input[type=checkbox].form-check-input.form-check-input.form-check-input-required:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-required:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-required:indeterminate:hover,.form-check.hover input[type=checkbox].form-check-input.form-check-input.form-check-input-required:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-required:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-required:indeterminate {background: #d94141;}input[type=checkbox].form-check-input.form-check-input.form-check-input-required:indeterminate:active,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-required:indeterminate:active,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-required:indeterminate:active,.form-check.active input[type=checkbox].form-check-input.form-check-input.form-check-input-required:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.form-check-input-required:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=radio].form-check-input.form-check-input-required:indeterminate {background: #bf3939;}.form-check-input.form-check-input-required[disabled]:hover,input[type=checkbox].form-check-input.form-check-input-required[disabled]:hover,input[type=radio].form-check-input.form-check-input-required[disabled]:hover,.form-check-input.form-check-input-required:indeterminate:hover,input[type=checkbox].form-check-input.form-check-input-required:indeterminate:hover,input[type=radio].form-check-input.form-check-input-required:indeterminate:hover,.form-check.disabled .form-check-input.form-check-input-required:hover,.form-check.disabled input[type=checkbox].form-check-input.form-check-input-required:hover,.form-check.disabled input[type=radio].form-check-input.form-check-input-required:hover,.form-check-input.form-check-input-required[disabled]:active,input[type=checkbox].form-check-input.form-check-input-required[disabled]:active,input[type=radio].form-check-input.form-check-input-required[disabled]:active,.form-check-input.form-check-input-required:indeterminate:active,input[type=checkbox].form-check-input.form-check-input-required:indeterminate:active,input[type=radio].form-check-input.form-check-input-required:indeterminate:active,.form-check.disabled .form-check-input.form-check-input-required:active,.form-check.disabled input[type=checkbox].form-check-input.form-check-input-required:active,.form-check.disabled input[type=radio].form-check-input.form-check-input-required:active {background: ;border-color: ;cursor: default;}.form-check-input.form-check-input-required[disabled]:checked,input[type=checkbox].form-check-input.form-check-input-required[disabled]:checked,input[type=radio].form-check-input.form-check-input-required[disabled]:checked,.form-check-input.form-check-input-required:indeterminate:checked,input[type=checkbox].form-check-input.form-check-input-required:indeterminate:checked,input[type=radio].form-check-input.form-check-input-required:indeterminate:checked,.form-check.disabled .form-check-input.form-check-input-required:checked,.form-check.disabled input[type=checkbox].form-check-input.form-check-input-required:checked,.form-check.disabled input[type=radio].form-check-input.form-check-input-required:checked {background: #f26161;border-width: 0;}.form-check-input.form-check-input-required:checked,input[type=checkbox].form-check-input.form-check-input-required:checked,input[type=radio].form-check-input.form-check-input-required:checked {content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='9' height='8' viewBox='0 0 9 8'%3E%3Cpath d='M8.39561 3.49451L7.97802 2.21978L4.85714 3.27473V0H3.53846V3.27473L0.417582 2.21978L0 3.49451L3.0989 4.54945L1.18681 7.16483L2.28571 8L4.1978 5.2967L6.17583 8L7.25275 7.16483L5.2967 4.54945L8.39561 3.49451Z' fill='white'/%3E%3C/svg%3E%0A");}.form-check-input.invalid,input[type=checkbox].form-check-input.invalid,input[type=radio].form-check-input.invalid {background: #fff7f7;border-color: #d94141;}.form-check-input.invalid:hover,input[type=checkbox].form-check-input.invalid:hover,input[type=radio].form-check-input.invalid:hover,.form-check.hover .form-check-input.invalid,.form-check.hover input[type=checkbox].form-check-input.invalid,.form-check.hover input[type=radio].form-check-input.invalid {background: #ffe6e6;border-color: #d94141;}.form-check-input.invalid:active,input[type=checkbox].form-check-input.invalid:active,input[type=radio].form-check-input.invalid:active,.form-check.active .form-check-input.invalid,.form-check.active input[type=checkbox].form-check-input.invalid,.form-check.active input[type=radio].form-check-input.invalid {background: #ffbfbf;border-color: #d94141;}.form-check-input.invalid:checked,input[type=checkbox].form-check-input.invalid:checked,input[type=radio].form-check-input.invalid:checked {background: #d94141;border-width: 0;}.form-check-input.invalid:checked:hover,input[type=checkbox].form-check-input.invalid:checked:hover,input[type=radio].form-check-input.invalid:checked:hover,.form-check.hover .form-check-input.invalid:checked,.form-check.hover input[type=checkbox].form-check-input.invalid:checked,.form-check.hover input[type=radio].form-check-input.invalid:checked {background: #bf3939;}.form-check-input.invalid:checked:active,input[type=checkbox].form-check-input.invalid:checked:active,input[type=radio].form-check-input.invalid:checked:active,.form-check.active .form-check-input.invalid:checked,.form-check.active input[type=checkbox].form-check-input.invalid:checked,.form-check.active input[type=radio].form-check-input.invalid:checked {background: #a62929;}input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate {background: #d94141;border-width: 0;}input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate:hover,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate:hover,.form-check.hover input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate,.form-check.hover input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate {background: #bf3939;}input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate:active,input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate:active,input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate:active,.form-check.active input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate,.form-check.active input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate {background: #a62929;}.form-check-input.invalid[disabled]:hover,input[type=checkbox].form-check-input.invalid[disabled]:hover,input[type=radio].form-check-input.invalid[disabled]:hover,.form-check-input.invalid:indeterminate:hover,input[type=checkbox].form-check-input.invalid:indeterminate:hover,input[type=radio].form-check-input.invalid:indeterminate:hover,.form-check.disabled .form-check-input.invalid:hover,.form-check.disabled input[type=checkbox].form-check-input.invalid:hover,.form-check.disabled input[type=radio].form-check-input.invalid:hover,.form-check-input.invalid[disabled]:active,input[type=checkbox].form-check-input.invalid[disabled]:active,input[type=radio].form-check-input.invalid[disabled]:active,.form-check-input.invalid:indeterminate:active,input[type=checkbox].form-check-input.invalid:indeterminate:active,input[type=radio].form-check-input.invalid:indeterminate:active,.form-check.disabled .form-check-input.invalid:active,.form-check.disabled input[type=checkbox].form-check-input.invalid:active,.form-check.disabled input[type=radio].form-check-input.invalid:active {background: #fff7f7;border-color: #d94141;cursor: default;}.form-check-input.invalid[disabled]:checked,input[type=checkbox].form-check-input.invalid[disabled]:checked,input[type=radio].form-check-input.invalid[disabled]:checked,.form-check-input.invalid:indeterminate:checked,input[type=checkbox].form-check-input.invalid:indeterminate:checked,input[type=radio].form-check-input.invalid:indeterminate:checked,.form-check.disabled .form-check-input.invalid:checked,.form-check.disabled input[type=checkbox].form-check-input.invalid:checked,.form-check.disabled input[type=radio].form-check-input.invalid:checked {background: #d94141;border-width: 0;}.theme-inverse .form-check-input.invalid,.theme-inverse input[type=checkbox].form-check-input.invalid,.theme-inverse input[type=radio].form-check-input.invalid {background: #ffe6e6;border-color: #d94141;}.theme-inverse .form-check-input.invalid:hover,.theme-inverse input[type=checkbox].form-check-input.invalid:hover,.theme-inverse input[type=radio].form-check-input.invalid:hover,.theme-inverse .form-check.hover .form-check-input.invalid,.theme-inverse .form-check.hover input[type=checkbox].form-check-input.invalid,.theme-inverse .form-check.hover input[type=radio].form-check-input.invalid {background: #fff7f7;border-color: #d94141;}.theme-inverse .form-check-input.invalid:active,.theme-inverse input[type=checkbox].form-check-input.invalid:active,.theme-inverse input[type=radio].form-check-input.invalid:active,.theme-inverse .form-check.active .form-check-input.invalid,.theme-inverse .form-check.active input[type=checkbox].form-check-input.invalid,.theme-inverse .form-check.active input[type=radio].form-check-input.invalid {background: #ffbfbf;border-color: #d94141;}.theme-inverse .form-check-input.invalid:checked,.theme-inverse input[type=checkbox].form-check-input.invalid:checked,.theme-inverse input[type=radio].form-check-input.invalid:checked {background: #d94141;border-width: 0;}.theme-inverse .form-check-input.invalid:checked:hover,.theme-inverse input[type=checkbox].form-check-input.invalid:checked:hover,.theme-inverse input[type=radio].form-check-input.invalid:checked:hover,.theme-inverse .form-check.hover .form-check-input.invalid:checked,.theme-inverse .form-check.hover input[type=checkbox].form-check-input.invalid:checked,.theme-inverse .form-check.hover input[type=radio].form-check-input.invalid:checked {background: #bf3939;}.theme-inverse .form-check-input.invalid:checked:active,.theme-inverse input[type=checkbox].form-check-input.invalid:checked:active,.theme-inverse input[type=radio].form-check-input.invalid:checked:active,.theme-inverse .form-check.active .form-check-input.invalid:checked,.theme-inverse .form-check.active input[type=checkbox].form-check-input.invalid:checked,.theme-inverse .form-check.active input[type=radio].form-check-input.invalid:checked {background: #a62929;}.theme-inverse input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate,.theme-inverse input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate,.theme-inverse input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate {background: #d94141;border-width: 0;}.theme-inverse input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate:hover,.theme-inverse input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate:hover,.theme-inverse input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate:hover,.theme-inverse .form-check.hover input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate,.theme-inverse .form-check.hover input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate,.theme-inverse .form-check.hover input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate {background: #bf3939;}.theme-inverse input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate:active,.theme-inverse input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate:active,.theme-inverse input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate:active,.theme-inverse .form-check.active input[type=checkbox].form-check-input.form-check-input.invalid:indeterminate,.theme-inverse .form-check.active input[type=checkbox].form-check-inputinput[type=checkbox].form-check-input.invalid:indeterminate,.theme-inverse .form-check.active input[type=checkbox].form-check-inputinput[type=radio].form-check-input.invalid:indeterminate {background: #a62929;}.theme-inverse .form-check-input.invalid[disabled]:hover,.theme-inverse input[type=checkbox].form-check-input.invalid[disabled]:hover,.theme-inverse input[type=radio].form-check-input.invalid[disabled]:hover,.theme-inverse .form-check-input.invalid:indeterminate:hover,.theme-inverse input[type=checkbox].form-check-input.invalid:indeterminate:hover,.theme-inverse input[type=radio].form-check-input.invalid:indeterminate:hover,.theme-inverse .form-check.disabled .form-check-input.invalid:hover,.theme-inverse .form-check.disabled input[type=checkbox].form-check-input.invalid:hover,.theme-inverse .form-check.disabled input[type=radio].form-check-input.invalid:hover,.theme-inverse .form-check-input.invalid[disabled]:active,.theme-inverse input[type=checkbox].form-check-input.invalid[disabled]:active,.theme-inverse input[type=radio].form-check-input.invalid[disabled]:active,.theme-inverse .form-check-input.invalid:indeterminate:active,.theme-inverse input[type=checkbox].form-check-input.invalid:indeterminate:active,.theme-inverse input[type=radio].form-check-input.invalid:indeterminate:active,.theme-inverse .form-check.disabled .form-check-input.invalid:active,.theme-inverse .form-check.disabled input[type=checkbox].form-check-input.invalid:active,.theme-inverse .form-check.disabled input[type=radio].form-check-input.invalid:active {background: #ffe6e6;border-color: #d94141;cursor: default;}.theme-inverse .form-check-input.invalid[disabled]:checked,.theme-inverse input[type=checkbox].form-check-input.invalid[disabled]:checked,.theme-inverse input[type=radio].form-check-input.invalid[disabled]:checked,.theme-inverse .form-check-input.invalid:indeterminate:checked,.theme-inverse input[type=checkbox].form-check-input.invalid:indeterminate:checked,.theme-inverse input[type=radio].form-check-input.invalid:indeterminate:checked,.theme-inverse .form-check.disabled .form-check-input.invalid:checked,.theme-inverse .form-check.disabled input[type=checkbox].form-check-input.invalid:checked,.theme-inverse .form-check.disabled input[type=radio].form-check-input.invalid:checked {background: #d94141;border-width: 0;}input[type=radio].form-check-input {border-radius: 8px;}input[type=radio].form-check-input:checked::after {background-color: #fff;border-radius: 3px;content: "";height: 6px;left: 5px;position: absolute;top: 5px;width: 6px;}input[type=checkbox].form-check-input {border-radius: 3px;}input[type=checkbox].form-check-input:indeterminate::after {border-bottom: 2px solid #fff;content: "";height: 4px;left: 26%;position: absolute;top: 20%;width: 7px;}input[type=checkbox].form-check-input:checked::after {border-bottom: 2px solid #fff;border-left: 2px solid #fff;content: "";height: 4px;left: 22%;position: absolute;top: 20%;-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-o-transform: rotate(-45deg);-ms-transform: rotate(-45deg);transform: rotate(-45deg);width: 7px;}.form-check-inline {display: inline-block;}.form-check-inline + .form-check-inline {margin-left: 24px;margin-top: 0;}.col-form-label {font-size: 16px;line-height: 24px;margin-bottom: 0;padding-top: 8px;}.col-form-label-lg {font-size: 32px;line-height: 40px;padding-top: 4px;}.col-form-label-sm {font-size: 14px;line-height: 21px;padding-top: 5.5px;}.form-text {color: #555659;display: block;font-size: 14px;line-height: 21px;margin-top: 8px;}.form-text.invalid {color: #d94141;}.theme-inverse .form-text {color: #b1b1b3;}.theme-inverse .form-text.invalid {color: #f99;}.form-required::after {color: #d94141;content: "*";font-weight: normal;margin-left: 0.2em;}.chip.default-multi-select-input,.chip.small-multi-select-input {float: left;}.chip.default-multi-select-input {margin: 0.5px 4px 2px;}.chip.small-multi-select-input {margin: -1px 4px 1px;}.form-input-overlay {position: relative;}.form-input-overlay .overlay-front {left: 16px;position: absolute;top: 8px;}.form-input-overlay .overlay-front.overlay-sm {top: 4px;}.form-input-overlay .overlay-front.overlay-lg {top: 12px;}.form-input-overlay .overlay-back {position: absolute;right: 16px;top: 8px;}.form-input-overlay .overlay-back.overlay-sm {top: 4px;}.form-input-overlay .overlay-back.overlay-lg {top: 12px;}.form-input-overlay .form-control ~ .overlay-front,.form-input-overlay .form-control ~ .overlay-back {background-color: transparent;color: #222326;font-size: 16px;}.form-input-overlay .form-control:hover ~ .overlay-front,.form-input-overlay .form-control.hover ~ .overlay-front,.form-input-overlay .form-control:hover ~ .overlay-back,.form-input-overlay .form-control.hover ~ .overlay-back {color: #222326;}.form-input-overlay .form-control:focus ~ .overlay-front,.form-input-overlay .form-control.focus ~ .overlay-front,.form-input-overlay .form-control:focus ~ .overlay-back,.form-input-overlay .form-control.focus ~ .overlay-back {color: #222326;}.form-input-overlay .form-control[disabled] ~ .overlay-front,.form-input-overlay .form-control.disabled ~ .overlay-front,.form-input-overlay .form-control[disabled] ~ .overlay-back,.form-input-overlay .form-control.disabled ~ .overlay-back {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.form-input-overlay .form-control.form-control-transparent ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent ~ .overlay-back {color: inherit;}.form-input-overlay .form-control.form-control-transparent:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent.hover ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent:hover ~ .overlay-back,.form-input-overlay .form-control.form-control-transparent.hover ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-transparent:focus ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent.focus ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent:focus ~ .overlay-back,.form-input-overlay .form-control.form-control-transparent.focus ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-transparent[disabled]:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent.disabled:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-transparent[disabled]:hover ~ .overlay-back,.form-input-overlay .form-control.form-control-transparent.disabled:hover ~ .overlay-back {color: inherit;}.form-input-overlay .form-control.form-control-inherit ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit ~ .overlay-back {color: inherit;font-size: inherit;font-weight: inherit;}.form-input-overlay .form-control.form-control-inherit:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit.hover ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit:hover ~ .overlay-back,.form-input-overlay .form-control.form-control-inherit.hover ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-inherit:focus ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit.focus ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit:focus ~ .overlay-back,.form-input-overlay .form-control.form-control-inherit.focus ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-inherit[disabled] ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit.disabled ~ .overlay-front,.form-input-overlay .form-control.form-control-inherit[disabled] ~ .overlay-back,.form-input-overlay .form-control.form-control-inherit.disabled ~ .overlay-back {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.theme-inverse .form-input-overlay .form-control ~ .overlay-front,.theme-inverse .form-input-overlay .form-control ~ .overlay-back {color: #d7d7d9;}.theme-inverse .form-input-overlay .form-control:hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control:hover ~ .overlay-back,.theme-inverse .form-input-overlay .form-control.hover ~ .overlay-back {color: #d7d7d9;}.theme-inverse .form-input-overlay .form-control:focus ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.focus ~ .overlay-front,.theme-inverse .form-input-overlay .form-control:focus ~ .overlay-back,.theme-inverse .form-input-overlay .form-control.focus ~ .overlay-back {color: #222326;}.theme-inverse .form-input-overlay .form-control[disabled]:hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.disabled:hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control[disabled]:hover ~ .overlay-back,.theme-inverse .form-input-overlay .form-control.disabled:hover ~ .overlay-back {color: #d7d7d9;}.form-input-overlay .form-control.form-control-outlined ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-outlined:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined.hover ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined:hover ~ .overlay-back,.form-input-overlay .form-control.form-control-outlined.hover ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-outlined:focus ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined.focus ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined:focus ~ .overlay-back,.form-input-overlay .form-control.form-control-outlined.focus ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.form-control-outlined[disabled]:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined.disabled:hover ~ .overlay-front,.form-input-overlay .form-control.form-control-outlined[disabled]:hover ~ .overlay-back,.form-input-overlay .form-control.form-control-outlined.disabled:hover ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.invalid ~ .overlay-front,.form-input-overlay .form-control.invalid ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.invalid:hover ~ .overlay-front,.form-input-overlay .form-control.invalid.hover ~ .overlay-front,.form-input-overlay .form-control.invalid:hover ~ .overlay-back,.form-input-overlay .form-control.invalid.hover ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.invalid:focus ~ .overlay-front,.form-input-overlay .form-control.invalid.focus ~ .overlay-front,.form-input-overlay .form-control.invalid:focus ~ .overlay-back,.form-input-overlay .form-control.invalid.focus ~ .overlay-back {color: #222326;}.form-input-overlay .form-control.invalid[disabled]:hover ~ .overlay-front,.form-input-overlay .form-control.invalid.disabled:hover ~ .overlay-front,.form-input-overlay .form-control.invalid[disabled]:hover ~ .overlay-back,.form-input-overlay .form-control.invalid.disabled:hover ~ .overlay-back {color: #222326;}.theme-inverse .form-input-overlay .form-control.invalid ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid ~ .overlay-back {color: #222326;}.theme-inverse .form-input-overlay .form-control.invalid:hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid.hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid:hover ~ .overlay-back,.theme-inverse .form-input-overlay .form-control.invalid.hover ~ .overlay-back {color: #222326;}.theme-inverse .form-input-overlay .form-control.invalid:focus ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid.focus ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid:focus ~ .overlay-back,.theme-inverse .form-input-overlay .form-control.invalid.focus ~ .overlay-back {color: #222326;}.theme-inverse .form-input-overlay .form-control.invalid[disabled]:hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid.disabled:hover ~ .overlay-front,.theme-inverse .form-input-overlay .form-control.invalid[disabled]:hover ~ .overlay-back,.theme-inverse .form-input-overlay .form-control.invalid.disabled:hover ~ .overlay-back {color: #222326;}.form-input-overlay .overlay-input-left-sm {padding-left: 32px;}.form-input-overlay .overlay-input-right-sm {padding-right: 32px;}.form-input-overlay .overlay-input-both-sm {padding-left: 32px;padding-right: 32px;}.form-input-overlay .overlay-input-left-md {padding-left: 56px;}.form-input-overlay .overlay-input-right-md {padding-right: 56px;}.form-input-overlay .overlay-input-both-md {padding-left: 56px;padding-right: 56px;}.form-input-overlay .overlay-input-left-lg {padding-left: 80px;}.form-input-overlay .overlay-input-right-lg {padding-right: 80px;}.form-input-overlay .overlay-input-both-lg {padding-left: 80px;padding-right: 80px;}.form-input-overlay .overlay-input-left-icon {padding-left: 40px;}.form-input-overlay .overlay-input-right-icon {padding-right: 40px;}.form-input-overlay .overlay-input-both-icon {padding-left: 40px;padding-right: 40px;}.container-fluid,.container,.container-sm,.container-md,.container-lg,.container-xl,.col,.col-auto,.col-grow,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-sm,.col-sm-auto,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-md,.col-md-auto,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-lg,.col-lg-auto,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-xl,.col-xl-auto,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12 {min-height: 1px;padding-left: 8px;padding-right: 8px;}.container-fluid,.container,.container-sm,.container-md,.container-lg,.container-xl {margin-left: auto;margin-right: auto;width: 100%;}.container {max-width: 100%;}.container-sm {max-width: 100%;}.container-md {max-width: 100%;}.container-lg {max-width: 100%;}.container-xl {max-width: 100%;}.row {display: flex;flex-wrap: wrap;margin-left: -8px;margin-right: -8px;}.row.no-gutters {margin-left: 0;margin-right: 0;}.row.no-gutters > .col,.row.no-gutters > [class*="col-"] {padding-left: 0;padding-right: 0;}a.row {text-decoration: none;}.col {flex: 1 1 0%;min-width: 0;width: 100%;}.col-auto {flex: 0 0 auto;width: auto;}.col-grow {flex: 1 0 auto;}.col-icon {align-items: center;display: flex;flex: 0 0 24px;}.col-1 {flex: 0 0 8.333333333333334%;max-width: 8.333333333333334%;}.col-2 {flex: 0 0 16.666666666666668%;max-width: 16.666666666666668%;}.col-3 {flex: 0 0 25%;max-width: 25%;}.col-4 {flex: 0 0 33.333333333333336%;max-width: 33.333333333333336%;}.col-5 {flex: 0 0 41.666666666666664%;max-width: 41.666666666666664%;}.col-6 {flex: 0 0 50%;max-width: 50%;}.col-7 {flex: 0 0 58.333333333333336%;max-width: 58.333333333333336%;}.col-8 {flex: 0 0 66.66666666666667%;max-width: 66.66666666666667%;}.col-9 {flex: 0 0 75%;max-width: 75%;}.col-10 {flex: 0 0 83.33333333333333%;max-width: 83.33333333333333%;}.col-11 {flex: 0 0 91.66666666666667%;max-width: 91.66666666666667%;}.col-12 {flex: 0 0 100%;max-width: 100%;}.mo-identicon {background-color: #e3e4e6;border-radius: 3px;color: #555659;display: inline-block;font-size: 12px;height: 24px;line-height: 24px;overflow: hidden;position: relative;text-align: center;text-decoration: none;vertical-align: middle;width: 24px;}.mo-identicon img {height: 100%;width: 100%;}.mo-identicon-initials {background: -webkit-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: -moz-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: -o-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: -ms-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: linear-gradient(-15deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;color: #fff;height: 100%;text-shadow: 0 0 2px rgba(0,0,0,0.2);width: 100%;}.mo-identicon-placeholder {background: -webkit-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: -moz-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: -o-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: -ms-linear-gradient(105deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;background: linear-gradient(-15deg, #969799, #969799 49%, #b1b1b3 51%, #b1b1b3) #969799;}.mo-identicon-placeholder .icon {color: #e3e4e6;height: 18px;width: 18px;}.mo-identicon-placeholder .icon,.momentum-body .mo-identicon-placeholder .icon {vertical-align: middle;}.mo-identicon-sm {font-size: 10px;height: 16px;line-height: 16px;width: 16px;}.mo-identicon-sm .mo-identicon-placeholder .icon {height: 12px;width: 12px;}.mo-identicon-lg {font-size: 14px;height: 32px;line-height: 32px;width: 32px;}.mo-identicon-lg .mo-identicon-placeholder .icon {height: 24px;width: 24px;}.mo-identicon-xl {font-size: 16px;height: 40px;line-height: 40px;width: 40px;}.mo-identicon-xl .mo-identicon-placeholder .icon {height: 30px;width: 30px;}.mo-identicon-initials-0 {background: -webkit-linear-gradient(105deg, #59676c, #59676c 49%, #7c8f95 51%, #7c8f95) #59676c;background: -moz-linear-gradient(105deg, #59676c, #59676c 49%, #7c8f95 51%, #7c8f95) #59676c;background: -o-linear-gradient(105deg, #59676c, #59676c 49%, #7c8f95 51%, #7c8f95) #59676c;background: -ms-linear-gradient(105deg, #59676c, #59676c 49%, #7c8f95 51%, #7c8f95) #59676c;background: linear-gradient(-15deg, #59676c, #59676c 49%, #7c8f95 51%, #7c8f95) #59676c;}.mo-identicon-initials-1 {background: -webkit-linear-gradient(105deg, #6c5c7e, #6c5c7e 49%, #9580af 51%, #9580af) #6c5c7e;background: -moz-linear-gradient(105deg, #6c5c7e, #6c5c7e 49%, #9580af 51%, #9580af) #6c5c7e;background: -o-linear-gradient(105deg, #6c5c7e, #6c5c7e 49%, #9580af 51%, #9580af) #6c5c7e;background: -ms-linear-gradient(105deg, #6c5c7e, #6c5c7e 49%, #9580af 51%, #9580af) #6c5c7e;background: linear-gradient(-15deg, #6c5c7e, #6c5c7e 49%, #9580af 51%, #9580af) #6c5c7e;}.mo-identicon-initials-2 {background: -webkit-linear-gradient(105deg, #7e5756, #7e5756 49%, #ae7977 51%, #ae7977) #7e5756;background: -moz-linear-gradient(105deg, #7e5756, #7e5756 49%, #ae7977 51%, #ae7977) #7e5756;background: -o-linear-gradient(105deg, #7e5756, #7e5756 49%, #ae7977 51%, #ae7977) #7e5756;background: -ms-linear-gradient(105deg, #7e5756, #7e5756 49%, #ae7977 51%, #ae7977) #7e5756;background: linear-gradient(-15deg, #7e5756, #7e5756 49%, #ae7977 51%, #ae7977) #7e5756;}.mo-identicon-initials-3 {background: -webkit-linear-gradient(105deg, #7e7156, #7e7156 49%, #af9d77 51%, #af9d77) #7e7156;background: -moz-linear-gradient(105deg, #7e7156, #7e7156 49%, #af9d77 51%, #af9d77) #7e7156;background: -o-linear-gradient(105deg, #7e7156, #7e7156 49%, #af9d77 51%, #af9d77) #7e7156;background: -ms-linear-gradient(105deg, #7e7156, #7e7156 49%, #af9d77 51%, #af9d77) #7e7156;background: linear-gradient(-15deg, #7e7156, #7e7156 49%, #af9d77 51%, #af9d77) #7e7156;}.mo-identicon-initials-4 {background: -webkit-linear-gradient(105deg, #6a7e5c, #6a7e5c 49%, #93ae80 51%, #93ae80) #6a7e5c;background: -moz-linear-gradient(105deg, #6a7e5c, #6a7e5c 49%, #93ae80 51%, #93ae80) #6a7e5c;background: -o-linear-gradient(105deg, #6a7e5c, #6a7e5c 49%, #93ae80 51%, #93ae80) #6a7e5c;background: -ms-linear-gradient(105deg, #6a7e5c, #6a7e5c 49%, #93ae80 51%, #93ae80) #6a7e5c;background: linear-gradient(-15deg, #6a7e5c, #6a7e5c 49%, #93ae80 51%, #93ae80) #6a7e5c;}.mo-identicon-initials-5 {background: -webkit-linear-gradient(105deg, #6a6a6a, #6a6a6a 49%, #939393 51%, #939393) #6a6a6a;background: -moz-linear-gradient(105deg, #6a6a6a, #6a6a6a 49%, #939393 51%, #939393) #6a6a6a;background: -o-linear-gradient(105deg, #6a6a6a, #6a6a6a 49%, #939393 51%, #939393) #6a6a6a;background: -ms-linear-gradient(105deg, #6a6a6a, #6a6a6a 49%, #939393 51%, #939393) #6a6a6a;background: linear-gradient(-15deg, #6a6a6a, #6a6a6a 49%, #939393 51%, #939393) #6a6a6a;}.mo-identicon-initials-6 {background: -webkit-linear-gradient(105deg, #7e7e7f, #7e7e7f 49%, #afafb0 51%, #afafb0) #7e7e7f;background: -moz-linear-gradient(105deg, #7e7e7f, #7e7e7f 49%, #afafb0 51%, #afafb0) #7e7e7f;background: -o-linear-gradient(105deg, #7e7e7f, #7e7e7f 49%, #afafb0 51%, #afafb0) #7e7e7f;background: -ms-linear-gradient(105deg, #7e7e7f, #7e7e7f 49%, #afafb0 51%, #afafb0) #7e7e7f;background: linear-gradient(-15deg, #7e7e7f, #7e7e7f 49%, #afafb0 51%, #afafb0) #7e7e7f;}.mo-identicon-initials-7 {background: -webkit-linear-gradient(105deg, #91828d, #91828d 49%, #c9b4c3 51%, #c9b4c3) #91828d;background: -moz-linear-gradient(105deg, #91828d, #91828d 49%, #c9b4c3 51%, #c9b4c3) #91828d;background: -o-linear-gradient(105deg, #91828d, #91828d 49%, #c9b4c3 51%, #c9b4c3) #91828d;background: -ms-linear-gradient(105deg, #91828d, #91828d 49%, #c9b4c3 51%, #c9b4c3) #91828d;background: linear-gradient(-15deg, #91828d, #91828d 49%, #c9b4c3 51%, #c9b4c3) #91828d;}.mo-identicon-initials-8 {background: -webkit-linear-gradient(105deg, #92847b, #92847b 49%, #cab7aa 51%, #cab7aa) #92847b;background: -moz-linear-gradient(105deg, #92847b, #92847b 49%, #cab7aa 51%, #cab7aa) #92847b;background: -o-linear-gradient(105deg, #92847b, #92847b 49%, #cab7aa 51%, #cab7aa) #92847b;background: -ms-linear-gradient(105deg, #92847b, #92847b 49%, #cab7aa 51%, #cab7aa) #92847b;background: linear-gradient(-15deg, #92847b, #92847b 49%, #cab7aa 51%, #cab7aa) #92847b;}.mo-identicon-initials-9 {background: -webkit-linear-gradient(105deg, #91917b, #91917b 49%, #c9c8aa 51%, #c9c8aa) #91917b;background: -moz-linear-gradient(105deg, #91917b, #91917b 49%, #c9c8aa 51%, #c9c8aa) #91917b;background: -o-linear-gradient(105deg, #91917b, #91917b 49%, #c9c8aa 51%, #c9c8aa) #91917b;background: -ms-linear-gradient(105deg, #91917b, #91917b 49%, #c9c8aa 51%, #c9c8aa) #91917b;background: linear-gradient(-15deg, #91917b, #91917b 49%, #c9c8aa 51%, #c9c8aa) #91917b;}.mo-identicon-initials-10 {background: -webkit-linear-gradient(105deg, #829188, #829188 49%, #b4c9bc 51%, #b4c9bc) #829188;background: -moz-linear-gradient(105deg, #829188, #829188 49%, #b4c9bc 51%, #b4c9bc) #829188;background: -o-linear-gradient(105deg, #829188, #829188 49%, #b4c9bc 51%, #b4c9bc) #829188;background: -ms-linear-gradient(105deg, #829188, #829188 49%, #b4c9bc 51%, #b4c9bc) #829188;background: linear-gradient(-15deg, #829188, #829188 49%, #b4c9bc 51%, #b4c9bc) #829188;}.mo-identicon-initials-11 {background: -webkit-linear-gradient(105deg, #735c6c, #735c6c 49%, #9f8096 51%, #9f8096) #735c6c;background: -moz-linear-gradient(105deg, #735c6c, #735c6c 49%, #9f8096 51%, #9f8096) #735c6c;background: -o-linear-gradient(105deg, #735c6c, #735c6c 49%, #9f8096 51%, #9f8096) #735c6c;background: -ms-linear-gradient(105deg, #735c6c, #735c6c 49%, #9f8096 51%, #9f8096) #735c6c;background: linear-gradient(-15deg, #735c6c, #735c6c 49%, #9f8096 51%, #9f8096) #735c6c;}.mo-identicon-initials-12 {background: -webkit-linear-gradient(105deg, #a29692, #a29692 49%, #e0cfca 51%, #e0cfca) #a29692;background: -moz-linear-gradient(105deg, #a29692, #a29692 49%, #e0cfca 51%, #e0cfca) #a29692;background: -o-linear-gradient(105deg, #a29692, #a29692 49%, #e0cfca 51%, #e0cfca) #a29692;background: -ms-linear-gradient(105deg, #a29692, #a29692 49%, #e0cfca 51%, #e0cfca) #a29692;background: linear-gradient(-15deg, #a29692, #a29692 49%, #e0cfca 51%, #e0cfca) #a29692;}.mo-identicon-initials-13 {background: -webkit-linear-gradient(105deg, #a66e8c, #a66e8c 49%, #e599c2 51%, #e599c2) #a66e8c;background: -moz-linear-gradient(105deg, #a66e8c, #a66e8c 49%, #e599c2 51%, #e599c2) #a66e8c;background: -o-linear-gradient(105deg, #a66e8c, #a66e8c 49%, #e599c2 51%, #e599c2) #a66e8c;background: -ms-linear-gradient(105deg, #a66e8c, #a66e8c 49%, #e599c2 51%, #e599c2) #a66e8c;background: linear-gradient(-15deg, #a66e8c, #a66e8c 49%, #e599c2 51%, #e599c2) #a66e8c;}.mo-identicon-initials-14 {background: -webkit-linear-gradient(105deg, #b3745a, #b3745a 49%, #f8a17d 51%, #f8a17d) #b3745a;background: -moz-linear-gradient(105deg, #b3745a, #b3745a 49%, #f8a17d 51%, #f8a17d) #b3745a;background: -o-linear-gradient(105deg, #b3745a, #b3745a 49%, #f8a17d 51%, #f8a17d) #b3745a;background: -ms-linear-gradient(105deg, #b3745a, #b3745a 49%, #f8a17d 51%, #f8a17d) #b3745a;background: linear-gradient(-15deg, #b3745a, #b3745a 49%, #f8a17d 51%, #f8a17d) #b3745a;}.mo-identicon-initials-15 {background: -webkit-linear-gradient(105deg, #8a8759, #8a8759 49%, #bfbb7b 51%, #bfbb7b) #8a8759;background: -moz-linear-gradient(105deg, #8a8759, #8a8759 49%, #bfbb7b 51%, #bfbb7b) #8a8759;background: -o-linear-gradient(105deg, #8a8759, #8a8759 49%, #bfbb7b 51%, #bfbb7b) #8a8759;background: -ms-linear-gradient(105deg, #8a8759, #8a8759 49%, #bfbb7b 51%, #bfbb7b) #8a8759;background: linear-gradient(-15deg, #8a8759, #8a8759 49%, #bfbb7b 51%, #bfbb7b) #8a8759;}.mo-identicon-initials-16 {background: -webkit-linear-gradient(105deg, #755a49, #755a49 49%, #a27d66 51%, #a27d66) #755a49;background: -moz-linear-gradient(105deg, #755a49, #755a49 49%, #a27d66 51%, #a27d66) #755a49;background: -o-linear-gradient(105deg, #755a49, #755a49 49%, #a27d66 51%, #a27d66) #755a49;background: -ms-linear-gradient(105deg, #755a49, #755a49 49%, #a27d66 51%, #a27d66) #755a49;background: linear-gradient(-15deg, #755a49, #755a49 49%, #a27d66 51%, #a27d66) #755a49;}.mo-identicon-initials-17 {background: -webkit-linear-gradient(105deg, #91534d, #91534d 49%, #c8736b 51%, #c8736b) #91534d;background: -moz-linear-gradient(105deg, #91534d, #91534d 49%, #c8736b 51%, #c8736b) #91534d;background: -o-linear-gradient(105deg, #91534d, #91534d 49%, #c8736b 51%, #c8736b) #91534d;background: -ms-linear-gradient(105deg, #91534d, #91534d 49%, #c8736b 51%, #c8736b) #91534d;background: linear-gradient(-15deg, #91534d, #91534d 49%, #c8736b 51%, #c8736b) #91534d;}.mo-identicon-initials-18 {background: -webkit-linear-gradient(105deg, #4d8090, #4d8090 49%, #6bb1c7 51%, #6bb1c7) #4d8090;background: -moz-linear-gradient(105deg, #4d8090, #4d8090 49%, #6bb1c7 51%, #6bb1c7) #4d8090;background: -o-linear-gradient(105deg, #4d8090, #4d8090 49%, #6bb1c7 51%, #6bb1c7) #4d8090;background: -ms-linear-gradient(105deg, #4d8090, #4d8090 49%, #6bb1c7 51%, #6bb1c7) #4d8090;background: linear-gradient(-15deg, #4d8090, #4d8090 49%, #6bb1c7 51%, #6bb1c7) #4d8090;}.mo-identicon-initials-19 {background: -webkit-linear-gradient(105deg, #49755f, #49755f 49%, #66a283 51%, #66a283) #49755f;background: -moz-linear-gradient(105deg, #49755f, #49755f 49%, #66a283 51%, #66a283) #49755f;background: -o-linear-gradient(105deg, #49755f, #49755f 49%, #66a283 51%, #66a283) #49755f;background: -ms-linear-gradient(105deg, #49755f, #49755f 49%, #66a283 51%, #66a283) #49755f;background: linear-gradient(-15deg, #49755f, #49755f 49%, #66a283 51%, #66a283) #49755f;}.mo-identicon-initials-20 {background: -webkit-linear-gradient(105deg, #4a4f75, #4a4f75 49%, #676ea2 51%, #676ea2) #4a4f75;background: -moz-linear-gradient(105deg, #4a4f75, #4a4f75 49%, #676ea2 51%, #676ea2) #4a4f75;background: -o-linear-gradient(105deg, #4a4f75, #4a4f75 49%, #676ea2 51%, #676ea2) #4a4f75;background: -ms-linear-gradient(105deg, #4a4f75, #4a4f75 49%, #676ea2 51%, #676ea2) #4a4f75;background: linear-gradient(-15deg, #4a4f75, #4a4f75 49%, #676ea2 51%, #676ea2) #4a4f75;}.mo-identicon-initials-21 {background: -webkit-linear-gradient(105deg, #78819e, #78819e 49%, #a6b2db 51%, #a6b2db) #78819e;background: -moz-linear-gradient(105deg, #78819e, #78819e 49%, #a6b2db 51%, #a6b2db) #78819e;background: -o-linear-gradient(105deg, #78819e, #78819e 49%, #a6b2db 51%, #a6b2db) #78819e;background: -ms-linear-gradient(105deg, #78819e, #78819e 49%, #a6b2db 51%, #a6b2db) #78819e;background: linear-gradient(-15deg, #78819e, #78819e 49%, #a6b2db 51%, #a6b2db) #78819e;}.mo-identicon-initials-22 {background: -webkit-linear-gradient(105deg, #641c5f, #641c5f 49%, #8b2783 51%, #8b2783) #641c5f;background: -moz-linear-gradient(105deg, #641c5f, #641c5f 49%, #8b2783 51%, #8b2783) #641c5f;background: -o-linear-gradient(105deg, #641c5f, #641c5f 49%, #8b2783 51%, #8b2783) #641c5f;background: -ms-linear-gradient(105deg, #641c5f, #641c5f 49%, #8b2783 51%, #8b2783) #641c5f;background: linear-gradient(-15deg, #641c5f, #641c5f 49%, #8b2783 51%, #8b2783) #641c5f;}.mo-identicon-initials-23 {background: -webkit-linear-gradient(105deg, #283774, #283774 49%, #384ca0 51%, #384ca0) #283774;background: -moz-linear-gradient(105deg, #283774, #283774 49%, #384ca0 51%, #384ca0) #283774;background: -o-linear-gradient(105deg, #283774, #283774 49%, #384ca0 51%, #384ca0) #283774;background: -ms-linear-gradient(105deg, #283774, #283774 49%, #384ca0 51%, #384ca0) #283774;background: linear-gradient(-15deg, #283774, #283774 49%, #384ca0 51%, #384ca0) #283774;}.mo-identicon-initials-24 {background: -webkit-linear-gradient(105deg, #458a5e, #458a5e 49%, #60bf82 51%, #60bf82) #458a5e;background: -moz-linear-gradient(105deg, #458a5e, #458a5e 49%, #60bf82 51%, #60bf82) #458a5e;background: -o-linear-gradient(105deg, #458a5e, #458a5e 49%, #60bf82 51%, #60bf82) #458a5e;background: -ms-linear-gradient(105deg, #458a5e, #458a5e 49%, #60bf82 51%, #60bf82) #458a5e;background: linear-gradient(-15deg, #458a5e, #458a5e 49%, #60bf82 51%, #60bf82) #458a5e;}.mo-identicon-initials-25 {background: -webkit-linear-gradient(105deg, #a7481a, #a7481a 49%, #e76425 51%, #e76425) #a7481a;background: -moz-linear-gradient(105deg, #a7481a, #a7481a 49%, #e76425 51%, #e76425) #a7481a;background: -o-linear-gradient(105deg, #a7481a, #a7481a 49%, #e76425 51%, #e76425) #a7481a;background: -ms-linear-gradient(105deg, #a7481a, #a7481a 49%, #e76425 51%, #e76425) #a7481a;background: linear-gradient(-15deg, #a7481a, #a7481a 49%, #e76425 51%, #e76425) #a7481a;}.mo-identicon-initials-26 {background: -webkit-linear-gradient(105deg, #515151, #515151 49%, #707070 51%, #707070) #515151;background: -moz-linear-gradient(105deg, #515151, #515151 49%, #707070 51%, #707070) #515151;background: -o-linear-gradient(105deg, #515151, #515151 49%, #707070 51%, #707070) #515151;background: -ms-linear-gradient(105deg, #515151, #515151 49%, #707070 51%, #707070) #515151;background: linear-gradient(-15deg, #515151, #515151 49%, #707070 51%, #707070) #515151;}.mo-identicon-initials-27 {background: -webkit-linear-gradient(105deg, #a31052, #a31052 49%, #e11772 51%, #e11772) #a31052;background: -moz-linear-gradient(105deg, #a31052, #a31052 49%, #e11772 51%, #e11772) #a31052;background: -o-linear-gradient(105deg, #a31052, #a31052 49%, #e11772 51%, #e11772) #a31052;background: -ms-linear-gradient(105deg, #a31052, #a31052 49%, #e11772 51%, #e11772) #a31052;background: linear-gradient(-15deg, #a31052, #a31052 49%, #e11772 51%, #e11772) #a31052;}.mo-identicon-initials-28 {background: -webkit-linear-gradient(105deg, #0c4e67, #0c4e67 49%, #116c8f 51%, #116c8f) #0c4e67;background: -moz-linear-gradient(105deg, #0c4e67, #0c4e67 49%, #116c8f 51%, #116c8f) #0c4e67;background: -o-linear-gradient(105deg, #0c4e67, #0c4e67 49%, #116c8f 51%, #116c8f) #0c4e67;background: -ms-linear-gradient(105deg, #0c4e67, #0c4e67 49%, #116c8f 51%, #116c8f) #0c4e67;background: linear-gradient(-15deg, #0c4e67, #0c4e67 49%, #116c8f 51%, #116c8f) #0c4e67;}.mo-identicon-initials-29 {background: -webkit-linear-gradient(105deg, #312269, #312269 49%, #442f91 51%, #442f91) #312269;background: -moz-linear-gradient(105deg, #312269, #312269 49%, #442f91 51%, #442f91) #312269;background: -o-linear-gradient(105deg, #312269, #312269 49%, #442f91 51%, #442f91) #312269;background: -ms-linear-gradient(105deg, #312269, #312269 49%, #442f91 51%, #442f91) #312269;background: linear-gradient(-15deg, #312269, #312269 49%, #442f91 51%, #442f91) #312269;}.mo-identicon-initials-30 {background: -webkit-linear-gradient(105deg, #491b51, #491b51 49%, #652671 51%, #652671) #491b51;background: -moz-linear-gradient(105deg, #491b51, #491b51 49%, #652671 51%, #652671) #491b51;background: -o-linear-gradient(105deg, #491b51, #491b51 49%, #652671 51%, #652671) #491b51;background: -ms-linear-gradient(105deg, #491b51, #491b51 49%, #652671 51%, #652671) #491b51;background: linear-gradient(-15deg, #491b51, #491b51 49%, #652671 51%, #652671) #491b51;}.list-row {border-bottom: 1px solid #e3e4e6;border-top: 1px solid #e3e4e6;display: flex;flex-wrap: wrap;font-size: 16px;line-height: 24px;}.list-row + .list-row {margin-top: -1px;}.list-row > .col,.list-row > [class*="col-"] {padding-bottom: 8px;padding-top: 8px;}.list-row.clickable:hover {background: #f0f1f2;cursor: pointer;}.list-row.clickable:active {background: #e3e4e6;}.list-row.clickable.selected {background: #f3faff;}.list-row.clickable.selected:hover {background: #e1f3ff;}.list-row.clickable.selected:active {background: #bfe5ff;}.list-row.hover,.list-row > .col.hover,.list-row > [class*="col-"].hover {background: #f0f1f2;}.list-row.active,.list-row > .col.active,.list-row > [class*="col-"].active {background: #e3e4e6;}.list-row.selected,.list-row > .col.selected,.list-row > [class*="col-"].selected {background: #f3faff;}.list-row.selected.hover,.list-row > .col.selected.hover,.list-row > [class*="col-"].selected.hover {background: #e1f3ff;}a.list-row,.momentum-body a.list-row,.list-row > a.col,.list-row > a[class*="col-"] {text-decoration: none;}a.list-row,.momentum-body a.list-row,.list-row > a.col,.list-row > a[class*="col-"],a.list-row:hover,.momentum-body a.list-row:hover,.list-row > a.col:hover,.list-row > a[class*="col-"]:hover,a.list-row:active,.momentum-body a.list-row:active,.list-row > a.col:active,.list-row > a[class*="col-"]:active,a.list-row:visited,.momentum-body a.list-row:visited,.list-row > a.col:visited,.list-row > a[class*="col-"]:visited,.momentum-body .momentum-body a.list-row:visited,.momentum-body .list-row > a.col:visited,.momentum-body .list-row > a[class*="col-"]:visited {color: #222326;}a.list-row:hover,.momentum-body a.list-row:hover,.list-row > a.col:hover,.list-row > a[class*="col-"]:hover {background: #f0f1f2;}a.list-row:active,.momentum-body a.list-row:active,.list-row > a.col:active,.list-row > a[class*="col-"]:active {background: #e3e4e6;}a.list-row.selected:active,.momentum-body a.list-row.selected:active,.list-row > a.col.selected:active,.list-row > a[class*="col-"].selected:active {background: #bfe5ff;}a.list-row.selected.selected:hover,.momentum-body a.list-row.selected.selected:hover,.list-row > a.col.selected.selected:hover,.list-row > a[class*="col-"].selected.selected:hover {background: #e1f3ff;}.list-row > .col-form-label {padding-top: 16px;}.list-row > .col-form-label-lg {padding-top: 12px;}.list-row > .col-form-label-sm {padding-top: 13.5px;}.list-row-head {border-top: 0;}.col-list-row-header {align-self: flex-end;color: #969799;font-size: 12px;line-height: 18px;}.menu-row {display: flex;flex-wrap: wrap;font-size: 14px;line-height: 21px;padding-left: 8px;padding-right: 8px;}.menu-row h3,.menu-row h4 {margin-bottom: 0;}.menu-row h3,.menu-row .momentum-body h3,.menu-row .text-h3,.menu-row .text-h3_5 {font-size: 20px;line-height: 24px;}.menu-row .font-size-h3 {font-size: 20px;}.menu-row .line-height-h3 {line-height: 24px;}.menu-row h4,.menu-row .momentum-body h4,.menu-row .text-h4 {font-size: 16px;line-height: 24px;}.menu-row .font-size-h4 {font-size: 16px;}.menu-row .line-height-h4 {line-height: 24px;}.menu-row > .col,.menu-row > [class*="col-"] {padding-bottom: 8px;padding-top: 8px;}.menu-row.hover {background: #f0f1f2;}.menu-row.active {background: #e3e4e6;}.menu-row.selected {background: #e1f3ff;}.menu-row.selected.hover {background: #bfe5ff;}.menu-row.selected.active {background: #a6daff;}.menu-row.disabled {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}a.menu-row {text-decoration: none;}a.menu-row:hover,a.menu-row:active,a.menu-row:visited {color: inherit;}a.menu-row:hover {background: #f0f1f2;}a.menu-row:active {background: #e3e4e6;}a.menu-row.selected:hover {background: #bfe5ff;}a.menu-row.selected:active {background: #a6daff;}.menu-divider {border-top: 1px solid #e3e4e6;margin-bottom: 4px;margin-top: 3px;}.message {color: #222326;background-color: #f0f1f2;border-radius: 3px;padding-bottom: 8px;padding-left: 40px;padding-right: 32px;padding-top: 8px;position: relative;}.message > .icon {position: absolute;left: 16px;top: 11px;}.message > .icon path {fill: #969799;}.message > p,.momentum-body .message > p {margin-bottom: 0;}.message > .close::after {color: #969799;content: "✕";display: block;font-size: 12px;line-height: 16px;height: 16px;position: absolute;right: 16px;text-align: center;top: 11px;width: 16px;}.message > .close:hover::after {color: #555659;}.message > .close:active::after {color: #222326;}.message > .message-buttons {clear: left;float: right;margin-top: -4px;margin-right: -16px;padding-left: 4px;}.message > .message-buttons > .button-link {margin-top: 4px;}.message.message-info {background-color: #e1f3ff;}.message.message-info > .icon path {fill: #0c92f3;}.message.message-warning {background-color: #fec;}.message.message-warning > .icon path {fill: #ff9000;}.message.message-positive {background-color: #d4f5c4;}.message.message-positive > .icon path {fill: #39bf71;}.message.message-negative {background-color: #ffe6e6;}.message.message-negative > .icon path {fill: #d94141;}.message.message-gray {background-color: #f0f1f2;}.message.message-blue {background-color: #e1f3ff;}.message.message-red {background-color: #ffe6e6;}.message.message-green {background-color: #d4f5c4;}.message.message-yellow {background-color: #fec;}.message.message-rose {background-color: #ffe0f0;}.message.message-violet {background-color: #f5e0ff;}.message.message-turquoise {background-color: #d9f7fa;}.message.message-striped-red {background: -webkit-repeating-linear-gradient(345deg, #ffeded, #ffeded 6px, #fff5f5 6px, #fff5f5 12px);background: -moz-repeating-linear-gradient(345deg, #ffeded, #ffeded 6px, #fff5f5 6px, #fff5f5 12px);background: -o-repeating-linear-gradient(345deg, #ffeded, #ffeded 6px, #fff5f5 6px, #fff5f5 12px);background: -ms-repeating-linear-gradient(345deg, #ffeded, #ffeded 6px, #fff5f5 6px, #fff5f5 12px);background: repeating-linear-gradient(105deg, #ffeded, #ffeded 6px, #fff5f5 6px, #fff5f5 12px);}.message.message-striped-blue {background: -webkit-repeating-linear-gradient(345deg, #eaf7ff, #eaf7ff 6px, #f2faff 6px, #f2faff 12px);background: -moz-repeating-linear-gradient(345deg, #eaf7ff, #eaf7ff 6px, #f2faff 6px, #f2faff 12px);background: -o-repeating-linear-gradient(345deg, #eaf7ff, #eaf7ff 6px, #f2faff 6px, #f2faff 12px);background: -ms-repeating-linear-gradient(345deg, #eaf7ff, #eaf7ff 6px, #f2faff 6px, #f2faff 12px);background: repeating-linear-gradient(105deg, #eaf7ff, #eaf7ff 6px, #f2faff 6px, #f2faff 12px);}.message.message-striped-green {background: -webkit-repeating-linear-gradient(345deg, #e1f8d6, #e1f8d6 6px, #edfbe6 6px, #edfbe6 12px);background: -moz-repeating-linear-gradient(345deg, #e1f8d6, #e1f8d6 6px, #edfbe6 6px, #edfbe6 12px);background: -o-repeating-linear-gradient(345deg, #e1f8d6, #e1f8d6 6px, #edfbe6 6px, #edfbe6 12px);background: -ms-repeating-linear-gradient(345deg, #e1f8d6, #e1f8d6 6px, #edfbe6 6px, #edfbe6 12px);background: repeating-linear-gradient(105deg, #e1f8d6, #e1f8d6 6px, #edfbe6 6px, #edfbe6 12px);}.message.message-inverse {background-color: #555659;color: #fff;}.message.message-inverse > .icon path {fill: #b1b1b3;}.message.message-inverse > .close::after {color: #969799;}.message.message-inverse > .close:hover::after {color: #b1b1b3;}.message.message-inverse > .close:active::after {color: #707173;}.message.message-compact {padding-top: 4px;padding-bottom: 4px;}.message.message-compact > .icon {top: 8.125px;}.message.message-compact > .close::after {top: 8.125px;}.message.message-compact > .message-buttons {margin-top: -5.5px;}.message.message-compact > .message-buttons > .button-link {margin-top: 5.5px;}.modal-backdrop {background-color: rgba(0,0,0,0.3);bottom: 0;display: none;left: 0;position: absolute;right: 0;top: 0;width: 100%;}.modal-backdrop.show {display: flex;}.modal {background: #fff;border-radius: 3px;display: flex;flex-direction: column;left: 0;margin: 0 auto;max-height: calc(100% - 96px);max-width: 640px;min-width: 480px;position: absolute;right: 0;top: 80px;}.modal-content {display: flex;flex-direction: column;height: 100%;overflow: auto;padding: 0 32px;}.modal-content.no-padding {padding: 0;}.modal-actions {align-items: flex-end;display: flex;flex: auto;justify-content: flex-end;padding: 24px 32px;}.modal-actions-distributed {align-items: flex-end;display: flex;flex: auto;justify-content: space-between;padding: 32px 32px;}.modal-navigation {height: auto;padding: 24px 32px 24px 32px;position: relative;}.modal-navigation.no-padding {padding: 0;}.modal-close {color: #555659;position: absolute;right: 16px;top: 16px;}.nav-link,.momentum-body .nav-link {color: $navLinkColor;font-size: $navLinkFontSize;text-decoration: none;}.nav-link:hover,.momentum-body .nav-link:hover {color: $navLinkHoverColor;text-decoration: underline;}.nav-link:active,.momentum-body .nav-link:active {color: $navLinkActiveColor;text-decoration: underline;}.nav-link > .icon {margin-left: 4px;margin-right: 4px;}.nav-link > .icon:first-child {margin-left: 0;}.nav-link > .icon:last-child {margin-right: 0;}.progress-bar .bar,.progress-bar .bar-interactive {align-items: center;border-radius: 3px;display: flex;height: 16px;justify-content: center;-webkit-transition: width 350ms ease-out;-moz-transition: width 350ms ease-out;-o-transition: width 350ms ease-out;-ms-transition: width 350ms ease-out;transition: width 350ms ease-out;}.progress-bar {align-items: center;border-radius: 3px;display: flex;}.progress-bar .bar-container {align-content: center;align-items: center;display: flex;padding: 0;width: 100%;justify-content: space-between;position: relative;}.progress-bar .bar-interactive:hover {cursor: pointer;}.progress-bar .bar-progress-text {display: flex;font-size: 12px;line-height: 12px;position: absolute;padding: 0 0 0 4px;}.progress-bar .bar-progress-text-inverted {position: static;}.progress-bar .bar-title {margin-right: 8px;text-transform: capitalize;}.score {background-color: #555659;border-radius: 3px;color: #fff;display: inline-block;font-size: 16px;height: 24px;line-height: 24px;overflow: hidden;text-align: center;vertical-align: middle;width: 24px;}.score .icon {height: 16px;width: 16px;}.score .mo-identicon {border-radius: 0;vertical-align: unset;}.score.score-worst {background-color: #555659;color: #d7d7d9;}.score.score-bad {background-color: #555659;color: #b1b1b3;}.score.score-good {background-color: #555659;color: #61d086;}.score.score-best {background-color: #555659;color: #8ae58a;}.score.score-unknown {background-color: #e3e4e6;color: #555659;}.score.score-sm {font-size: 12px;height: 16px;line-height: 16px;width: 16px;}.score.score-sm .icon {height: 12px;width: 12px;}.score.score-lg {font-size: 20px;height: 32px;line-height: 32px;width: 32px;}.score.score-lg .icon {height: 20px;width: 20px;}.score.score-xl {font-size: 24px;height: 40px;line-height: 40px;width: 40px;}.score.score-xl .icon {height: 24px;width: 24px;}.score-group {display: inline-block;}.score-group .score {border-radius: 0;}.score-group .score:first-child {border-bottom-left-radius: 3px;border-top-left-radius: 3px;}.score-group .score:last-child {border-bottom-right-radius: 3px;border-top-right-radius: 3px;}.arrow {position: relative;}.arrow .line,.arrow .line::after {height: 40px;}.arrow .line {display: block;text-align: center;}.arrow .line::after {position: absolute;background: #b1b1b3;content: ' ';margin-left: -1px;width: 2px;}.arrow .arrow-overlay {position: absolute;top: 50%;left: 50%;-webkit-transform: translate(-50%, -50%);-moz-transform: translate(-50%, -50%);-o-transform: translate(-50%, -50%);-ms-transform: translate(-50%, -50%);transform: translate(-50%, -50%);}.arrow.direction-down .arrow-head,.arrow.direction-up .arrow-head {width: 10px;height: 10px;position: absolute;left: calc(50% - 5px);}.arrow.direction-down .arrow-head::after,.arrow.direction-up .arrow-head::after {display: block;position: absolute;content: '';height: 10px;margin: 0;padding: 0;width: 10px;-webkit-box-shadow: inset -2px 2px 0 0 #b1b1b3;box-shadow: inset -2px 2px 0 0 #b1b1b3;}.arrow.direction-up .arrow-head {top: 0;}.arrow.direction-up .arrow-head::after {-moz-transform: rotate(-45deg);-ms-transform: rotate(-45deg);-o-transform: rotate(-45deg);-webkit-transform: rotate(-45deg);-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-o-transform: rotate(-45deg);-ms-transform: rotate(-45deg);transform: rotate(-45deg);}.arrow.direction-down .arrow-head {bottom: 0;}.arrow.direction-down .arrow-head::after {-moz-transform: rotate(135deg);-ms-transform: rotate(135deg);-o-transform: rotate(135deg);-webkit-transform: rotate(135deg);-webkit-transform: rotate(135deg);-moz-transform: rotate(135deg);-o-transform: rotate(135deg);-ms-transform: rotate(135deg);transform: rotate(135deg);}.arrow.length-long .line,.arrow.length-long .line::after {height: 72px;}.animation-shimmer {-webkit-animation: shimmer 3s infinite linear;-moz-animation: shimmer 3s infinite linear;-o-animation: shimmer 3s infinite linear;-ms-animation: shimmer 3s infinite linear;animation: shimmer 3s infinite linear;background-image: -webkit-linear-gradient(left, #f9f9f9 0, #f0f1f2 20%, #f9f9f9 40%, #f9f9f9 100%);background-image: -moz-linear-gradient(left, #f9f9f9 0, #f0f1f2 20%, #f9f9f9 40%, #f9f9f9 100%);background-image: -o-linear-gradient(left, #f9f9f9 0, #f0f1f2 20%, #f9f9f9 40%, #f9f9f9 100%);background-image: -ms-linear-gradient(left, #f9f9f9 0, #f0f1f2 20%, #f9f9f9 40%, #f9f9f9 100%);background-image: linear-gradient(to right, #f9f9f9 0, #f0f1f2 20%, #f9f9f9 40%, #f9f9f9 100%);background-size: 1000px 100%;}.animation-shimmer-inverse {-webkit-animation: shimmer 3s infinite linear;-moz-animation: shimmer 3s infinite linear;-o-animation: shimmer 3s infinite linear;-ms-animation: shimmer 3s infinite linear;animation: shimmer 3s infinite linear;background-image: -webkit-linear-gradient(left, #707173 0, #555659 20%, #707173 40%, #707173 100%);background-image: -moz-linear-gradient(left, #707173 0, #555659 20%, #707173 40%, #707173 100%);background-image: -o-linear-gradient(left, #707173 0, #555659 20%, #707173 40%, #707173 100%);background-image: -ms-linear-gradient(left, #707173 0, #555659 20%, #707173 40%, #707173 100%);background-image: linear-gradient(to right, #707173 0, #555659 20%, #707173 40%, #707173 100%);background-size: 1000px 100%;}@-moz-keyframes shimmer {0% {background-position: -1000px 0;}100% {background-position: 1000px 0;}}@-webkit-keyframes shimmer {0% {background-position: -1000px 0;}100% {background-position: 1000px 0;}}@-o-keyframes shimmer {0% {background-position: -1000px 0;}100% {background-position: 1000px 0;}}@keyframes shimmer {0% {background-position: -1000px 0;}100% {background-position: 1000px 0;}}.sidebar-menu {background-color: #f9f9f9;height: 100%;overflow-y: auto;width: 304px;}.sidebar-menu-width {width: 304px;}.sidebar-menu-row {color: #969799;display: flex;flex-wrap: wrap;padding-left: 16px;padding-right: 16px;}.sidebar-menu-row h4,.sidebar-menu-row h3 {margin-bottom: 0;}.sidebar-menu-row > .col,.sidebar-menu-row > [class*="col-"] {padding-bottom: 8px;padding-top: 8px;}.sidebar-menu-row.hover {background: #fff;}.sidebar-menu-row.active {background: #e1f3ff;}.sidebar-menu-row.selected {color: #555659;background: #fff;border-left: 4px solid #0c92f3;padding-left: 12px;}.sidebar-menu-row.selected.hover {background: #f3faff;}.sidebar-menu-row.selected.active {background: #e1f3ff;}.sidebar-menu-row.disabled {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}a.sidebar-menu-row {color: #969799;text-decoration: none;}a.sidebar-menu-row:hover,a.sidebar-menu-row:active,a.sidebar-menu-row:visited {color: inherit;}a.sidebar-menu-row:hover {background: #fff;}a.sidebar-menu-row.selected {color: #555659;}a.sidebar-menu-row.selected:hover {background: #f3faff;}a.sidebar-menu-row.selected:active {background: #e1f3ff;}.sidebar-button-menu {width: 64px;height: 100%;overflow-y: auto;background-color: #f9f9f9;display: flex;flex-direction: column;align-items: center;}.sidebar-button-menu .sidebar-button-menu-row {margin-bottom: 8px;}.sidebar-button-menu .sidebar-button-menu-row .button {border: none;background-color: unset;background-image: unset;}.sidebar-button-menu .sidebar-button-menu-row:hover {margin-bottom: 6px;}.sidebar-button-menu .sidebar-button-menu-row:hover .button {-webkit-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);border-bottom: 2px solid #0c92f3;}.sidebar-button-menu .sidebar-button-menu-row.selected .button {background-color: #fff;-webkit-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);}.tab-links,.tab-links-border-bottom {display: flex;}.tab-link {border-bottom: 4px solid transparent;color: #969799;cursor: pointer;margin-left: 8px;margin-right: 8px;padding-bottom: 8px;}.tab-link:first-child {margin-left: 0;}.tab-link:last-child {margin-right: 0;}.tab-link,.momentum-body a.tab-link {text-decoration: none;color: #969799;}.tab-link:hover,.momentum-body a.tab-link:hover,.tab-link.hover,.momentum-body a.tab-link.hover {color: #707173;border-bottom-color: #b1b1b3;}.tab-link:active,.momentum-body a.tab-link:active {border-bottom-color: #969799;}.tab-link.selected,.momentum-body a.tab-link.selected {border-bottom-color: #0c92f3;color: #555659;}.tab-links-border-bottom {border-bottom: 1px solid #e3e4e6;}.tab-links-border-bottom .tab-link {margin-bottom: -1px;margin-left: 0;margin-right: 0;padding-left: 8px;padding-right: 8px;}.tabs {border-bottom: 1px solid #e3e4e6;display: flex;}.tab {border-color: #e3e4e6;border-style: solid;border-top-left-radius: 3px;border-top-right-radius: 3px;border-width: 1px;cursor: pointer;margin-bottom: -1px;margin-left: 8px;margin-right: 8px;padding: 8px 16px;text-align: center;}.tab:first-child {margin-left: 0;}.tab:last-child {margin-right: 0;}.tab,.momentum-body a.tab {background-color: #fff;color: #969799;text-decoration: none;}.tab:hover,.momentum-body a.tab:hover,.tab.hover,.momentum-body a.tab.hover {color: #707173;}.tab.selected,.momentum-body a.tab.selected {border-bottom-color: #fff;color: #555659;}.toast {-webkit-animation: toastFadeIn 0.3s ease-out;-moz-animation: toastFadeIn 0.3s ease-out;-o-animation: toastFadeIn 0.3s ease-out;-ms-animation: toastFadeIn 0.3s ease-out;animation: toastFadeIn 0.3s ease-out;border-left: 4px solid #969799;border-radius: 3px;display: inline-block;max-width: 480px;padding-bottom: 8px;padding-left: 48px;padding-right: 48px;padding-top: 8px;position: relative;}.toast > .icon {color: #555659;left: 16px;position: absolute;top: 12px;}.toast > .close::after {color: #969799;content: "✕";display: block;font-size: 12px;height: 16px;line-height: 16px;position: absolute;right: 16px;text-align: center;top: 12px;width: 16px;}.toast > .close:hover::after {color: #555659;}.toast > .close:active::after {color: #222326;}.toast > .toast-buttons {margin-bottom: 8px;margin-top: 16px;}.toast.toast-info {border-left-color: #0c92f3;}.toast.toast-warning {border-left-color: #ffa60d;}.toast.toast-positive {border-left-color: #39bf71;}.toast.toast-negative {border-left-color: #d94141;}.toast.theme-inverse > .icon {color: #969799;}.toast.theme-inverse > .close::after {color: #969799;}.toast.theme-inverse > .close:hover::after {color: #b1b1b3;}.toast.theme-inverse > .close:active::after {color: #707173;}@-moz-keyframes toastFadeIn {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);-webkit-transform: translateX(-8px);-moz-transform: translateX(-8px);-o-transform: translateX(-8px);-ms-transform: translateX(-8px);transform: translateX(-8px);}100% {opacity: 1;-ms-filter: none;filter: none;-webkit-transform: translateX(0);-moz-transform: translateX(0);-o-transform: translateX(0);-ms-transform: translateX(0);transform: translateX(0);}}@-webkit-keyframes toastFadeIn {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);-webkit-transform: translateX(-8px);-moz-transform: translateX(-8px);-o-transform: translateX(-8px);-ms-transform: translateX(-8px);transform: translateX(-8px);}100% {opacity: 1;-ms-filter: none;filter: none;-webkit-transform: translateX(0);-moz-transform: translateX(0);-o-transform: translateX(0);-ms-transform: translateX(0);transform: translateX(0);}}@-o-keyframes toastFadeIn {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);-webkit-transform: translateX(-8px);-moz-transform: translateX(-8px);-o-transform: translateX(-8px);-ms-transform: translateX(-8px);transform: translateX(-8px);}100% {opacity: 1;-ms-filter: none;filter: none;-webkit-transform: translateX(0);-moz-transform: translateX(0);-o-transform: translateX(0);-ms-transform: translateX(0);transform: translateX(0);}}@keyframes toastFadeIn {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);-webkit-transform: translateX(-8px);-moz-transform: translateX(-8px);-o-transform: translateX(-8px);-ms-transform: translateX(-8px);transform: translateX(-8px);}100% {opacity: 1;-ms-filter: none;filter: none;-webkit-transform: translateX(0);-moz-transform: translateX(0);-o-transform: translateX(0);-ms-transform: translateX(0);transform: translateX(0);}}.toggle {color: rgba(85,86,89,0.7);background-color: rgba(177,177,179,0.4);border-radius: 11px;border-width: 0;cursor: pointer;display: inline-block;height: 22px;margin: 1px 8px;padding: 0;position: relative;-webkit-transition: background-color 0.15s ease-in;-moz-transition: background-color 0.15s ease-in;-o-transition: background-color 0.15s ease-in;-ms-transition: background-color 0.15s ease-in;transition: background-color 0.15s ease-in;vertical-align: top;width: 40px;}.toggle:hover,.toggle.hover {background-color: rgba(177,177,179,0.6);}.toggle:active,.toggle.active {background-color: #b1b1b3;}.toggle:focus,.toggle.focus {outline: none;}.toggle[disabled],.toggle.disabled {background-color: rgba(177,177,179,0.4);}.toggle:first-child {margin-left: 0;}.toggle:last-child {margin-right: 0;}.toggle::after {background-color: #fff;border-radius: 8px;content: " ";display: block;height: 16px;left: 3px;top: 3px;position: absolute;-webkit-transition: left 0.15s linear;-moz-transition: left 0.15s linear;-o-transition: left 0.15s linear;-ms-transition: left 0.15s linear;transition: left 0.15s linear;width: 16px;}.toggle .icon,.momentum-body .toggle .icon {position: absolute;height: 12px;width: 12px;left: 23px;top: 5px;}.toggle.selected {color: rgba(255,255,255,0.7);background-color: #0c92f3;}.toggle.selected:hover,.toggle.selected.hover {background-color: #007fd9;}.toggle.selected:active,.toggle.selected.active {background-color: #0068b3;}.toggle.selected:focus,.toggle.selected.focus {outline: none;}.toggle.selected[disabled],.toggle.selected.disabled {background-color: #0c92f3;}.toggle.selected::after {left: 21px;}.toggle.selected .icon,.momentum-body .toggle.selected .icon {left: 5px;}.toggle.disabled {cursor: default;pointer-events: none;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.toggle.toggle-yellow.selected {color: rgba(255,255,255,0.7);background-color: #fb3;}.toggle.toggle-yellow.selected:hover,.toggle.toggle-yellow.selected.hover {background-color: #ffa60d;}.toggle.toggle-yellow.selected:active,.toggle.toggle-yellow.selected.active {background-color: #ff9000;}.toggle.toggle-yellow.selected:focus,.toggle.toggle-yellow.selected.focus {outline: none;}.toggle.toggle-yellow.selected[disabled],.toggle.toggle-yellow.selected.disabled {background-color: #fb3;}.toggle-lg {border-radius: 14px;height: 28px;width: 48px;margin-top: 4px;margin-bottom: 4px;}.toggle-lg::after {border-radius: 10px;height: 20px;left: 4px;top: 4px;width: 20px;}.toggle-lg .icon,.momentum-body .toggle-lg .icon {height: 16px;width: 16px;left: 26px;top: 6px;}.toggle-lg.selected::after {left: 24px;}.toggle-lg.selected .icon,.momentum-body .toggle-lg.selected .icon {left: 6px;}.toggle-sm {border-radius: 8px;height: 16px;width: 32px;margin-top: 2.5px;margin-bottom: 2.5px;}.toggle-sm::after {border-radius: 6px;height: 12px;left: 2px;top: 2px;width: 12px;}.toggle-sm .icon,.momentum-body .toggle-sm .icon {height: 9px;width: 9px;left: 19.5px;top: 3.5px;}.toggle-sm.selected::after {left: 18px;}.toggle-sm.selected .icon,.momentum-body .toggle-sm.selected .icon {left: 3.5px;}.text-h1 {font-size: 40px;font-weight: bold;line-height: 48px;}.text-h2 {font-size: 32px;font-weight: bold;line-height: 40px;}.text-h3 {font-size: 24px;font-weight: bold;line-height: 36px;}.text-h3_5 {font-size: 20px;font-weight: bold;line-height: 24px;}.text-h4 {font-size: 16px;font-weight: bold;line-height: 24px;}.text-h5 {font-size: 14px;font-weight: bold;line-height: 21px;}.text-base {font-size: 16px;font-weight: normal;line-height: 24px;}.text-small {font-size: 14px;font-weight: normal;line-height: 21px;}.text-caption {font-size: 12px;font-weight: normal;line-height: 18px;}.font-size-h1 {font-size: 40px;}.font-size-h2 {font-size: 32px;}.font-size-h3 {font-size: 24px;}.font-size-h3_5 {font-size: 20px;}.font-size-h4 {font-size: 16px;}.font-size-base {font-size: 16px;}.font-size-small {font-size: 14px;}.font-size-caption {font-size: 12px;}.line-height-h1 {line-height: 48px;}.line-height-h2 {line-height: 40px;}.line-height-h3 {line-height: 36px;}.line-height-h3_5 {line-height: 24px;}.line-height-h4 {line-height: 24px;}.line-height-base {line-height: 24px;}.line-height-small {line-height: 21px;}.line-height-caption {line-height: 18px;}.text-color-heading {color: #222326;}.text-color-body {color: #222326;}.text-muted {color: #555659;}.text-positive {color: #19a654;}.text-muted-positive {color: #61d086;}.text-negative {color: #d94141;}.text-muted-negative {color: #f99;}.upload {align-items: center;background-color: #fff;border: 2px #d7d7d9;border-style: dashed;color: #969799;cursor: pointer;display: flex;flex-direction: column;justify-content: center;padding: 8px;position: relative;}.upload:hover,.upload.hover {background-color: #f3faff;}.upload .upload-file {cursor: pointer;height: 100%;opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);position: absolute;width: 100%;}.upload > .remove::after {align-items: center;background-color: #555659;border-radius: 50%;color: #fff;content: "✕";display: flex;font-size: 12px;height: 18px;justify-content: center;line-height: 12px;position: absolute;right: 12px;top: 12px;width: 18px;}.upload > .remove:hover::after {background-color: #707173;}.upload > .remove:active::after {background-color: #3b3d3f;}.upload-dragging {background-color: #f3faff;}.upload-no-border {border: 0;}.upload-dropping {background-color: #f3faff;border: 2px #0c92f3;border-style: dashed;}.upload-error {border: 2px #d94141;border-style: dashed;}.upload-preview {display: inline-block;line-height: 0;padding: 0;}.upload-icon {color: #d7d7d9;}.upload-icon.icon {margin-left: 0;margin-right: 0;}.animation-rotate-infinite {-webkit-animation: rotate-infinite infinite;-moz-animation: rotate-infinite infinite;-o-animation: rotate-infinite infinite;-ms-animation: rotate-infinite infinite;animation: rotate-infinite infinite;}.animation-fade-in {-webkit-animation: fade-in 1 ease both;-moz-animation: fade-in 1 ease both;-o-animation: fade-in 1 ease both;-ms-animation: fade-in 1 ease both;animation: fade-in 1 ease both;}.animation-fade-out {-webkit-animation: fade-out 1 ease both;-moz-animation: fade-out 1 ease both;-o-animation: fade-out 1 ease both;-ms-animation: fade-out 1 ease both;animation: fade-out 1 ease both;}.animation-ease {-webkit-animation-timing-function: ease;-moz-animation-timing-function: ease;-o-animation-timing-function: ease;-ms-animation-timing-function: ease;animation-timing-function: ease;}.animation-linear {-webkit-animation-timing-function: linear;-moz-animation-timing-function: linear;-o-animation-timing-function: linear;-ms-animation-timing-function: linear;animation-timing-function: linear;}.animation-duration-100ms {-webkit-animation-duration: 100ms;-moz-animation-duration: 100ms;-o-animation-duration: 100ms;-ms-animation-duration: 100ms;animation-duration: 100ms;}.animation-duration-200ms {-webkit-animation-duration: 200ms;-moz-animation-duration: 200ms;-o-animation-duration: 200ms;-ms-animation-duration: 200ms;animation-duration: 200ms;}.animation-duration-300ms {-webkit-animation-duration: 300ms;-moz-animation-duration: 300ms;-o-animation-duration: 300ms;-ms-animation-duration: 300ms;animation-duration: 300ms;}.animation-duration-400ms {-webkit-animation-duration: 400ms;-moz-animation-duration: 400ms;-o-animation-duration: 400ms;-ms-animation-duration: 400ms;animation-duration: 400ms;}.animation-duration-500ms {-webkit-animation-duration: 500ms;-moz-animation-duration: 500ms;-o-animation-duration: 500ms;-ms-animation-duration: 500ms;animation-duration: 500ms;}.animation-duration-1000ms {-webkit-animation-duration: 1000ms;-moz-animation-duration: 1000ms;-o-animation-duration: 1000ms;-ms-animation-duration: 1000ms;animation-duration: 1000ms;}.animation-duration-2000ms {-webkit-animation-duration: 2000ms;-moz-animation-duration: 2000ms;-o-animation-duration: 2000ms;-ms-animation-duration: 2000ms;animation-duration: 2000ms;}.animation-count-1 {-webkit-animation-iteration-count: 1;-moz-animation-iteration-count: 1;-o-animation-iteration-count: 1;-ms-animation-iteration-count: 1;animation-iteration-count: 1;}.animation-count-infinite {-webkit-animation-iteration-count: infinite;-moz-animation-iteration-count: infinite;-o-animation-iteration-count: infinite;-ms-animation-iteration-count: infinite;animation-iteration-count: infinite;}.animation-direction-normal {-webkit-animation-direction: normal;-moz-animation-direction: normal;-o-animation-direction: normal;-ms-animation-direction: normal;animation-direction: normal;}.animation-direction-reverse {-webkit-animation-direction: reverse;-moz-animation-direction: reverse;-o-animation-direction: reverse;-ms-animation-direction: reverse;animation-direction: reverse;}@-moz-keyframes rotate-infinite {0% {-webkit-transform: rotate(0);-moz-transform: rotate(0);-o-transform: rotate(0);-ms-transform: rotate(0);transform: rotate(0);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-webkit-keyframes rotate-infinite {0% {-webkit-transform: rotate(0);-moz-transform: rotate(0);-o-transform: rotate(0);-ms-transform: rotate(0);transform: rotate(0);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-o-keyframes rotate-infinite {0% {-webkit-transform: rotate(0);-moz-transform: rotate(0);-o-transform: rotate(0);-ms-transform: rotate(0);transform: rotate(0);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@keyframes rotate-infinite {0% {-webkit-transform: rotate(0);-moz-transform: rotate(0);-o-transform: rotate(0);-ms-transform: rotate(0);transform: rotate(0);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-moz-keyframes fade-in {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-webkit-keyframes fade-in {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-o-keyframes fade-in {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@keyframes fade-in {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-moz-keyframes fade-out {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-webkit-keyframes fade-out {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-o-keyframes fade-out {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@keyframes fade-out {0% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}.border {border: 1px solid #e3e4e6;}.border-top {border-top: 1px solid #e3e4e6;}.border-right {border-right: 1px solid #e3e4e6;}.border-bottom {border-bottom: 1px solid #e3e4e6;}.border-left {border-left: 1px solid #e3e4e6;}.border-width-1 {border-width: 4px;}.border-width-2 {border-width: 8px;}.border-width-3 {border-width: 12px;}.border-width-4 {border-width: 16px;}.border-width-5 {border-width: 20px;}.border-width-6 {border-width: 24px;}.border-width-7 {border-width: 28px;}.border-width-8 {border-width: 32px;}.border-width-9 {border-width: 36px;}.border-width-10 {border-width: 40px;}.border-width-11 {border-width: 44px;}.border-width-12 {border-width: 48px;}.border-width-13 {border-width: 52px;}.border-width-14 {border-width: 56px;}.border-width-15 {border-width: 60px;}.border-width-16 {border-width: 64px;}.border-width-17 {border-width: 68px;}.border-width-18 {border-width: 72px;}.border-width-19 {border-width: 76px;}.border-width-20 {border-width: 80px;}.border-width-21 {border-width: 84px;}.border-width-22 {border-width: 88px;}.border-width-23 {border-width: 92px;}.border-width-24 {border-width: 96px;}.border-width-25 {border-width: 100px;}.border-width-26 {border-width: 104px;}.border-width-27 {border-width: 108px;}.border-width-28 {border-width: 112px;}.border-width-29 {border-width: 116px;}.border-width-30 {border-width: 120px;}.border-none {border: 0;}.border-top-none {border-top: 0;}.border-right-none {border-right: 0;}.border-bottom-none {border-bottom: 0;}.border-left-none {border-left: 0;}.rounded {border-radius: 3px;}.circle {border-radius: 50%;}.rounded-top {border-radius: 3px 3px 0 0;}.rounded-right {border-radius: 0 3px 3px 0;}.rounded-bottom {border-radius: 0 0 3px 3px;}.rounded-left {border-radius: 3px 0 0 3px;}.not-rounded {border-radius: 0;}.dashed {border-style: dashed;}.text-white {color: #fff;}.bg-white {background-color: #fff;}.border-white {border-color: #fff;}.text-black {color: #000;}.bg-black {background-color: #000;}.border-black {border-color: #000;}.text-ghost {color: #f4f7fa;}.bg-ghost {background-color: #f4f7fa;}.border-ghost {border-color: #f4f7fa;}.text-gray {color: #969799;}.bg-gray {background-color: #969799;}.border-gray {border-color: #969799;}.text-blue {color: #0c92f3;}.bg-blue {background-color: #0c92f3;}.border-blue {border-color: #0c92f3;}.text-red {color: #d94141;}.bg-red {background-color: #d94141;}.border-red {border-color: #d94141;}.text-green {color: #39bf71;}.bg-green {background-color: #39bf71;}.border-green {border-color: #39bf71;}.text-yellow {color: #ffa60d;}.bg-yellow {background-color: #ffa60d;}.border-yellow {border-color: #ffa60d;}.text-rose {color: #dc4c7d;}.bg-rose {background-color: #dc4c7d;}.border-rose {border-color: #dc4c7d;}.text-violet {color: #a452cc;}.bg-violet {background-color: #a452cc;}.border-violet {border-color: #a452cc;}.text-turquoise {color: #1cadba;}.bg-turquoise {background-color: #1cadba;}.border-turquoise {border-color: #1cadba;}.text-gray-50 {color: #f9f9f9;}.bg-gray-50 {background-color: #f9f9f9;}.border-gray-50 {border-color: #f9f9f9;}.text-gray-100 {color: #f0f1f2;}.bg-gray-100 {background-color: #f0f1f2;}.border-gray-100 {border-color: #f0f1f2;}.text-gray-200 {color: #e3e4e6;}.bg-gray-200 {background-color: #e3e4e6;}.border-gray-200 {border-color: #e3e4e6;}.text-gray-300 {color: #d7d7d9;}.bg-gray-300 {background-color: #d7d7d9;}.border-gray-300 {border-color: #d7d7d9;}.text-gray-400 {color: #b1b1b3;}.bg-gray-400 {background-color: #b1b1b3;}.border-gray-400 {border-color: #b1b1b3;}.text-gray-500 {color: #969799;}.bg-gray-500 {background-color: #969799;}.border-gray-500 {border-color: #969799;}.text-gray-600 {color: #707173;}.bg-gray-600 {background-color: #707173;}.border-gray-600 {border-color: #707173;}.text-gray-700 {color: #555659;}.bg-gray-700 {background-color: #555659;}.border-gray-700 {border-color: #555659;}.text-gray-800 {color: #3b3d3f;}.bg-gray-800 {background-color: #3b3d3f;}.border-gray-800 {border-color: #3b3d3f;}.text-gray-900 {color: #222326;}.bg-gray-900 {background-color: #222326;}.border-gray-900 {border-color: #222326;}.text-blue-50 {color: #f3faff;}.bg-blue-50 {background-color: #f3faff;}.border-blue-50 {border-color: #f3faff;}.text-red-50 {color: #fff7f7;}.bg-red-50 {background-color: #fff7f7;}.border-red-50 {border-color: #fff7f7;}.text-green-50 {color: #e1fae5;}.bg-green-50 {background-color: #e1fae5;}.border-green-50 {border-color: #e1fae5;}.text-yellow-50 {color: #fff6e5;}.bg-yellow-50 {background-color: #fff6e5;}.border-yellow-50 {border-color: #fff6e5;}.text-blue-100 {color: #e1f3ff;}.bg-blue-100 {background-color: #e1f3ff;}.border-blue-100 {border-color: #e1f3ff;}.text-red-100 {color: #ffe6e6;}.bg-red-100 {background-color: #ffe6e6;}.border-red-100 {border-color: #ffe6e6;}.text-green-100 {color: #d4f5c4;}.bg-green-100 {background-color: #d4f5c4;}.border-green-100 {border-color: #d4f5c4;}.text-yellow-100 {color: #fec;}.bg-yellow-100 {background-color: #fec;}.border-yellow-100 {border-color: #fec;}.text-blue-200 {color: #bfe5ff;}.bg-blue-200 {background-color: #bfe5ff;}.border-blue-200 {border-color: #bfe5ff;}.text-red-200 {color: #ffbfbf;}.bg-red-200 {background-color: #ffbfbf;}.border-red-200 {border-color: #ffbfbf;}.text-green-200 {color: #b4f0a8;}.bg-green-200 {background-color: #b4f0a8;}.border-green-200 {border-color: #b4f0a8;}.text-yellow-200 {color: #ffe5b2;}.bg-yellow-200 {background-color: #ffe5b2;}.border-yellow-200 {border-color: #ffe5b2;}.text-blue-300 {color: #a6daff;}.bg-blue-300 {background-color: #a6daff;}.border-blue-300 {border-color: #a6daff;}.text-red-300 {color: #f99;}.bg-red-300 {background-color: #f99;}.border-red-300 {border-color: #f99;}.text-green-300 {color: #8ae58a;}.bg-green-300 {background-color: #8ae58a;}.border-green-300 {border-color: #8ae58a;}.text-yellow-300 {color: #ffdf88;}.bg-yellow-300 {background-color: #ffdf88;}.border-yellow-300 {border-color: #ffdf88;}.text-blue-400 {color: #4cb5ff;}.bg-blue-400 {background-color: #4cb5ff;}.border-blue-400 {border-color: #4cb5ff;}.text-red-400 {color: #f26161;}.bg-red-400 {background-color: #f26161;}.border-red-400 {border-color: #f26161;}.text-green-400 {color: #61d086;}.bg-green-400 {background-color: #61d086;}.border-green-400 {border-color: #61d086;}.text-yellow-400 {color: #fb3;}.bg-yellow-400 {background-color: #fb3;}.border-yellow-400 {border-color: #fb3;}.text-blue-500 {color: #0c92f3;}.bg-blue-500 {background-color: #0c92f3;}.border-blue-500 {border-color: #0c92f3;}.text-red-500 {color: #d94141;}.bg-red-500 {background-color: #d94141;}.border-red-500 {border-color: #d94141;}.text-green-500 {color: #39bf71;}.bg-green-500 {background-color: #39bf71;}.border-green-500 {border-color: #39bf71;}.text-yellow-500 {color: #ffa60d;}.bg-yellow-500 {background-color: #ffa60d;}.border-yellow-500 {border-color: #ffa60d;}.text-blue-600 {color: #007fd9;}.bg-blue-600 {background-color: #007fd9;}.border-blue-600 {border-color: #007fd9;}.text-red-600 {color: #bf3939;}.bg-red-600 {background-color: #bf3939;}.border-red-600 {border-color: #bf3939;}.text-green-600 {color: #19a654;}.bg-green-600 {background-color: #19a654;}.border-green-600 {border-color: #19a654;}.text-yellow-600 {color: #ff9000;}.bg-yellow-600 {background-color: #ff9000;}.border-yellow-600 {border-color: #ff9000;}.text-blue-700 {color: #0068b3;}.bg-blue-700 {background-color: #0068b3;}.border-blue-700 {border-color: #0068b3;}.text-red-700 {color: #a62929;}.bg-red-700 {background-color: #a62929;}.border-red-700 {border-color: #a62929;}.text-green-700 {color: #0e8c42;}.bg-green-700 {background-color: #0e8c42;}.border-green-700 {border-color: #0e8c42;}.text-yellow-700 {color: #e67600;}.bg-yellow-700 {background-color: #e67600;}.border-yellow-700 {border-color: #e67600;}.text-turquoise-50 {color: #f0fbfc;}.bg-turquoise-50 {background-color: #f0fbfc;}.border-turquoise-50 {border-color: #f0fbfc;}.text-turquoise-100 {color: #d9f7fa;}.bg-turquoise-100 {background-color: #d9f7fa;}.border-turquoise-100 {border-color: #d9f7fa;}.text-turquoise-200 {color: #b8f0f5;}.bg-turquoise-200 {background-color: #b8f0f5;}.border-turquoise-200 {border-color: #b8f0f5;}.text-turquoise-300 {color: #91eaf2;}.bg-turquoise-300 {background-color: #91eaf2;}.border-turquoise-300 {border-color: #91eaf2;}.text-turquoise-400 {color: #33c0cd;}.bg-turquoise-400 {background-color: #33c0cd;}.border-turquoise-400 {border-color: #33c0cd;}.text-turquoise-500 {color: #1cadba;}.bg-turquoise-500 {background-color: #1cadba;}.border-turquoise-500 {border-color: #1cadba;}.text-turquoise-600 {color: #0097a6;}.bg-turquoise-600 {background-color: #0097a6;}.border-turquoise-600 {border-color: #0097a6;}.text-turquoise-700 {color: #007580;}.bg-turquoise-700 {background-color: #007580;}.border-turquoise-700 {border-color: #007580;}.text-turquoise-800 {color: #005e66;}.bg-turquoise-800 {background-color: #005e66;}.border-turquoise-800 {border-color: #005e66;}.text-turquoise-900 {color: #00464d;}.bg-turquoise-900 {background-color: #00464d;}.border-turquoise-900 {border-color: #00464d;}.text-violet-50 {color: #f8ebff;}.bg-violet-50 {background-color: #f8ebff;}.border-violet-50 {border-color: #f8ebff;}.text-violet-100 {color: #f5e0ff;}.bg-violet-100 {background-color: #f5e0ff;}.border-violet-100 {border-color: #f5e0ff;}.text-violet-200 {color: #ebc4ff;}.bg-violet-200 {background-color: #ebc4ff;}.border-violet-200 {border-color: #ebc4ff;}.text-violet-300 {color: #dea2fc;}.bg-violet-300 {background-color: #dea2fc;}.border-violet-300 {border-color: #dea2fc;}.text-violet-400 {color: #bf75e3;}.bg-violet-400 {background-color: #bf75e3;}.border-violet-400 {border-color: #bf75e3;}.text-violet-500 {color: #a452cc;}.bg-violet-500 {background-color: #a452cc;}.border-violet-500 {border-color: #a452cc;}.text-violet-600 {color: #9c2bd4;}.bg-violet-600 {background-color: #9c2bd4;}.border-violet-600 {border-color: #9c2bd4;}.text-violet-700 {color: #801bb2;}.bg-violet-700 {background-color: #801bb2;}.border-violet-700 {border-color: #801bb2;}.text-violet-800 {color: #620e8c;}.bg-violet-800 {background-color: #620e8c;}.border-violet-800 {border-color: #620e8c;}.text-violet-900 {color: #521173;}.bg-violet-900 {background-color: #521173;}.border-violet-900 {border-color: #521173;}.bg-transparent {background: transparent;}.cursor-pointer {cursor: pointer;}.cursor-text {cursor: text;}.cursor-default {cursor: default;}.cursor-inherit {cursor: inherit;}.flex {display: flex;}.flex-column {flex-direction: column;}.flex-row {flex-direction: row;}.flex-row-reverse {flex-direction: row-reverse;}.flex-column-reverse {flex-direction: column-reverse;}.flex-wrap {flex-wrap: wrap;}.flex-nowrap {flex-wrap: nowrap;}.flex-grow {flex: 1 0 auto;}.flex-shrink {flex: 0 1 auto;}.flex-auto {flex: 1 1 auto;min-height: 0;min-width: 0;}.flex-none {flex: none;}.items-start {align-items: flex-start;}.items-end {align-items: flex-end;}.items-center {align-items: center;}.items-baseline {align-items: baseline;}.items-stretch {align-items: stretch;}.self-start {align-self: flex-start;}.self-end {align-self: flex-end;}.self-center {align-self: center;}.self-baseline {align-self: baseline;}.self-stretch {align-self: stretch;}.justify-start {justify-content: flex-start;}.justify-end {justify-content: flex-end;}.justify-center {justify-content: center;}.justify-between {justify-content: space-between;}.justify-around {justify-content: space-around;}.justify-evenly {justify-content: space-evenly;}.content-start {align-content: flex-start;}.content-end {align-content: flex-end;}.content-center {align-content: center;}.content-between {align-content: space-between;}.content-around {align-content: space-around;}.content-stretch {align-content: stretch;}.order-0 {order: 0;}.order-1 {order: 1;}.order-2 {order: 2;}.order-3 {order: 3;}.order-last {order: 99999;}.icon-size-base {height: 16px;width: 16px;}.icon-size-caption,.momentum-body .icon-size-caption {height: 12px;width: 12px;}.identicon-size,.momentum-body .identicon-size {height: 24px;width: 24px;line-height: 24px;}.display-none {display: none;}.display-inline,.inline {display: inline;}.display-block,.block {display: block;}.display-inline-block,.inline-block {display: inline-block;}.display-table,.table {display: table;}.display-table-cell,.table-cell {display: table-cell;}.visibility-hidden {visibility: hidden;}.overflow-hidden {overflow: hidden;}.overflow-scroll {overflow: scroll;}.overflow-auto {overflow: auto;}.overflow-visible {overflow: visible;}.float-left {float: left;}.float-right {float: right;}.fit-width {max-width: 100%;}.bulleted-list {margin-left: 16px;list-style-type: circle;}.bulleted-list li {margin-bottom: 8px;}.m0 {margin: 0;}.mt0 {margin-top: 0;}.mr0 {margin-right: 0;}.mb0 {margin-bottom: 0;}.ml0 {margin-left: 0;}.mx0 {margin-left: 0;margin-right: 0;}.my0 {margin-bottom: 0;margin-top: 0;}.m0_5 {margin: 4px;}.mt0_5 {margin-top: 4px;}.mr0_5 {margin-right: 4px;}.mb0_5 {margin-bottom: 4px;}.ml0_5 {margin-left: 4px;}.mx0_5 {margin-left: 4px;margin-right: 4px;}.my0_5 {margin-bottom: 4px;margin-top: 4px;}.m1 {margin: 8px;}.mt1 {margin-top: 8px;}.mr1 {margin-right: 8px;}.mb1 {margin-bottom: 8px;}.ml1 {margin-left: 8px;}.mx1 {margin-left: 8px;margin-right: 8px;}.my1 {margin-bottom: 8px;margin-top: 8px;}.m1_5 {margin: 12px;}.mt1_5 {margin-top: 12px;}.mr1_5 {margin-right: 12px;}.mb1_5 {margin-bottom: 12px;}.ml1_5 {margin-left: 12px;}.mx1_5 {margin-left: 12px;margin-right: 12px;}.my1_5 {margin-bottom: 12px;margin-top: 12px;}.m2 {margin: 16px;}.mt2 {margin-top: 16px;}.mr2 {margin-right: 16px;}.mb2 {margin-bottom: 16px;}.ml2 {margin-left: 16px;}.mx2 {margin-left: 16px;margin-right: 16px;}.my2 {margin-bottom: 16px;margin-top: 16px;}.m3 {margin: 24px;}.mt3 {margin-top: 24px;}.mr3 {margin-right: 24px;}.mb3 {margin-bottom: 24px;}.ml3 {margin-left: 24px;}.mx3 {margin-left: 24px;margin-right: 24px;}.my3 {margin-bottom: 24px;margin-top: 24px;}.m4 {margin: 32px;}.mt4 {margin-top: 32px;}.mr4 {margin-right: 32px;}.mb4 {margin-bottom: 32px;}.ml4 {margin-left: 32px;}.mx4 {margin-left: 32px;margin-right: 32px;}.my4 {margin-bottom: 32px;margin-top: 32px;}.m5 {margin: 40px;}.mt5 {margin-top: 40px;}.mr5 {margin-right: 40px;}.mb5 {margin-bottom: 40px;}.ml5 {margin-left: 40px;}.mx5 {margin-left: 40px;margin-right: 40px;}.my5 {margin-bottom: 40px;margin-top: 40px;}.m10 {margin: 80px;}.mt10 {margin-top: 80px;}.mr10 {margin-right: 80px;}.mb10 {margin-bottom: 80px;}.ml10 {margin-left: 80px;}.mx10 {margin-left: 80px;margin-right: 80px;}.my10 {margin-bottom: 80px;margin-top: 80px;}.mn1 {margin: -8px;}.mtn1 {margin-top: -8px;}.mrn1 {margin-right: -8px;}.mbn1 {margin-bottom: -8px;}.mln1 {margin-left: -8px;}.mxn1 {margin-left: -8px;margin-right: -8px;}.myn1 {margin-bottom: -8px;margin-top: -8px;}.mxn2 {margin-left: -16px;margin-right: -16px;}.mxn3 {margin-left: -24px;margin-right: -24px;}.mxn4 {margin-left: -32px;margin-right: -32px;}.mt-auto {margin-top: auto;}.mb-auto {margin-bottom: auto;}.my-auto {margin-top: auto;margin-bottom: auto;}.ml-auto {margin-left: auto;}.mr-auto {margin-right: auto;}.mx-auto {margin-left: auto;margin-right: auto;}.opacity-0 {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}.opacity-0_1 {opacity: 0.1;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=10)";filter: alpha(opacity=10);}.opacity-0_2 {opacity: 0.2;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";filter: alpha(opacity=20);}.opacity-0_3 {opacity: 0.3;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";filter: alpha(opacity=30);}.opacity-0_4 {opacity: 0.4;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";filter: alpha(opacity=40);}.opacity-0_5 {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.opacity-0_6 {opacity: 0.6;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=60)";filter: alpha(opacity=60);}.opacity-0_7 {opacity: 0.7;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";filter: alpha(opacity=70);}.opacity-0_8 {opacity: 0.8;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";filter: alpha(opacity=80);}.opacity-0_9 {opacity: 0.9;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";filter: alpha(opacity=90);}.opacity-1 {opacity: 1;-ms-filter: none;filter: none;}.outline-none {outline: 0;}.p0 {padding: 0;}.pt0 {padding-top: 0;}.pr0 {padding-right: 0;}.pb0 {padding-bottom: 0;}.pl0 {padding-left: 0;}.px0 {padding-left: 0;padding-right: 0;}.py0 {padding-bottom: 0;padding-top: 0;}.p0_5 {padding: 4px;}.pt0_5 {padding-top: 4px;}.pr0_5 {padding-right: 4px;}.pb0_5 {padding-bottom: 4px;}.pl0_5 {padding-left: 4px;}.px0_5 {padding-left: 4px;padding-right: 4px;}.py0_5 {padding-bottom: 4px;padding-top: 4px;}.p1 {padding: 8px;}.pt1 {padding-top: 8px;}.pr1 {padding-right: 8px;}.pb1 {padding-bottom: 8px;}.pl1 {padding-left: 8px;}.py1 {padding-bottom: 8px;padding-top: 8px;}.px1 {padding-left: 8px;padding-right: 8px;}.p1_5 {padding: 12px;}.pt1_5 {padding-top: 12px;}.pr1_5 {padding-right: 12px;}.pb1_5 {padding-bottom: 12px;}.pl1_5 {padding-left: 12px;}.px1_5 {padding-left: 12px;padding-right: 12px;}.py1_5 {padding-bottom: 12px;padding-top: 12px;}.p2 {padding: 16px;}.pt2 {padding-top: 16px;}.pr2 {padding-right: 16px;}.pb2 {padding-bottom: 16px;}.pl2 {padding-left: 16px;}.py2 {padding-bottom: 16px;padding-top: 16px;}.px2 {padding-left: 16px;padding-right: 16px;}.p3 {padding: 24px;}.pt3 {padding-top: 24px;}.pr3 {padding-right: 24px;}.pb3 {padding-bottom: 24px;}.pl3 {padding-left: 24px;}.py3 {padding-bottom: 24px;padding-top: 24px;}.px3 {padding-left: 24px;padding-right: 24px;}.p4 {padding: 32px;}.pt4 {padding-top: 32px;}.pr4 {padding-right: 32px;}.pb4 {padding-bottom: 32px;}.pl4 {padding-left: 32px;}.py4 {padding-bottom: 32px;padding-top: 32px;}.px4 {padding-left: 32px;padding-right: 32px;}.p5 {padding: 40px;}.pt5 {padding-top: 40px;}.pr5 {padding-right: 40px;}.pb5 {padding-bottom: 40px;}.pl5 {padding-left: 40px;}.py5 {padding-bottom: 40px;padding-top: 40px;}.px5 {padding-left: 40px;padding-right: 40px;}.p10 {padding: 80px;}.pt10 {padding-top: 80px;}.pr10 {padding-right: 80px;}.pb10 {padding-bottom: 80px;}.pl10 {padding-left: 80px;}.py10 {padding-bottom: 80px;padding-top: 80px;}.px10 {padding-left: 80px;padding-right: 80px;}.pointer-events-none {pointer-events: none;}.relative {position: relative;}.absolute {position: absolute;}.sticky {position: sticky;}.top-0 {top: 0;}.right-0 {right: 0;}.bottom-0 {bottom: 0;}.left-0 {left: 0;}.height-full {height: 100%;}.width-full {width: 100%;}.max-width-full {max-width: 100%;}.width-0 {width: 0;}.height-0 {height: 0;}.width-auto {width: auto;}.min-width-1 {min-width: 8px;}.min-height-1 {min-height: 8px;}.max-width-1 {max-width: 8px;}.max-height-1 {max-height: 8px;}.min-width-2 {min-width: 16px;}.min-height-2 {min-height: 16px;}.max-width-2 {max-width: 16px;}.max-height-2 {max-height: 16px;}.min-width-3 {min-width: 24px;}.min-height-3 {min-height: 24px;}.max-width-3 {max-width: 24px;}.max-height-3 {max-height: 24px;}.min-width-4 {min-width: 32px;}.min-height-4 {min-height: 32px;}.max-width-4 {max-width: 32px;}.max-height-4 {max-height: 32px;}.min-width-5 {min-width: 40px;}.min-height-5 {min-height: 40px;}.max-width-5 {max-width: 40px;}.max-height-5 {max-height: 40px;}.min-width-6 {min-width: 48px;}.min-height-6 {min-height: 48px;}.max-width-6 {max-width: 48px;}.max-height-6 {max-height: 48px;}.min-width-7 {min-width: 56px;}.min-height-7 {min-height: 56px;}.max-width-7 {max-width: 56px;}.max-height-7 {max-height: 56px;}.min-width-8 {min-width: 64px;}.min-height-8 {min-height: 64px;}.max-width-8 {max-width: 64px;}.max-height-8 {max-height: 64px;}.min-width-9 {min-width: 72px;}.min-height-9 {min-height: 72px;}.max-width-9 {max-width: 72px;}.max-height-9 {max-height: 72px;}.min-width-10 {min-width: 80px;}.min-height-10 {min-height: 80px;}.max-width-10 {max-width: 80px;}.max-height-10 {max-height: 80px;}.min-width-11 {min-width: 88px;}.min-height-11 {min-height: 88px;}.max-width-11 {max-width: 88px;}.max-height-11 {max-height: 88px;}.min-width-12 {min-width: 96px;}.min-height-12 {min-height: 96px;}.max-width-12 {max-width: 96px;}.max-height-12 {max-height: 96px;}.min-width-13 {min-width: 104px;}.min-height-13 {min-height: 104px;}.max-width-13 {max-width: 104px;}.max-height-13 {max-height: 104px;}.min-width-14 {min-width: 112px;}.min-height-14 {min-height: 112px;}.max-width-14 {max-width: 112px;}.max-height-14 {max-height: 112px;}.min-width-15 {min-width: 120px;}.min-height-15 {min-height: 120px;}.max-width-15 {max-width: 120px;}.max-height-15 {max-height: 120px;}.min-width-16 {min-width: 128px;}.min-height-16 {min-height: 128px;}.max-width-16 {max-width: 128px;}.max-height-16 {max-height: 128px;}.min-width-17 {min-width: 136px;}.min-height-17 {min-height: 136px;}.max-width-17 {max-width: 136px;}.max-height-17 {max-height: 136px;}.min-width-18 {min-width: 144px;}.min-height-18 {min-height: 144px;}.max-width-18 {max-width: 144px;}.max-height-18 {max-height: 144px;}.min-width-19 {min-width: 152px;}.min-height-19 {min-height: 152px;}.max-width-19 {max-width: 152px;}.max-height-19 {max-height: 152px;}.min-width-20 {min-width: 160px;}.min-height-20 {min-height: 160px;}.max-width-20 {max-width: 160px;}.max-height-20 {max-height: 160px;}.min-width-21 {min-width: 168px;}.min-height-21 {min-height: 168px;}.max-width-21 {max-width: 168px;}.max-height-21 {max-height: 168px;}.min-width-22 {min-width: 176px;}.min-height-22 {min-height: 176px;}.max-width-22 {max-width: 176px;}.max-height-22 {max-height: 176px;}.min-width-23 {min-width: 184px;}.min-height-23 {min-height: 184px;}.max-width-23 {max-width: 184px;}.max-height-23 {max-height: 184px;}.min-width-24 {min-width: 192px;}.min-height-24 {min-height: 192px;}.max-width-24 {max-width: 192px;}.max-height-24 {max-height: 192px;}.min-width-25 {min-width: 200px;}.min-height-25 {min-height: 200px;}.max-width-25 {max-width: 200px;}.max-height-25 {max-height: 200px;}.min-width-26 {min-width: 208px;}.min-height-26 {min-height: 208px;}.max-width-26 {max-width: 208px;}.max-height-26 {max-height: 208px;}.min-width-27 {min-width: 216px;}.min-height-27 {min-height: 216px;}.max-width-27 {max-width: 216px;}.max-height-27 {max-height: 216px;}.min-width-28 {min-width: 224px;}.min-height-28 {min-height: 224px;}.max-width-28 {max-width: 224px;}.max-height-28 {max-height: 224px;}.min-width-29 {min-width: 232px;}.min-height-29 {min-height: 232px;}.max-width-29 {max-width: 232px;}.max-height-29 {max-height: 232px;}.min-width-30 {min-width: 240px;}.min-height-30 {min-height: 240px;}.max-width-30 {max-width: 240px;}.max-height-30 {max-height: 240px;}.min-width-40 {min-width: 320px;}.min-height-40 {min-height: 320px;}.max-width-40 {max-width: 320px;}.max-height-40 {max-height: 320px;}.min-width-50 {min-width: 400px;}.min-height-50 {min-height: 400px;}.max-width-50 {max-width: 400px;}.max-height-50 {max-height: 400px;}.min-width-60 {min-width: 480px;}.min-height-60 {min-height: 480px;}.max-width-60 {max-width: 480px;}.max-height-60 {max-height: 480px;}.min-width-70 {min-width: 560px;}.min-height-70 {min-height: 560px;}.max-width-70 {max-width: 560px;}.max-height-70 {max-height: 560px;}.min-width-80 {min-width: 640px;}.min-height-80 {min-height: 640px;}.max-width-80 {max-width: 640px;}.max-height-80 {max-height: 640px;}.min-width-90 {min-width: 720px;}.min-height-90 {min-height: 720px;}.max-width-90 {max-width: 720px;}.max-height-90 {max-height: 720px;}.min-width-100 {min-width: 800px;}.min-height-100 {min-height: 800px;}.max-width-100 {max-width: 800px;}.max-height-100 {max-height: 800px;}.min-width-110 {min-width: 880px;}.min-height-110 {min-height: 880px;}.max-width-110 {max-width: 880px;}.max-height-110 {max-height: 880px;}.min-width-120 {min-width: 960px;}.min-height-120 {min-height: 960px;}.max-width-120 {max-width: 960px;}.max-height-120 {max-height: 960px;}.min-width-36 {min-width: 288px;}.max-height-51 {max-height: 408px;}.valign-baseline {vertical-align: baseline;}.valign-text-top {vertical-align: text-top;}.valign-top {vertical-align: top;}.valign-middle {vertical-align: middle;}.valign-bottom {vertical-align: bottom;}.font-family-inherit {font-family: inherit;}.font-size-inherit {font-size: inherit;}.text-decoration-none {text-decoration: none;}.bold {font-weight: bold;}.regular {font-weight: normal;}.italic {font-style: italic;}.strikethrough {text-decoration: line-through;}.underline {text-decoration: underline;}.caps {text-transform: uppercase;letter-spacing: 1px;}.lowercase {text-transform: lowercase;}.capitalize {text-transform: capitalize;}.align-left {text-align: left;}.align-center {text-align: center;}.align-right {text-align: right;}.align-justify {text-align: justify;}.nowrap {white-space: nowrap;}.break-word {word-wrap: break-word;}.line-height-1 {line-height: 24px;}.line-height-2 {line-height: 48px;}.line-height-3 {line-height: 72px;}.line-height-4 {line-height: 96px;}.list-style-none {list-style: none;}.ellipsis {overflow: hidden;-o-text-overflow: ellipsis;text-overflow: ellipsis;white-space: nowrap;}.list-reset {list-style: none;padding-left: 0;}.text-overflow-initial {-o-text-overflow: initial;text-overflow: initial;}.transition-property-all {-webkit-transition-property: all;-moz-transition-property: all;-o-transition-property: all;-ms-transition-property: all;transition-property: all;}.transition-property-opacity {-webkit-transition-property: opacity;-moz-transition-property: opacity;-o-transition-property: opacity;-ms-transition-property: opacity;transition-property: opacity;}.transition-duration-sec1 {-webkit-transition-duration: 1s;-moz-transition-duration: 1s;-o-transition-duration: 1s;-ms-transition-duration: 1s;transition-duration: 1s;}.transition-duration-sec1_5 {-webkit-transition-duration: 1.5s;-moz-transition-duration: 1.5s;-o-transition-duration: 1.5s;-ms-transition-duration: 1.5s;transition-duration: 1.5s;}.transition-duration-sec2 {-webkit-transition-duration: 2s;-moz-transition-duration: 2s;-o-transition-duration: 2s;-ms-transition-duration: 2s;transition-duration: 2s;}.transition-duration-sec2_5 {-webkit-transition-duration: 2.5s;-moz-transition-duration: 2.5s;-o-transition-duration: 2.5s;-ms-transition-duration: 2.5s;transition-duration: 2.5s;}.transition-duration-sec3 {-webkit-transition-duration: 3s;-moz-transition-duration: 3s;-o-transition-duration: 3s;-ms-transition-duration: 3s;transition-duration: 3s;}.transition-duration-sec3_5 {-webkit-transition-duration: 3.5s;-moz-transition-duration: 3.5s;-o-transition-duration: 3.5s;-ms-transition-duration: 3.5s;transition-duration: 3.5s;}.transition-duration-sec4 {-webkit-transition-duration: 4s;-moz-transition-duration: 4s;-o-transition-duration: 4s;-ms-transition-duration: 4s;transition-duration: 4s;}.transition-duration-sec4_5 {-webkit-transition-duration: 4.5s;-moz-transition-duration: 4.5s;-o-transition-duration: 4.5s;-ms-transition-duration: 4.5s;transition-duration: 4.5s;}.transition-duration-sec5 {-webkit-transition-duration: 5s;-moz-transition-duration: 5s;-o-transition-duration: 5s;-ms-transition-duration: 5s;transition-duration: 5s;}.transition-duration-sec6 {-webkit-transition-duration: 6s;-moz-transition-duration: 6s;-o-transition-duration: 6s;-ms-transition-duration: 6s;transition-duration: 6s;}.transition-duration-sec7 {-webkit-transition-duration: 7s;-moz-transition-duration: 7s;-o-transition-duration: 7s;-ms-transition-duration: 7s;transition-duration: 7s;}.transition-duration-sec8 {-webkit-transition-duration: 8s;-moz-transition-duration: 8s;-o-transition-duration: 8s;-ms-transition-duration: 8s;transition-duration: 8s;}.transition-duration-sec9 {-webkit-transition-duration: 9s;-moz-transition-duration: 9s;-o-transition-duration: 9s;-ms-transition-duration: 9s;transition-duration: 9s;}.transition-duration-sec10 {-webkit-transition-duration: 10s;-moz-transition-duration: 10s;-o-transition-duration: 10s;-ms-transition-duration: 10s;transition-duration: 10s;}.transition-duration-ms100 {-webkit-transition-duration: 100ms;-moz-transition-duration: 100ms;-o-transition-duration: 100ms;-ms-transition-duration: 100ms;transition-duration: 100ms;}.transition-duration-ms200 {-webkit-transition-duration: 200ms;-moz-transition-duration: 200ms;-o-transition-duration: 200ms;-ms-transition-duration: 200ms;transition-duration: 200ms;}.transition-duration-ms300 {-webkit-transition-duration: 300ms;-moz-transition-duration: 300ms;-o-transition-duration: 300ms;-ms-transition-duration: 300ms;transition-duration: 300ms;}.transition-duration-ms400 {-webkit-transition-duration: 400ms;-moz-transition-duration: 400ms;-o-transition-duration: 400ms;-ms-transition-duration: 400ms;transition-duration: 400ms;}.transition-duration-ms500 {-webkit-transition-duration: 500ms;-moz-transition-duration: 500ms;-o-transition-duration: 500ms;-ms-transition-duration: 500ms;transition-duration: 500ms;}.transition-duration-ms600 {-webkit-transition-duration: 600ms;-moz-transition-duration: 600ms;-o-transition-duration: 600ms;-ms-transition-duration: 600ms;transition-duration: 600ms;}.transition-duration-ms700 {-webkit-transition-duration: 700ms;-moz-transition-duration: 700ms;-o-transition-duration: 700ms;-ms-transition-duration: 700ms;transition-duration: 700ms;}.transition-duration-ms800 {-webkit-transition-duration: 800ms;-moz-transition-duration: 800ms;-o-transition-duration: 800ms;-ms-transition-duration: 800ms;transition-duration: 800ms;}.transition-duration-ms900 {-webkit-transition-duration: 900ms;-moz-transition-duration: 900ms;-o-transition-duration: 900ms;-ms-transition-duration: 900ms;transition-duration: 900ms;}.transition-tf-ease {-webkit-transition-timing-function: ease;-moz-transition-timing-function: ease;-o-transition-timing-function: ease;-ms-transition-timing-function: ease;transition-timing-function: ease;}.transition-tf-linear {-webkit-transition-timing-function: linear;-moz-transition-timing-function: linear;-o-transition-timing-function: linear;-ms-transition-timing-function: linear;transition-timing-function: linear;}.transition-tf-ease-in {-webkit-transition-timing-function: ease-in;-moz-transition-timing-function: ease-in;-o-transition-timing-function: ease-in;-ms-transition-timing-function: ease-in;transition-timing-function: ease-in;}.transition-tf-ease-out {-webkit-transition-timing-function: ease-out;-moz-transition-timing-function: ease-out;-o-transition-timing-function: ease-out;-ms-transition-timing-function: ease-out;transition-timing-function: ease-out;}.transition-tf-ease-in-out {-webkit-transition-timing-function: ease-in-out;-moz-transition-timing-function: ease-in-out;-o-transition-timing-function: ease-in-out;-ms-transition-timing-function: ease-in-out;transition-timing-function: ease-in-out;}.transition-tf-step-start {-webkit-transition-timing-function: step-start;-moz-transition-timing-function: step-start;-o-transition-timing-function: step-start;-ms-transition-timing-function: step-start;transition-timing-function: step-start;}.transition-tf-step-end {-webkit-transition-timing-function: step-end;-moz-transition-timing-function: step-end;-o-transition-timing-function: step-end;-ms-transition-timing-function: step-end;transition-timing-function: step-end;}.transition-delay-sec1 {-webkit-transition-delay: 1s;-moz-transition-delay: 1s;-o-transition-delay: 1s;-ms-transition-delay: 1s;transition-delay: 1s;}.transition-delay-sec1_5 {-webkit-transition-delay: 1.5s;-moz-transition-delay: 1.5s;-o-transition-delay: 1.5s;-ms-transition-delay: 1.5s;transition-delay: 1.5s;}.transition-delay-sec2 {-webkit-transition-delay: 2s;-moz-transition-delay: 2s;-o-transition-delay: 2s;-ms-transition-delay: 2s;transition-delay: 2s;}.transition-delay-sec2_5 {-webkit-transition-delay: 2.5s;-moz-transition-delay: 2.5s;-o-transition-delay: 2.5s;-ms-transition-delay: 2.5s;transition-delay: 2.5s;}.transition-delay-sec3 {-webkit-transition-delay: 3s;-moz-transition-delay: 3s;-o-transition-delay: 3s;-ms-transition-delay: 3s;transition-delay: 3s;}.transition-delay-sec3_5 {-webkit-transition-delay: 3.5s;-moz-transition-delay: 3.5s;-o-transition-delay: 3.5s;-ms-transition-delay: 3.5s;transition-delay: 3.5s;}.transition-delay-sec4 {-webkit-transition-delay: 4s;-moz-transition-delay: 4s;-o-transition-delay: 4s;-ms-transition-delay: 4s;transition-delay: 4s;}.transition-delay-sec4_5 {-webkit-transition-delay: 4.5s;-moz-transition-delay: 4.5s;-o-transition-delay: 4.5s;-ms-transition-delay: 4.5s;transition-delay: 4.5s;}.transition-delay-sec5 {-webkit-transition-delay: 5s;-moz-transition-delay: 5s;-o-transition-delay: 5s;-ms-transition-delay: 5s;transition-delay: 5s;}.transition-delay-sec6 {-webkit-transition-delay: 6s;-moz-transition-delay: 6s;-o-transition-delay: 6s;-ms-transition-delay: 6s;transition-delay: 6s;}.transition-delay-sec7 {-webkit-transition-delay: 7s;-moz-transition-delay: 7s;-o-transition-delay: 7s;-ms-transition-delay: 7s;transition-delay: 7s;}.transition-delay-sec8 {-webkit-transition-delay: 8s;-moz-transition-delay: 8s;-o-transition-delay: 8s;-ms-transition-delay: 8s;transition-delay: 8s;}.transition-delay-sec9 {-webkit-transition-delay: 9s;-moz-transition-delay: 9s;-o-transition-delay: 9s;-ms-transition-delay: 9s;transition-delay: 9s;}.transition-delay-sec10 {-webkit-transition-delay: 10s;-moz-transition-delay: 10s;-o-transition-delay: 10s;-ms-transition-delay: 10s;transition-delay: 10s;}.transition-delay-ms100 {-webkit-transition-delay: 100ms;-moz-transition-delay: 100ms;-o-transition-delay: 100ms;-ms-transition-delay: 100ms;transition-delay: 100ms;}.transition-delay-ms200 {-webkit-transition-delay: 200ms;-moz-transition-delay: 200ms;-o-transition-delay: 200ms;-ms-transition-delay: 200ms;transition-delay: 200ms;}.transition-delay-ms300 {-webkit-transition-delay: 300ms;-moz-transition-delay: 300ms;-o-transition-delay: 300ms;-ms-transition-delay: 300ms;transition-delay: 300ms;}.transition-delay-ms400 {-webkit-transition-delay: 400ms;-moz-transition-delay: 400ms;-o-transition-delay: 400ms;-ms-transition-delay: 400ms;transition-delay: 400ms;}.transition-delay-ms500 {-webkit-transition-delay: 500ms;-moz-transition-delay: 500ms;-o-transition-delay: 500ms;-ms-transition-delay: 500ms;transition-delay: 500ms;}.transition-delay-ms600 {-webkit-transition-delay: 600ms;-moz-transition-delay: 600ms;-o-transition-delay: 600ms;-ms-transition-delay: 600ms;transition-delay: 600ms;}.transition-delay-ms700 {-webkit-transition-delay: 700ms;-moz-transition-delay: 700ms;-o-transition-delay: 700ms;-ms-transition-delay: 700ms;transition-delay: 700ms;}.transition-delay-ms800 {-webkit-transition-delay: 800ms;-moz-transition-delay: 800ms;-o-transition-delay: 800ms;-ms-transition-delay: 800ms;transition-delay: 800ms;}.transition-delay-ms900 {-webkit-transition-delay: 900ms;-moz-transition-delay: 900ms;-o-transition-delay: 900ms;-ms-transition-delay: 900ms;transition-delay: 900ms;}.theme-inverse h1,.theme-inverse h2,.theme-inverse h3,.theme-inverse h4,.theme-inverse h5 {color: #fff;}.theme-inverse a {color: inherit;}.theme-inverse a:hover {color: #a6daff;}.theme-inverse a:active {color: #bfe5ff;}.theme-inverse a.text-muted {color: #b1b1b3;}.theme-inverse hr {background: #555659;}.theme-inverse .mo-identicon {background-color: #555659;color: #fff;}.theme-inverse .menu-row.hover {background: #222326;}.theme-inverse .menu-row.active {color: #fff;background: #222326;}.theme-inverse .menu-row.disabled {opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);}.theme-inverse a.menu-row {color: inherit;}.theme-inverse a.menu-row:hover {background: #222326;}.theme-inverse a.menu-row:active {color: #fff;background: #222326;}.theme-inverse .menu-divider {border-color: #555659;}.theme-inverse .text-color-heading {color: #fff;}.theme-inverse .text-color-body {color: #d7d7d9;}.theme-inverse .text-muted {color: #b1b1b3;}.theme-inverse .text-positive {color: #8ae58a;}.theme-inverse .text-muted-positive {color: #39bf71;}.theme-inverse .text-negative {color: #f99;}.theme-inverse .text-muted-negative {color: #f26161;}.theme-inverse .nav-link,.momentum-body .theme-inverse .nav-link {color: #b1b1b3;}.theme-inverse .nav-link:hover,.momentum-body .theme-inverse .nav-link:hover {color: #a6daff;}.theme-inverse .nav-link:active,.momentum-body .theme-inverse .nav-link:active {color: #bfe5ff;}.theme-inverse a.tab-link,.momentum-body .theme-inverse a.tab-link {color: #d7d7d9;}.theme-inverse a.tab-link:hover,.momentum-body .theme-inverse a.tab-link:hover {border-bottom-color: #969799;color: #fff;}.theme-inverse a.tab-link:active,.momentum-body .theme-inverse a.tab-link:active {border-bottom-color: #d7d7d9;color: #d7d7d9;}.theme-inverse a.tab-link.selected,.momentum-body .theme-inverse a.tab-link.selected {color: #fff;}.theme-inverse .list-row {border-bottom: 1px solid #555659;border-top: 1px solid #555659;}.theme-inverse .upload {background-color: #3b3d3f;border-color: #555659;color: #969799;}.theme-inverse .upload:hover,.theme-inverse .upload.hover {background-color: #707173;}.theme-inverse .border {border-color: #555659;}.theme-inverse .border-top {border-top-color: #555659;}.theme-inverse .border-right {border-right-color: #555659;}.theme-inverse .border-bottom {border-bottom-color: #555659;}.theme-inverse .border-left {border-left-color: #555659;}@media (max-width: 575px) {.display-none-xs {display: none;}.display-inline-xs,.inline-xs {display: inline;}.display-block-cx,.block-xs {display: block;}.display-inline-block-xs,.inline-block-xs {display: inline-block;}.display-table-xs,.table-xs {display: table;}.display-table-cell-xs,.table-cell-xs {display: table-cell;}.display-flex-xs,.flex-xs {display: flex;}}@media (min-width: 576px) {.container,.container-sm {max-width: 540px;width: auto;}.col-sm {flex: 1 1 0%;min-width: 0;width: 100%;}.col-sm-auto {flex: 0 0 auto;width: auto;}.col-sm-1 {flex: 0 0 8.333333333333334%;max-width: 8.333333333333334%;}.col-sm-2 {flex: 0 0 16.666666666666668%;max-width: 16.666666666666668%;}.col-sm-3 {flex: 0 0 25%;max-width: 25%;}.col-sm-4 {flex: 0 0 33.333333333333336%;max-width: 33.333333333333336%;}.col-sm-5 {flex: 0 0 41.666666666666664%;max-width: 41.666666666666664%;}.col-sm-6 {flex: 0 0 50%;max-width: 50%;}.col-sm-7 {flex: 0 0 58.333333333333336%;max-width: 58.333333333333336%;}.col-sm-8 {flex: 0 0 66.66666666666667%;max-width: 66.66666666666667%;}.col-sm-9 {flex: 0 0 75%;max-width: 75%;}.col-sm-10 {flex: 0 0 83.33333333333333%;max-width: 83.33333333333333%;}.col-sm-11 {flex: 0 0 91.66666666666667%;max-width: 91.66666666666667%;}.col-sm-12 {flex: 0 0 100%;max-width: 100%;}.display-none-sm {display: none;}.display-inline-sm {display: inline;}.display-block-sm {display: block;}.display-inline-block-sm {display: inline-block;}.display-table-sm {display: table;}.display-table-cell-sm {display: table-cell;}.display-flex-sm {display: flex;}}@media (min-width: 768px) {.container,.container-sm,.container-md {max-width: 720px;width: auto;}.col-md {flex: 1 1 0%;min-width: 0;width: 100%;}.col-md-auto {flex: 0 0 auto;width: auto;}.col-md-1 {flex: 0 0 8.333333333333334%;max-width: 8.333333333333334%;}.col-md-2 {flex: 0 0 16.666666666666668%;max-width: 16.666666666666668%;}.col-md-3 {flex: 0 0 25%;max-width: 25%;}.col-md-4 {flex: 0 0 33.333333333333336%;max-width: 33.333333333333336%;}.col-md-5 {flex: 0 0 41.666666666666664%;max-width: 41.666666666666664%;}.col-md-6 {flex: 0 0 50%;max-width: 50%;}.col-md-7 {flex: 0 0 58.333333333333336%;max-width: 58.333333333333336%;}.col-md-8 {flex: 0 0 66.66666666666667%;max-width: 66.66666666666667%;}.col-md-9 {flex: 0 0 75%;max-width: 75%;}.col-md-10 {flex: 0 0 83.33333333333333%;max-width: 83.33333333333333%;}.col-md-11 {flex: 0 0 91.66666666666667%;max-width: 91.66666666666667%;}.col-md-12 {flex: 0 0 100%;max-width: 100%;}.display-none-md {display: none;}.display-inline-md {display: inline;}.display-block-md {display: block;}.display-inline-block-md {display: inline-block;}.display-table-md {display: table;}.display-table-cell-md {display: table-cell;}.display-flex-md {display: flex;}}@media (min-width: 992px) {.container,.container-sm,.container-md,.container-lg {max-width: 960px;width: auto;}.col-lg {flex: 1 1 0%;min-width: 0;width: 100%;}.col-lg-auto {flex: 0 0 auto;width: auto;}.col-lg-1 {flex: 0 0 8.333333333333334%;max-width: 8.333333333333334%;}.col-lg-2 {flex: 0 0 16.666666666666668%;max-width: 16.666666666666668%;}.col-lg-3 {flex: 0 0 25%;max-width: 25%;}.col-lg-4 {flex: 0 0 33.333333333333336%;max-width: 33.333333333333336%;}.col-lg-5 {flex: 0 0 41.666666666666664%;max-width: 41.666666666666664%;}.col-lg-6 {flex: 0 0 50%;max-width: 50%;}.col-lg-7 {flex: 0 0 58.333333333333336%;max-width: 58.333333333333336%;}.col-lg-8 {flex: 0 0 66.66666666666667%;max-width: 66.66666666666667%;}.col-lg-9 {flex: 0 0 75%;max-width: 75%;}.col-lg-10 {flex: 0 0 83.33333333333333%;max-width: 83.33333333333333%;}.col-lg-11 {flex: 0 0 91.66666666666667%;max-width: 91.66666666666667%;}.col-lg-12 {flex: 0 0 100%;max-width: 100%;}.display-none-lg {display: none;}.display-inline-lg {display: inline;}.display-block-lg {display: block;}.display-inline-block-lg {display: inline-block;}.display-table-lg {display: table;}.display-table-cell-lg {display: table-cell;}.display-flex-lg {display: flex;}}@media (min-width: 1200px) {.container,.container-sm,.container-md,.container-lg,.container-xl {max-width: 1140px;width: auto;}.col-xl {flex: 1 1 0%;min-width: 0;width: 100%;}.col-xl-auto {flex: 0 0 auto;width: auto;}.col-xl-1 {flex: 0 0 8.333333333333334%;max-width: 8.333333333333334%;}.col-xl-2 {flex: 0 0 16.666666666666668%;max-width: 16.666666666666668%;}.col-xl-3 {flex: 0 0 25%;max-width: 25%;}.col-xl-4 {flex: 0 0 33.333333333333336%;max-width: 33.333333333333336%;}.col-xl-5 {flex: 0 0 41.666666666666664%;max-width: 41.666666666666664%;}.col-xl-6 {flex: 0 0 50%;max-width: 50%;}.col-xl-7 {flex: 0 0 58.333333333333336%;max-width: 58.333333333333336%;}.col-xl-8 {flex: 0 0 66.66666666666667%;max-width: 66.66666666666667%;}.col-xl-9 {flex: 0 0 75%;max-width: 75%;}.col-xl-10 {flex: 0 0 83.33333333333333%;max-width: 83.33333333333333%;}.col-xl-11 {flex: 0 0 91.66666666666667%;max-width: 91.66666666666667%;}.col-xl-12 {flex: 0 0 100%;max-width: 100%;}.display-none-xl {display: none;}.display-inline-xl {display: inline;}.display-block-xl {display: block;}.display-inline-block-xl {display: inline-block;}.display-table-xl {display: table;}.display-table-cell-xl {display: table-cell;}.display-flex-xl {display: flex;}}html {position: relative;min-height: 100%;}body {background: #f9f9f9;color: #515357;padding-top: 70px;padding-bottom: 250px;}a,a:visited {color: #737578;}@font-face {font-family: Lato;src: url("https://cdn.lever.co/fonts/Lato2/Lato-Bold.eot");src: url("https://cdn.lever.co/fonts/Lato2/Lato-Bold.eot?#iefix") format('embedded-opentype');src: url("https://cdn.lever.co/fonts/Lato2/Lato-Bold.woff") format('woff');src: url("https://cdn.lever.co/fonts/Lato2/Lato-Bold.ttf") format('truetype');font-style: normal;font-weight: bold;text-rendering: optimizeLegibility;}@font-face {font-family: Lato;src: url("https://cdn.lever.co/fonts/Lato2/Lato-Regular.eot");src: url("https://cdn.lever.co/fonts/Lato2/Lato-Regular.eot?#iefix") format('embedded-opentype');src: url("https://cdn.lever.co/fonts/Lato2/Lato-Regular.woff") format('woff');src: url("https://cdn.lever.co/fonts/Lato2/Lato-Regular.ttf") format('truetype');font-style: normal;font-weight: normal;text-rendering: optimizeLegibility;}body,.application-question input,.application-additional input,.application-question textarea,.application-additional textarea,.application-question select,.application-additional select,.eeo-light-text,h5.eeo-paragraph-heading,.list .filter-popup {color: #515357;font: normal 400 16px/1.8 Lato;}h1,h2,h3,h4,p,h5,.main-footer,.application .application-label,.eeo-survey .application-label,.application .application-field label,.eeo-survey .application-field label,.application .application-question input[type=text],.eeo-survey .application-question input[type=text],.application .application-additional input[type=text],.eeo-survey .application-additional input[type=text],.application .application-question input[type=email],.eeo-survey .application-question input[type=email],.application .application-additional input[type=email],.eeo-survey .application-additional input[type=email],.application .application-question input[type=tel],.eeo-survey .application-question input[type=tel],.application .application-additional input[type=tel],.eeo-survey .application-additional input[type=tel],.application .application-question textarea,.eeo-survey .application-question textarea,.application .application-additional textarea,.eeo-survey .application-additional textarea,.application .application-question select,.eeo-survey .application-question select,.application .application-additional select,.eeo-survey .application-additional select,.application .application-question .application-answer-alternative,.eeo-survey .application-question .application-answer-alternative,.application .application-additional .application-answer-alternative,.eeo-survey .application-additional .application-answer-alternative {margin: 0;padding: 0;display: block;}h1 {font: normal 700 48px/1.4 Lato;color: #fff;text-transform: uppercase;letter-spacing: 1px;}h2,h5 {font: normal 400 36px/1.4 Lato;color: #515357;text-transform: none;letter-spacing: 0px;}h3 {font: normal 700 18px/1.4 "Lato";color: #515357;}h4 {font: normal 700 16px/1.4 Lato;text-transform: uppercase;letter-spacing: 1px;color: #515357;}h5 {font-size: 24px;margin-right: 115px;overflow: hidden;-webkit-transition: color 150ms;-moz-transition: color 150ms;-o-transition: color 150ms;-ms-transition: color 150ms;transition: color 150ms;}h2,h3,h4 {margin: 17.5px 0;}p,.main-footer,.application .application-label,.eeo-survey .application-label,.application .application-field label,.eeo-survey .application-field label,.application .application-question input[type=text],.eeo-survey .application-question input[type=text],.application .application-additional input[type=text],.eeo-survey .application-additional input[type=text],.application .application-question input[type=email],.eeo-survey .application-question input[type=email],.application .application-additional input[type=email],.eeo-survey .application-additional input[type=email],.application .application-question input[type=tel],.eeo-survey .application-question input[type=tel],.application .application-additional input[type=tel],.eeo-survey .application-additional input[type=tel],.application .application-question textarea,.eeo-survey .application-question textarea,.application .application-additional textarea,.eeo-survey .application-additional textarea,.application .application-question select,.eeo-survey .application-question select,.application .application-additional select,.eeo-survey .application-additional select,.application .application-question .application-answer-alternative,.eeo-survey .application-question .application-answer-alternative,.application .application-additional .application-answer-alternative,.eeo-survey .application-additional .application-answer-alternative {margin: 17.5px 0;}p > a,.postings-link {text-decoration: underline;color: #737578;}p > a:hover,.postings-link:hover {color: #579eee;}p > a:active,.postings-link:active,p > a:focus,.postings-link:focus {color: #3c6ea6;}.page-full-width {width: 100%;}.page-centered,.g-recaptcha div,.h-captcha-spacing {display: block;margin: 0 auto;max-width: 1080px;}.content-wrapper {min-height: 100%;}.content {-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;min-height: 100%;position: relative;width: 100%;}.row {left: 0;position: absolute;right: 0;}.column-wrapper {display: table;height: 100%;width: 100%;}.table-row {display: table-row;}.column {display: table-cell;position: relative;vertical-align: middle;}.third {width: 33.33%;}.two-thirds {-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding-left: 40px;width: 66.67%;}.section-wrapper {padding: 0 30px;}.section {padding: 20px 0;position: relative;}.narrow-section,.application .section,.eeo-survey .section,.list .section,.show .section {max-width: 760px;padding-left: 0;padding-right: 0;}.accent-section {background: #fff;}.accent-section.small-accent {padding: 0 30px;}.accent-section .posting-categories {margin: 20px 0;}.accent-section .posting-category {display: inline-block;font-size: 14px;margin-right: 10px;}.split-width-container,.show .posting-header {display: block;}.left-block,.right-block,.left-float,.right-float,.full-block {display: block;width: auto;}.left-block {overflow: hidden;}.right-float {float: right;margin-left: 10px;}.right-block {overflow: hidden;}.left-float {float: left;margin-right: 10px;}.full-block {width: 100%;}.template-btn,.template-btn-submit,.template-btn-utility,.sort-category,.application .application-field .upload-file-overlay,.eeo-survey .application-field .upload-file-overlay,.list .filter-button-wrapper .filter-button {font: normal 700 14px/1.4 Lato;text-transform: uppercase;letter-spacing: 2px;text-align: center;border-radius: 3px;color: #fff;background: #00a1dc;height: auto;position: relative;display: inline-block;margin: 0;font-size: 14px;font-weight: normal;line-height: 1.33;padding: 10px 15px;text-align: center;white-space: nowrap;vertical-align: middle;cursor: pointer;border: 1px solid #dcdcdc;border-radius: 3px;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;-webkit-appearance: none;-moz-appearance: none;appearance: none;}.template-btn .filename,.template-btn-submit .filename,.template-btn-utility .filename,.sort-category .filename,.application .application-field .upload-file-overlay .filename,.eeo-survey .application-field .upload-file-overlay .filename,.list .filter-button-wrapper .filter-button .filename,.template-btn .default-label,.template-btn-submit .default-label,.template-btn-utility .default-label,.sort-category .default-label,.application .application-field .upload-file-overlay .default-label,.eeo-survey .application-field .upload-file-overlay .default-label,.list .filter-button-wrapper .filter-button .default-label {line-height: 1.33;display: block;overflow: hidden;}.template-btn:visited,.template-btn-submit:visited,.template-btn-utility:visited,.sort-category:visited,.application .application-field .upload-file-overlay:visited,.eeo-survey .application-field .upload-file-overlay:visited,.list .filter-button-wrapper .filter-button:visited,.template-btn:focus,.template-btn-submit:focus,.template-btn-utility:focus,.sort-category:focus,.application .application-field .upload-file-overlay:focus,.eeo-survey .application-field .upload-file-overlay:focus,.list .filter-button-wrapper .filter-button:focus {color: #fff;}.template-btn .icon >svg,.template-btn-submit .icon >svg,.template-btn-utility .icon >svg,.sort-category .icon >svg,.application .application-field .upload-file-overlay .icon >svg,.eeo-survey .application-field .upload-file-overlay .icon >svg,.list .filter-button-wrapper .filter-button .icon >svg {fill: #fff;}.template-btn:hover,.template-btn-submit:hover,.template-btn-utility:hover,.sort-category:hover,.application .application-field .upload-file-overlay:hover,.eeo-survey .application-field .upload-file-overlay:hover,.list .filter-button-wrapper .filter-button:hover {color: #fff;}.template-btn:active,.template-btn-submit:active,.template-btn-utility:active,.sort-category:active,.application .application-field .upload-file-overlay:active,.eeo-survey .application-field .upload-file-overlay:active,.list .filter-button-wrapper .filter-button:active,.template-btn:focus,.template-btn-submit:focus,.template-btn-utility:focus,.sort-category:focus,.application .application-field .upload-file-overlay:focus,.eeo-survey .application-field .upload-file-overlay:focus,.list .filter-button-wrapper .filter-button:focus {background: #00709a;}.template-btn-submit {color: #fff;background: #00a1dc;border-color: #0098d1;}.template-btn-submit .icon >svg {fill: #fff;}.template-btn-submit:visited {color: #fff;}.template-btn-submit:hover {background: #0090c6;}.template-btn-submit:active,.template-btn-submit:focus {background: #00709a;}.template-btn-submit.cerulean {background-color: #0c92f3;border-color: #0b8ae6;}.template-btn-submit.cerulean:hover {background: #0a83da;}.template-btn-submit.cerulean:active,.template-btn-submit.cerulean:focus {background: #0866aa;}.template-btn-submit.teal {background-color: #1cadba;border-color: #1aa4b0;}.template-btn-submit.teal:hover {background: #199ba7;}.template-btn-submit.teal:active,.template-btn-submit.teal:focus {background: #137982;}.template-btn-submit.shamrock {background-color: #39bf71;border-color: #36b56b;}.template-btn-submit.shamrock:hover {background: #33ab65;}.template-btn-submit.shamrock:active,.template-btn-submit.shamrock:focus {background: #27854f;}.template-btn-submit.golden-poppy {background-color: #ffa60d;border-color: #f29d0c;}.template-btn-submit.golden-poppy:hover {background: #e5950b;}.template-btn-submit.golden-poppy:active,.template-btn-submit.golden-poppy:focus {background: #b27409;}.template-btn-submit.ruby {background-color: #d94141;border-color: #ce3d3d;}.template-btn-submit.ruby:hover {background: #c33a3a;}.template-btn-submit.ruby:active,.template-btn-submit.ruby:focus {background: #972d2d;}.template-btn-submit.ash {background-color: #969799;border-color: #8e8f91;}.template-btn-submit.ash:hover {background: #878789;}.template-btn-submit.ash:active,.template-btn-submit.ash:focus {background: #69696b;}.template-btn-submit.black {background-color: #000;border-color: #000;}.template-btn-submit.black:hover {background: #000;}.template-btn-submit.black:active,.template-btn-submit.black:focus {background: #000;}.template-btn-utility,.sort-category,.application .application-field .upload-file-overlay,.eeo-survey .application-field .upload-file-overlay,.list .filter-button-wrapper .filter-button {background: #ebecf0;color: #9696a2;border: 1px solid #dfe0e4;}.template-btn-utility >svg,.sort-category >svg,.application .application-field .upload-file-overlay >svg,.eeo-survey .application-field .upload-file-overlay >svg,.list .filter-button-wrapper .filter-button >svg {fill: #9696a2;}.template-btn-utility:visited,.sort-category:visited,.application .application-field .upload-file-overlay:visited,.eeo-survey .application-field .upload-file-overlay:visited,.list .filter-button-wrapper .filter-button:visited {color: #9696a2;background: #ebecf0;}.template-btn-utility:hover,.sort-category:hover,.application .application-field .upload-file-overlay:hover,.eeo-survey .application-field .upload-file-overlay:hover,.list .filter-button-wrapper .filter-button:hover {background: #dfe0e4;color: #5a5a61;}.template-btn-utility:active,.sort-category:active,.application .application-field .upload-file-overlay:active,.eeo-survey .application-field .upload-file-overlay:active,.list .filter-button-wrapper .filter-button:active,.template-btn-utility:focus,.sort-category:focus,.application .application-field .upload-file-overlay:focus,.eeo-survey .application-field .upload-file-overlay:focus,.list .filter-button-wrapper .filter-button:focus {background: #d3d4d8;color: #5a5a61;}.template-btn-utility.has-file,.sort-category.has-file,.application .application-field .upload-file-overlay.has-file,.eeo-survey .application-field .upload-file-overlay.has-file,.list .filter-button-wrapper .filter-button.has-file {background: #dadbdf;}.template-btn .icon,.template-btn-submit .icon,.template-btn-utility .icon,.sort-category .icon,.application .application-field .upload-file-overlay .icon,.eeo-survey .application-field .upload-file-overlay .icon,.list .filter-button-wrapper .filter-button .icon {position: absolute;left: 15px;top: calc(50% - 8px);}.posting-btn-submit {padding: 5px 15px;}.main-header {background: #fff;color: #515357;}.main-header.section-wrapper,.main-header .section {padding-top: 0px;padding-bottom: 0px;}.main-header .main-header-logo {margin: 17.5px 0px;display: inline-block;}.main-header .main-header-logo img {height: 35px;}.main-header .mobile-menu svg >path {fill: #515357;}.main-header .main-header-content {display: block;height: 100%;margin: 0px auto;color: #515357;}.main-header .main-header-content .main-header-company {display: inline-block;height: 70px;vertical-align: middle;font-family: Lato;color: #515357;}.main-header {top: 0;height: 70px;}.main-header .main-logo,.main-header .mobile-menu {position: absolute;left: 30px;}.main-header .main-logo img,.main-header .mobile-menu img {height: 100%;position: absolute;}.main-header .main-logo {top: 50%;margin-top: -0.175px;height: 0.5;}.main-header .mobile-menu {position: absolute;right: 0px;top: 50%;margin-top: -0.15px;height: 0.6;left: auto;right: 30px;}.main-header .mobile-menu img {right: 0px;}.main-header .main-header-content .main-header-company {line-height: 70px;}.main-header .main-header-content .main-header-company .icon,.main-header .main-header-content .main-header-company span {height: 70px;display: inline-block;float: left;height: 70px;}.main-header .main-header-content .main-header-company .icon {margin-right: 10px;}@media screen {.main-header {position: fixed;z-index: 100;top: 0;overflow: hidden;}}.header-comfortable {margin-top: 40px;}.header-comfortable .main-header-logo img {height: 77px;}.header-comfortable .main-header {height: 110px;}.main-footer {margin: 0;color: #7f838a;background: #edeef1;}.main-footer .image-link {display: inline-block;color: #7f838a;margin: 40px 0px;}.main-footer .image-link span,.main-footer .image-link img {display: inline-block;position: relative;height: 24px;}.main-footer .image-link span {margin-right: 10px;}.main-footer .image-link img {vertical-align: -6px;}.main-footer .image-link:hover,.main-footer .image-link:visited {color: #7f838a;}.main-footer p {color: #7f838a;}.main-footer a {color: #579eee;border-bottom: 1px solid #78b1f1;text-decoration: none;}.main-footer a:visited {color: #579eee;}.main-footer a:hover {color: #4e8ed6;}.main-footer a.image-link {border-bottom: none;}.main-footer {position: absolute;bottom: 0;width: 100%;height: 250px;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;}.main-footer-text {text-align: center;padding: 40px 30px;}.main-footer-text p {display: block;max-width: 500px;margin: 0px auto;}.posting-header h2 {margin-top: 0px;}.posting-page .section.page-centered li {margin: 8px 0px 8px 17px;list-style-position: outside;}.posting-page .section.page-centered ul li {list-style-type: disc;}.medium-utility-label,.small-utility-label {color: #808080;font: normal 700 16px/1.4 Lato;letter-spacing: 1px;text-transform: uppercase;}.large-category-label,.medium-category-label,.small-category-label,.button-utility-label {color: #808080;font: normal 700 24px/1.4 Lato;letter-spacing: 1px;text-transform: uppercase;}.medium-category-label,.button-utility-label {font-size: 14px;}.small-utility-label {font-size: 12px;line-height: 1.4;}.large-category-header {font: normal 700 30px/1.4 Lato;letter-spacing: 1px;margin-bottom: 25px;text-transform: uppercase;}.medium-category-label.capitalize-labels {text-transform: capitalize;}.small-category-label {font-size: 12px;line-height: 1.4;}.button-utility-label {text-transform: none;}.vertical-line,.horizontal-line {border-color: #e2e2e2;}.vertical-line {position: absolute;left: 0px;top: 30%;height: 40%;width: 1px;border-left-width: 1px;border-left-style: solid;}.horizontal-line {margin: 20px auto 20px auto;width: 80px;height: 1px;border-bottom-width: 1px;border-bottom-style: solid;}.confirmation-message {text-align: center;}.confirmation-message .template-btn-submit {margin-top: 16px;}.cc-window{opacity:1;-webkit-transition:opacity 1s ease;transition:opacity 1s ease}.cc-window.cc-invisible{opacity:0}.cc-animate.cc-revoke{-webkit-transition:transform 1s ease;-webkit-transition:-webkit-transform 1s ease;transition:-webkit-transform 1s ease;transition:transform 1s ease;transition:transform 1s ease,-webkit-transform 1s ease}.cc-animate.cc-revoke.cc-top{-webkit-transform:translateY(-2em);transform:translateY(-2em)}.cc-animate.cc-revoke.cc-bottom{-webkit-transform:translateY(2em);transform:translateY(2em)}.cc-animate.cc-revoke.cc-active.cc-top{-webkit-transform:translateY(0);transform:translateY(0)}.cc-animate.cc-revoke.cc-active.cc-bottom{-webkit-transform:translateY(0);transform:translateY(0)}.cc-revoke:hover{-webkit-transform:translateY(0);transform:translateY(0)}.cc-grower{max-height:0;overflow:hidden;-webkit-transition:max-height 1s;transition:max-height 1s}.cc-revoke,.cc-window{position:fixed;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:Helvetica,Calibri,Arial,sans-serif;font-size:16px;line-height:1.5em;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;z-index:9999}.cc-window.cc-static{position:static}.cc-window.cc-floating{padding:2em;max-width:24em;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.cc-window.cc-banner{padding:1em 1.8em;width:100%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.cc-revoke{padding:.5em}.cc-revoke:hover{text-decoration:underline}.cc-header{font-size:18px;font-weight:700}.cc-btn,.cc-close,.cc-link,.cc-revoke{cursor:pointer}.cc-link{opacity:.8;display:inline-block;padding:.2em;text-decoration:underline}.cc-link:hover{opacity:1}.cc-link:active,.cc-link:visited{color:initial}.cc-btn{display:block;padding:.4em .8em;font-size:.9em;font-weight:700;border-width:2px;border-style:solid;text-align:center;white-space:nowrap}.cc-highlight .cc-btn:first-child{background-color:transparent;border-color:transparent}.cc-highlight .cc-btn:first-child:focus,.cc-highlight .cc-btn:first-child:hover{background-color:transparent;text-decoration:underline}.cc-close{display:block;position:absolute;top:.5em;right:.5em;font-size:1.6em;opacity:.9;line-height:.75}.cc-close:focus,.cc-close:hover{opacity:1}.cc-revoke.cc-top{top:0;left:3em;border-bottom-left-radius:.5em;border-bottom-right-radius:.5em}.cc-revoke.cc-bottom{bottom:0;left:3em;border-top-left-radius:.5em;border-top-right-radius:.5em}.cc-revoke.cc-left{left:3em;right:unset}.cc-revoke.cc-right{right:3em;left:unset}.cc-top{top:1em}.cc-left{left:1em}.cc-right{right:1em}.cc-bottom{bottom:1em}.cc-floating>.cc-link{margin-bottom:1em}.cc-floating .cc-message{display:block;margin-bottom:1em}.cc-window.cc-floating .cc-compliance{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}.cc-window.cc-banner{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.cc-banner.cc-top{left:0;right:0;top:0}.cc-banner.cc-bottom{left:0;right:0;bottom:0}.cc-banner .cc-message{display:block;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;max-width:100%;margin-right:1em}.cc-compliance{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:justify;align-content:space-between}.cc-floating .cc-compliance>.cc-btn{-webkit-box-flex:1;-ms-flex:1;flex:1}.cc-btn+.cc-btn{margin-left:.5em}@media print{.cc-revoke,.cc-window{display:none}}@media screen and (max-width:900px){.cc-btn{white-space:normal}}@media screen and (max-width:414px) and (orientation:portrait),screen and (max-width:736px) and (orientation:landscape){.cc-window.cc-top{top:0}.cc-window.cc-bottom{bottom:0}.cc-window.cc-banner,.cc-window.cc-floating,.cc-window.cc-left,.cc-window.cc-right{left:0;right:0}.cc-window.cc-banner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.cc-window.cc-banner .cc-compliance{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.cc-window.cc-floating{max-width:none}.cc-window .cc-message{margin-bottom:1em}.cc-window.cc-banner{-webkit-box-align:unset;-ms-flex-align:unset;align-items:unset}.cc-window.cc-banner .cc-message{margin-right:0}}.cc-floating.cc-theme-classic{padding:1.2em;border-radius:5px}.cc-floating.cc-type-info.cc-theme-classic .cc-compliance{text-align:center;display:inline;-webkit-box-flex:0;-ms-flex:none;flex:none}.cc-theme-classic .cc-btn{border-radius:5px}.cc-theme-classic .cc-btn:last-child{min-width:140px}.cc-floating.cc-type-info.cc-theme-classic .cc-btn{display:inline-block}.cc-theme-edgeless.cc-window{padding:0}.cc-floating.cc-theme-edgeless .cc-message{margin:2em;margin-bottom:1.5em}.cc-banner.cc-theme-edgeless .cc-btn{margin:0;padding:.8em 1.8em;height:100%}.cc-banner.cc-theme-edgeless .cc-message{margin-left:1em}.cc-floating.cc-theme-edgeless .cc-btn+.cc-btn{margin-left:0}.cc-btn {border-width: 1px;display: inline;font-weight: normal;}.cc-link {color: inherit;}.cc-link:hover {color: #a6daff;}.cc-revoke {display: none;}.cc-window,.cc-revoke {background: #3b3d3f;border-radius: 8px 8px 0 0;color: #d7d7d9;font: inherit;}.cc-window.cc-banner,.cc-window.cc-floating {padding: 16px;}.cc-window.cc-floating {bottom: 0;min-width: 100%;}.cc-window {padding: 16px;}.cc-window .cc-mobile {display: none;}.cc-window .message-inverse {background: #222326;border-radius: 8px 8px 0 0;}.cc-window .momentum-body {margin: -16px;width: calc(100% + 32px);}.cc-window .momentum-body .cookie-banner-link {white-space: nowrap;}.cc-window .momentum-body .message {padding: 16px 16px 16px 48px;}.cc-window .momentum-body .message .icon {font-size: 24px;left: 16px;top: 16px;}.cc-window .message-buttons {margin-right: 16px;margin-top: 12px;}.cc-window h4 {color: #fff;margin-bottom: 4px;}@media screen and (max-width: 1150px) {.cc-window .cc-desktop {display: none;}.cc-window .cc-mobile {display: block;margin-top: 16px;}.cc-window .message {display: flex;}}.error-section {text-align: center;}.error-section img {margin-top: 70px;margin-bottom: 16px;}.application-question input,.application-additional input,.application-question textarea,.application-additional textarea {border-color: #e2e2e2;}.application-question input:active,.application-additional input:active,.application-question textarea:active,.application-additional textarea:active,.application-question input:focus,.application-additional input:focus,.application-question textarea:focus,.application-additional textarea:focus {border-color: #7f838a;}.application-question select,.application-additional select {background: #e2e2e2;border-color: transparent;}.application-question select:hover,.application-additional select:hover {background: #c0c0c0;}.application-question.custom-question,.application-additional.custom-question {display: grid;}.application-question.custom-question .application-label.multiple-choice,.application-additional.custom-question .application-label.multiple-choice,.application-question.custom-question .application-label.multiple-select,.application-additional.custom-question .application-label.multiple-select,.application-question.custom-question .application-label.textarea,.application-additional.custom-question .application-label.textarea,.application-question.custom-question .application-label.dropdown,.application-additional.custom-question .application-label.dropdown {margin-bottom: 0px;}.application-question.custom-question .application-field,.application-additional.custom-question .application-field {display: inline-block;}.application-question.custom-question .application-field input[type=text],.application-additional.custom-question .application-field input[type=text],.application-question.custom-question .application-field input[type=email],.application-additional.custom-question .application-field input[type=email],.application-question.custom-question .application-field input[type=tel],.application-additional.custom-question .application-field input[type=tel] {margin-top: 0px;}.application-question.custom-question .application-field input[type=radio],.application-additional.custom-question .application-field input[type=radio],.application-question.custom-question .application-field input[type=checkbox],.application-additional.custom-question .application-field input[type=checkbox] {left: 0px;}.application-question.custom-question .application-field .upload-file-overlay,.application-additional.custom-question .application-field .upload-file-overlay {margin-bottom: 17.5px;}.application-question.custom-question .application-field ul label,.application-additional.custom-question .application-field ul label {padding-left: 30px;}.application .application-question,.eeo-survey .application-question {list-style-type: none;padding: 0px 0px;}.application .application-label,.eeo-survey .application-label {font-size: 16px;line-height: 1.4;vertical-align: middle;width: 100%;}.application .application-label .description,.eeo-survey .application-label .description {font-size: 12px;margin-bottom: 0;}.application .application-label label,.eeo-survey .application-label label {position: relative;}.application .application-label.multiple-choice,.eeo-survey .application-label.multiple-choice,.application .application-label.multiple-select,.eeo-survey .application-label.multiple-select,.application .application-label.textarea,.eeo-survey .application-label.textarea {vertical-align: top;}.application .application-label.text,.eeo-survey .application-label.text {vertical-align: bottom;}.application .application-field,.eeo-survey .application-field {position: relative;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;}.application .application-field input[type=text],.eeo-survey .application-field input[type=text],.application .application-field select,.eeo-survey .application-field select,.application .application-field input[type=email],.eeo-survey .application-field input[type=email],.application .application-field input[type=tel],.eeo-survey .application-field input[type=tel] {display: inline-block;width: 100%;}.application .application-field input[type=text][disabled],.eeo-survey .application-field input[type=text][disabled],.application .application-field select[disabled],.eeo-survey .application-field select[disabled],.application .application-field input[type=email][disabled],.eeo-survey .application-field input[type=email][disabled],.application .application-field input[type=tel][disabled],.eeo-survey .application-field input[type=tel][disabled] {background-color: #e2e2e2;}.application .application-field input[type=radio],.eeo-survey .application-field input[type=radio],.application .application-field input[type=checkbox],.eeo-survey .application-field input[type=checkbox] {cursor: pointer;outline: none;}.application .application-field .icon-caret-down,.eeo-survey .application-field .icon-caret-down {height: 16px;width: 16px;position: absolute;right: 10px;margin-top: -8px;top: 50%;}.application .application-field ul,.eeo-survey .application-field ul {list-style-type: none;}.application .application-field label,.eeo-survey .application-field label {padding-left: 40px;position: relative;cursor: pointer;}.application .application-field label .application-answer-alternative,.eeo-survey .application-field label .application-answer-alternative {color: #83868c;}.application .application-field input[type=radio],.eeo-survey .application-field input[type=radio] {-webkit-appearance: none;-moz-appearance: none;appearance: none;width: 20px;height: 20px;border-radius: 10px;position: relative;border: 1px solid #e2e2e2;}.application .application-field input[type=radio]:active,.eeo-survey .application-field input[type=radio]:active {background: #ebecf0;}.application .application-field input[type=radio]:checked::after,.eeo-survey .application-field input[type=radio]:checked::after {position: absolute;content: "";height: 20px;width: 20px;left: 0;top: 0;border-radius: 10px;background-color: #00a1dc;}.application .application-field input[type=radio]:checked + span,.eeo-survey .application-field input[type=radio]:checked + span,.application .application-field input[type=checkbox]:checked + span,.eeo-survey .application-field input[type=checkbox]:checked + span {color: #515357;}.application .application-field input[type=checkbox],.eeo-survey .application-field input[type=checkbox] {width: 20px;height: 20px;border: 1px solid #e2e2e2;-webkit-appearance: none;-moz-appearance: none;appearance: none;}.application .application-field input[type=checkbox]:active,.eeo-survey .application-field input[type=checkbox]:active {background: #ebecf0;}.application .application-field input[type=checkbox]:checked::after,.eeo-survey .application-field input[type=checkbox]:checked::after {position: absolute;content: "";left: 15%;top: -10%;height: 40%;width: 90%;border-bottom: 4px solid #00a1dc;border-left: 4px solid #00a1dc;-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-o-transform: rotate(-45deg);-ms-transform: rotate(-45deg);transform: rotate(-45deg);}.application .application-field input[type=radio],.eeo-survey .application-field input[type=radio],.application .application-field input[type=checkbox],.eeo-survey .application-field input[type=checkbox] {position: absolute;left: 10px;top: 2px;}.application .application-field .application-university,.eeo-survey .application-field .application-university {position: relative;}.application .application-field .application-university .select2-container,.eeo-survey .application-field .application-university .select2-container {height: 40px;}.application .application-field .application-university .select2-container .select2-selection,.eeo-survey .application-field .application-university .select2-container .select2-selection {padding: 4px 4px 4px 7px;height: 40px;}.application .application-field .application-university .select2-container .select2-selection:active,.eeo-survey .application-field .application-university .select2-container .select2-selection:active,.application .application-field .application-university .select2-container .select2-selection:focus,.eeo-survey .application-field .application-university .select2-container .select2-selection:focus {outline: none;border: 1px solid #7f838a;}.application .application-field .application-university .select2-container .select2-selection span,.eeo-survey .application-field .application-university .select2-container .select2-selection span {font-size: 16px !important;}.application .application-field .application-university .select2-container .select2-selection__arrow,.eeo-survey .application-field .application-university .select2-container .select2-selection__arrow {top: 7px;}.application .application-field .application-dropdown,.eeo-survey .application-field .application-dropdown {position: relative;}.application .application-field .application-dropdown select,.eeo-survey .application-field .application-dropdown select {text-indent: 0.01px;-o-text-overflow: '';text-overflow: '';padding-right: 40px;}.application .application-field .application-dropdown select::-ms-expand,.eeo-survey .application-field .application-dropdown select::-ms-expand {display: none;}.application .application-field .application-dropdown::after,.eeo-survey .application-field .application-dropdown::after {position: absolute;content: "";right: 15px;top: 26px;height: 15px;width: 15px;border-bottom: 1px solid #7f838a;border-left: 1px solid #7f838a;border-color: #72767d;-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-o-transform: rotate(-45deg);-ms-transform: rotate(-45deg);transform: rotate(-45deg);pointer-events: none;}.application .application-field .upload-file-overlay,.eeo-survey .application-field .upload-file-overlay {max-width: 100%;padding-left: 41px;}.application .application-field .upload-file-overlay .icon-paperclip,.eeo-survey .application-field .upload-file-overlay .icon-paperclip {position: absolute;left: 15px;}.application .application-field input[type=file],.eeo-survey .application-field input[type=file] {position: absolute;opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);top: 0;left: 0;}.application .application-question input[type=text],.eeo-survey .application-question input[type=text],.application .application-additional input[type=text],.eeo-survey .application-additional input[type=text],.application .application-question input[type=email],.eeo-survey .application-question input[type=email],.application .application-additional input[type=email],.eeo-survey .application-additional input[type=email],.application .application-question input[type=tel],.eeo-survey .application-question input[type=tel],.application .application-additional input[type=tel],.eeo-survey .application-additional input[type=tel],.application .application-question textarea,.eeo-survey .application-question textarea,.application .application-additional textarea,.eeo-survey .application-additional textarea,.application .application-question select,.eeo-survey .application-question select,.application .application-additional select,.eeo-survey .application-additional select,.application .application-question .application-answer-alternative,.eeo-survey .application-question .application-answer-alternative,.application .application-additional .application-answer-alternative,.eeo-survey .application-additional .application-answer-alternative {font-size: 16px;line-height: 1.4;}.application .application-question input[type=text],.eeo-survey .application-question input[type=text],.application .application-additional input[type=text],.eeo-survey .application-additional input[type=text],.application .application-question input[type=email],.eeo-survey .application-question input[type=email],.application .application-additional input[type=email],.eeo-survey .application-additional input[type=email],.application .application-question input[type=tel],.eeo-survey .application-question input[type=tel],.application .application-additional input[type=tel],.eeo-survey .application-additional input[type=tel],.application .application-question textarea,.eeo-survey .application-question textarea,.application .application-additional textarea,.eeo-survey .application-additional textarea,.application .application-question select,.eeo-survey .application-question select,.application .application-additional select,.eeo-survey .application-additional select {border-radius: 3px;border-width: 1px;border-style: solid;height: 40px;padding: 4px 4px 4px 15px;-webkit-transition: 1px solid #e3e4e6 150ms, background 150ms;-moz-transition: 1px solid #e3e4e6 150ms, background 150ms;-o-transition: 1px solid #e3e4e6 150ms, background 150ms;-ms-transition: 1px solid #e3e4e6 150ms, background 150ms;transition: 1px solid #e3e4e6 150ms, background 150ms;}.application .application-question input[type=text]:active,.eeo-survey .application-question input[type=text]:active,.application .application-additional input[type=text]:active,.eeo-survey .application-additional input[type=text]:active,.application .application-question input[type=email]:active,.eeo-survey .application-question input[type=email]:active,.application .application-additional input[type=email]:active,.eeo-survey .application-additional input[type=email]:active,.application .application-question input[type=tel]:active,.eeo-survey .application-question input[type=tel]:active,.application .application-additional input[type=tel]:active,.eeo-survey .application-additional input[type=tel]:active,.application .application-question textarea:active,.eeo-survey .application-question textarea:active,.application .application-additional textarea:active,.eeo-survey .application-additional textarea:active,.application .application-question select:active,.eeo-survey .application-question select:active,.application .application-additional select:active,.eeo-survey .application-additional select:active,.application .application-question input[type=text]:focus,.eeo-survey .application-question input[type=text]:focus,.application .application-additional input[type=text]:focus,.eeo-survey .application-additional input[type=text]:focus,.application .application-question input[type=email]:focus,.eeo-survey .application-question input[type=email]:focus,.application .application-additional input[type=email]:focus,.eeo-survey .application-additional input[type=email]:focus,.application .application-question input[type=tel]:focus,.eeo-survey .application-question input[type=tel]:focus,.application .application-additional input[type=tel]:focus,.eeo-survey .application-additional input[type=tel]:focus,.application .application-question textarea:focus,.eeo-survey .application-question textarea:focus,.application .application-additional textarea:focus,.eeo-survey .application-additional textarea:focus,.application .application-question select:focus,.eeo-survey .application-question select:focus,.application .application-additional select:focus,.eeo-survey .application-additional select:focus {outline: none;}.application .application-question input.location-input,.eeo-survey .application-question input.location-input,.application .application-additional input.location-input,.eeo-survey .application-additional input.location-input {margin-bottom: 0;}.application .application-question input.invisible-resume-upload,.eeo-survey .application-question input.invisible-resume-upload,.application .application-additional input.invisible-resume-upload,.eeo-survey .application-additional input.invisible-resume-upload,.application .application-question .visible-resume-upload,.eeo-survey .application-question .visible-resume-upload,.application .application-additional .visible-resume-upload,.eeo-survey .application-additional .visible-resume-upload {width: 230px;height: 40px;}.application .application-question .visible-resume-upload,.eeo-survey .application-question .visible-resume-upload,.application .application-additional .visible-resume-upload,.eeo-survey .application-additional .visible-resume-upload {position: relative;margin-right: 15px;padding-left: 41px;}.application .application-question .visible-resume-upload .icon,.eeo-survey .application-question .visible-resume-upload .icon,.application .application-additional .visible-resume-upload .icon,.eeo-survey .application-additional .visible-resume-upload .icon {position: absolute;}.application .application-question .visible-resume-upload .resume-upload-name,.eeo-survey .application-question .visible-resume-upload .resume-upload-name,.application .application-additional .visible-resume-upload .resume-upload-name,.eeo-survey .application-additional .visible-resume-upload .resume-upload-name {vertical-align: middle;display: inline-block;line-height: 40px;white-space: nowrap;overflow: hidden;-o-text-overflow: ellipsis;text-overflow: ellipsis;margin-left: 24px;margin-bottom: 3px;}.application .application-question .resume-upload-filename,.eeo-survey .application-question .resume-upload-filename,.application .application-additional .resume-upload-filename,.eeo-survey .application-additional .resume-upload-filename {margin: 8px 0px;display: inline-block;font-size: 14px;}.application .application-question input.invisible-resume-upload,.eeo-survey .application-question input.invisible-resume-upload,.application .application-additional input.invisible-resume-upload,.eeo-survey .application-additional input.invisible-resume-upload {position: absolute;top: 0px;left: 0px;opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);cursor: pointer;}.application .application-question input.invisible-resume-upload:hover,.eeo-survey .application-question input.invisible-resume-upload:hover,.application .application-additional input.invisible-resume-upload:hover,.eeo-survey .application-additional input.invisible-resume-upload:hover {border-color: #f00;}.application .application-question .linkedin-auth-button,.eeo-survey .application-question .linkedin-auth-button,.application .application-additional .linkedin-auth-button,.eeo-survey .application-additional .linkedin-auth-button {position: relative;margin-right: 15px;padding-left: 41px;}.application .application-question .linkedin-auth-button.added,.eeo-survey .application-question .linkedin-auth-button.added,.application .application-additional .linkedin-auth-button.added,.eeo-survey .application-additional .linkedin-auth-button.added {background: #dadbdf;}.application .application-question textarea,.eeo-survey .application-question textarea,.application .application-additional textarea,.eeo-survey .application-additional textarea {padding-top: 10px;resize: vertical;width: 100%;height: 130px;}.application .application-question select,.eeo-survey .application-question select,.application .application-additional select,.eeo-survey .application-additional select {-webkit-appearance: none;-moz-appearance: none;appearance: none;}.application .application-question .dropdown-container,.eeo-survey .application-question .dropdown-container,.application .application-additional .dropdown-container,.eeo-survey .application-additional .dropdown-container {display: none;z-index: 1;overflow-y: auto;position: absolute;max-height: 200px;font-size: 14px;font-family: Meta;letter-spacing: 1px;}.application .application-question .dropdown-loading-results,.eeo-survey .application-question .dropdown-loading-results,.application .application-additional .dropdown-loading-results,.eeo-survey .application-additional .dropdown-loading-results {display: none;}.application .application-question .dropdown-no-results,.eeo-survey .application-question .dropdown-no-results,.application .application-additional .dropdown-no-results,.eeo-survey .application-additional .dropdown-no-results {display: none;}.application .application-question .dropdown-location:hover,.eeo-survey .application-question .dropdown-location:hover,.application .application-additional .dropdown-location:hover,.eeo-survey .application-additional .dropdown-location:hover,.application .application-question .dropdown-location-active,.eeo-survey .application-question .dropdown-location-active,.application .application-additional .dropdown-location-active,.eeo-survey .application-additional .dropdown-location-active {background-color: #000;}.application .required,.eeo-survey .required {display: inline-block;color: #ff794f;margin-left: 4px;font-size: 9px;padding-bottom: 0px;position: absolute;}.application .error-message,.eeo-survey .error-message {background: #ff794f;color: #fff;border-radius: 3px;padding: 5px 15px;width: 700px;max-width: 100%;}.resume-upload-failure,.resume-upload-working,.resume-upload-success,.linkedin-login-success {display: none;cursor: default;position: absolute;top: 0;left: 260px;}.resume-upload-working {cursor: wait;}.resume-upload-success,.linkedin-login-success {-webkit-animation-timing-function: ease-in;-webkit-animation-duration: 1s;-webkit-animation-name: fadein;}.resume-upload-failure {-webkit-animation-timing-function: ease-in;-webkit-animation-duration: 4s;-webkit-animation-name: fadeout;opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);display: none;}.resume-upload-failure .resume-upload-label {color: #ff9000;font-size: 13px;font-weight: bold;line-height: 1.8;opacity: 0.5;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";filter: alpha(opacity=50);width: 250px;}.resume-upload-oversize {position: relative;display: none;}.resume-upload-label,.linkedin-login-label {position: absolute;line-height: 40px;display: inline-block;height: 40px;margin-left: 15px;width: 230px;}.loading-indicator {display: inline-block;opacity: 0.8;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";filter: alpha(opacity=80);border-radius: 40px;-webkit-animation: loading 1.5s infinite linear;-moz-animation: loading 1.5s infinite linear;-o-animation: loading 1.5s infinite linear;-ms-animation: loading 1.5s infinite linear;animation: loading 1.5s infinite linear;border: 6px solid #00a1dc;border-top: 6px solid rgba(0,0,0,0);border-left: 6px solid rgba(0,0,0,0);width: 40px;height: 40px;}.loading-indicator.completed {border-left: 6px solid #515357;border-right: 6px solid #515357;border-top: 6px solid #515357;border-bottom: 6px solid #515357;-webkit-animation: none;-moz-animation: none;-o-animation: none;-ms-animation: none;animation: none;text-align: center;}.loading-indicator .icon-checkmark {vertical-align: middle;}.loading-indicator .icon-checkmark >path {fill: #515357;}.application-form h4 {margin: 40px 0;}.awli-button-container {display: inline-block;overflow: hidden;position: relative;vertical-align: middle;}.awli-button-container .iframe-mask {position: absolute;left: 0;background-color: #f9f9f9;z-index: 1;}.awli-button-container .iframe-mask.disclaimer-mask {top: -50px;width: 243px;height: 40px;}.awli-button-container .iframe-mask.button-mask {pointer-events: none;width: 243px;height: 100%;}.awli-button,.awli-button:active,.awli-button:focus {position: relative;margin-right: 15px;padding-left: 41px;padding-right: 0;width: 243px;background: #0073b1;border-color: #0073b1;color: #fff;z-index: 10;outline: none;}.awli-button.button-masked,.awli-button:active.button-masked,.awli-button:focus.button-masked {pointer-events: none;}.awli-button.button-masked > div,.awli-button:active.button-masked > div,.awli-button:focus.button-masked > div {pointer-events: none;}.awli-button.button-masked > div > *,.awli-button:active.button-masked > div > *,.awli-button:focus.button-masked > div > * {pointer-events: none;}.awli-button.state-loading > .loading,.awli-button:active.state-loading > .loading,.awli-button:focus.state-loading > .loading {display: block;}.awli-button.state-loading > .ready,.awli-button:active.state-loading > .ready,.awli-button:focus.state-loading > .ready {display: none;}.awli-button.state-loading > .completed,.awli-button:active.state-loading > .completed,.awli-button:focus.state-loading > .completed {display: none;}.awli-button.state-ready > .loading,.awli-button:active.state-ready > .loading,.awli-button:focus.state-ready > .loading {display: none;}.awli-button.state-ready > .ready,.awli-button:active.state-ready > .ready,.awli-button:focus.state-ready > .ready {display: block;}.awli-button.state-ready > .completed,.awli-button:active.state-ready > .completed,.awli-button:focus.state-ready > .completed {display: none;}.awli-button.state-completed > .loading,.awli-button:active.state-completed > .loading,.awli-button:focus.state-completed > .loading {display: none;}.awli-button.state-completed > .ready,.awli-button:active.state-completed > .ready,.awli-button:focus.state-completed > .ready {display: none;}.awli-button.state-completed > .completed,.awli-button:active.state-completed > .completed,.awli-button:focus.state-completed > .completed {display: block;}.awli-button .icon-checkmark path:first-child,.awli-button:active .icon-checkmark path:first-child,.awli-button:focus .icon-checkmark path:first-child {fill: #fff;}.awli-button .icon-linkedin .icon-li-background,.awli-button:active .icon-linkedin .icon-li-background,.awli-button:focus .icon-linkedin .icon-li-background {fill: currentColor;}.awli-button .icon-linkedin .icon-li-text,.awli-button:active .icon-linkedin .icon-li-text,.awli-button:focus .icon-linkedin .icon-li-text {fill: #0073b1;}.awli-button:hover,.awli-button:active:hover,.awli-button:focus:hover {background: #006299;border-color: #006299;color: #fff;outline: none;}.awli-button:hover.state-loading,.awli-button:active:hover.state-loading,.awli-button:focus:hover.state-loading,.awli-button:hover.state-completed,.awli-button:active:hover.state-completed,.awli-button:focus:hover.state-completed {background: #006299;border-color: #006299;color: #fff;}.awli-button:hover.state-loading .icon-checkmark path:first-child,.awli-button:active:hover.state-loading .icon-checkmark path:first-child,.awli-button:focus:hover.state-loading .icon-checkmark path:first-child,.awli-button:hover.state-completed .icon-checkmark path:first-child,.awli-button:active:hover.state-completed .icon-checkmark path:first-child,.awli-button:focus:hover.state-completed .icon-checkmark path:first-child {fill: #fff;}.awli-button.state-loading,.awli-button:active.state-loading,.awli-button:focus.state-loading,.awli-button.state-completed,.awli-button:active.state-completed,.awli-button:focus.state-completed {background: #0073b1;border-color: #0073b1;color: #fff;}.awli-button.state-loading .icon-checkmark path:first-child,.awli-button:active.state-loading .icon-checkmark path:first-child,.awli-button:focus.state-loading .icon-checkmark path:first-child,.awli-button.state-completed .icon-checkmark path:first-child,.awli-button:active.state-completed .icon-checkmark path:first-child,.awli-button:focus.state-completed .icon-checkmark path:first-child {fill: #fff;}.awli-button-label {line-height: 1.33;display: block;overflow: hidden;text-align: left;}.awli-disclaimer {color: #969799;font-size: 12px;line-height: 14px;display: inline-block;padding: 10px 0;margin: 0;vertical-align: middle;}.awli-disclaimer a,.awli-disclaimer a:active,.awli-disclaimer a:focus {color: #707173;}.awli-disclaimer a:hover {color: #969799;}.IN-Awli-widget,.IN-widget {display: inline-block;position: absolute;z-index: 0;}.IN-Awli-widget.IN-Awli-widget,.IN-widget.IN-Awli-widget {left: 2px;top: -37px;}.IN-Awli-widget.IN-widget,.IN-widget.IN-widget {left: 4px;top: 7px;}.h-captcha-spacing {width: 304px;height: 78px;}.eeo-light-text {color: #555659;}h5.eeo-paragraph-heading {font-weight: bold;margin-top: 17.5px;}h5.eeo-paragraph-heading + p {margin-top: 0;}hr {border: 1px solid #e3e4e6;}.application .eeo-option-text.application-answer-alternative {margin-bottom: 0;}.eeo-option-description {color: #555659;font-size: 12px;}.eeo-three-col-list {-webkit-column-width: 233.33333333333334px;-moz-column-width: 233.33333333333334px;column-width: 233.33333333333334px;}.eeo-three-col-list > li {margin-left: 30px;}.eeo-more-info-button {display: inline-block;margin-left: 10px;vertical-align: middle;}.eeo-more-info-button > .icon-info > path {fill: #969799;}.eeo-more-info-button:hover > .icon-info > path {fill: #555659;}.eeo-expandable-description > li {margin-bottom: 10px;}li.select2-results__option.select2-results__option--highlighted .posting-option .posting-tags {color: #fff;}.posting-option {display: block;}.posting-option .posting-tags {display: block;line-height: 1em;font-size: 0.6em;color: #939393;}.posting-option .posting-tag {padding-right: 3px;}.posting-option .posting-title {text-align: left;}@-moz-keyframes fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}70% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-webkit-keyframes fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}70% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-o-keyframes fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}70% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@keyframes fadein {0% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}70% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}100% {opacity: 1;-ms-filter: none;filter: none;}}@-moz-keyframes fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}80% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-webkit-keyframes fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}80% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-o-keyframes fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}80% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@keyframes fadeout {0% {opacity: 1;-ms-filter: none;filter: none;}80% {opacity: 1;-ms-filter: none;filter: none;}100% {opacity: 0;-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter: alpha(opacity=0);}}@-moz-keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-webkit-keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@-o-keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@keyframes loading {0% {-webkit-transform: rotate(0deg);-moz-transform: rotate(0deg);-o-transform: rotate(0deg);-ms-transform: rotate(0deg);transform: rotate(0deg);}100% {-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);transform: rotate(360deg);}}@media screen and (min-width: 800px) {.application .application-label,.eeo-survey .application-label,.application .application-field,.eeo-survey .application-field {display: inline-block;}.application .application-label,.eeo-survey .application-label {width: 210px;}.application .application-label.full-width,.eeo-survey .application-label.full-width {width: 100%;}.application .application-field,.eeo-survey .application-field {margin-left: 15px;width: 489px;}.application .application-field.full-width,.eeo-survey .application-field.full-width {padding-left: 0;width: 100%;}}.list .agency-header {font-size: 30px;}.list .agency-sub-header {color: #808080;}.list .postings-list-logo {max-width: 400px;max-height: 50px;}.list .postings-list-logo,.list .postings-list-title {display: inline-block;position: relative;min-height: 50px;float: left;}.list .postings-list-title {margin: 13px 0px 13px 0px;}.list .postings-list-logo {margin-right: 20px;}.list .filter-by-label {margin-right: 16px;}.list .filter-bar {line-height: 40px;max-width: 100%;}.list .filter-bar > div:last-of-type {margin-right: 0;}.list .filter-button-wrapper-margin-right {margin-right: 16px;}.list .filter-button-wrapper {display: inline-block;max-width: 100%;outline: none;position: relative;}.list .filter-button-wrapper:focus .filter-button {border-color: #0c92f3;}.list .filter-button-wrapper:active .filter-button {border-color: #dcdcdc;}.list .filter-button-wrapper .filter-button {color: #555659;max-width: 100%;overflow: hidden;padding: 5px 15px;padding-right: 41px;position: relative;-o-text-overflow: ellipsis;text-overflow: ellipsis;}.list .filter-button-wrapper .filter-button.has-selected-filter {color: #555659;font-weight: bold;}.list .filter-button-wrapper .filter-button .filter-button-caret {position: absolute;left: auto;left: initial;right: 15px;vertical-align: middle;}.list .filter-button-wrapper .filter-button.filter-button-mlp {padding: 8px 16px;width: 173px;font-size: 12px;text-align: left;}.list .filter-popup {position: absolute;top: 110%;left: -1px;border: 1px solid #dcdcdc;border-radius: 3px;display: none;font-size: 14px;line-height: 1;max-height: 300px;overflow-y: hidden;overflow-y: auto;text-align: left;white-space: nowrap;z-index: 1;}.list .filter-popup::-webkit-scrollbar {width: 10px;}.list .filter-popup::-webkit-scrollbar-track {background-color: #fff;}.list .filter-popup::-webkit-scrollbar-track:hover {background-color: #f9f9f9;}.list .filter-popup::-webkit-scrollbar-thumb {background-color: #d7d7d9;border: 1px solid #fff;}.list .filter-popup::-webkit-scrollbar-thumb:hover {background-color: #b1b1b3;border-color: #f9f9f9;}.list .filter-popup ul {list-style-type: none;}.list .filter-popup > ul {background: #fff;padding: 8px 0;}.list .filter-popup .group-link,.list .filter-popup .category-link {display: block;padding: 8px 32px;position: relative;}.list .filter-popup .group-link:hover,.list .filter-popup .category-link:hover {background: #f9f9f9;}.list .filter-popup .group-link:focus,.list .filter-popup .category-link:focus {background: #f3faff;outline: none;}.list .filter-popup .group-link .selected-filter-checkmark,.list .filter-popup .category-link .selected-filter-checkmark {position: absolute;left: 8px;}.list .filter-popup .group-link .selected-filter-checkmark > path,.list .filter-popup .category-link .selected-filter-checkmark > path {fill: #0c92f3;}.list .filter-popup .group-link {font-size: 16px;font-weight: bold;}.list .filter-popup .group-item {border-top: 1px solid #e3e4e6;padding: 8px 0;}.list .filter-popup .group-item:first-of-type {border-top: none;padding-top: 0;}.list .filter-popup .group-item:last-of-type {padding-bottom: 0;}.list .no-postings-message {margin-top: 80px;text-align: center;}.list .postings-group {margin: 40px 0px;}.list .horizontal-line {margin-left: 0px;}.list .posting {display: inline-block;position: relative;width: 100%;margin: 10px 0;}.list .posting .posting-apply {position: absolute;top: 0px;right: 0px;height: 40px;text-align: right;}.list .posting .posting-apply a {min-width: 100px;}.list .posting .posting-title:hover h5 {color: #579eee;}.list .posting .agency-posting-title h5 {margin-right: 230px;}.list .posting .posting-categories {height: 30px;vertical-align: top;}.list .posting .posting-category {display: inline-block;margin-right: 15px;}.show .section p {white-space: pre-wrap;}.show .posting-header {-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;}.show .posting-header .posting-headline .posting-category {display: inline-block;margin-right: 10px;}.show .posting-header .postings-btn-wrapper .postings-btn {margin-top: 10px;}@media screen and (min-width: 650px) {.show .posting-header .posting-headline {display: table-cell;width: 100%;}.show .posting-header .postings-btn-wrapper {display: table-cell;vertical-align: top;}.show .posting-header .postings-btn-wrapper .postings-btn {margin-left: 30px;}}@media screen and (max-width: 649px) {.show .posting-header {text-align: center;padding-bottom: 40px;}}@media screen and (max-width: 480px) {.show .postings-btn {width: 100%;}}@media print {.postings-btn {display: none !important;}}.page-centered.section.last-section-apply {text-align: center;margin-bottom: 80px;}.page-centered.section.last-section-apply .btn {display: inline-block;}.page-centered.section.last-section-apply .template-btn-submit {margin: 17.5px 0px;}</style></head><body class="list header-compact"><div class="page list"><div class="main-header page-full-width section-wrapper"><div class="main-header-content page-centered narrow-section page-full-width"><a href="https://jobs.lever.co/GoToGroup" class="main-header-logo"><img alt="GoTo Group logo" src="https://lever-client-logos.s3.us-west-2.amazonaws.com/ea3dc26a-36d6-4989-8596-ac871e4a9e82-1682066441676.png"></a></div></div></div><div class="content-wrapper list-page"><div class="content"><div class="section-wrapper page-full-width"><div class="section page-centered"><div class="filter-bar"><div role="button" class="filter-button-wrapper filter-button-wrapper-margin-right" tabindex="0" aria-label="Filter by Location type: All" aria-haspopup="true" aria-expanded="false"><div class="filter-button filter-button-mlp">Location type<svg class="filter-button-caret icon icon-caret-down" width="16px" height="16px" viewBox="0 0 16 16"><path d="M7.93207 10.767L12.8077 5.54806L12.2857 5.06044L7.93207 9.70631L3.52195 5L3 5.48762L7.93207 10.767Z"></path></svg></div><div class="filter-popup" aria-hidden="false"><ul><li><a class="category-link selected" href="?" rel="nofollow"><svg class="selected-filter-checkmark icon icon-check" width="16px" height="16px" viewBox="0 0 16 16"><path d="M6.2,14.4L0,8.2l2.5-2.5l3.5,3.5c0.1,0.1,0.2,0.1,0.2,0L13.5,2L16,4.5L6.2,14.4z"></path></svg>All</a></li><li><a class="category-link" href="?workplaceType=onsite" rel="nofollow">On-site</a></li><li><a class="category-link" href="?workplaceType=hybrid" rel="nofollow">Hybrid</a></li><li><a class="category-link" href="?workplaceType=remote" rel="nofollow">Remote</a></li></ul></div></div><div role="button" class="filter-button-wrapper filter-button-wrapper-margin-right" tabindex="0" aria-label="Filter by Location: All" aria-haspopup="true" aria-expanded="false"><div class="filter-button filter-button-mlp">Location<svg class="filter-button-caret icon icon-caret-down" width="16px" height="16px" viewBox="0 0 16 16"><path d="M7.93207 10.767L12.8077 5.54806L12.2857 5.06044L7.93207 9.70631L3.52195 5L3 5.48762L7.93207 10.767Z"></path></svg></div><div class="filter-popup" aria-hidden="false"><ul><li><a class="category-link selected" href="?" rel="nofollow"><svg class="selected-filter-checkmark icon icon-check" width="16px" height="16px" viewBox="0 0 16 16"><path d="M6.2,14.4L0,8.2l2.5-2.5l3.5,3.5c0.1,0.1,0.2,0.1,0.2,0L13.5,2L16,4.5L6.2,14.4z"></path></svg>All</a></li><li><a class="category-link" href="?location=Bali" rel="nofollow">Bali</a></li><li><a class="category-link" href="?location=Bandung" rel="nofollow">Bandung</a></li><li><a class="category-link" href="?location=Bengaluru" rel="nofollow">Bengaluru</a></li><li><a class="category-link" href="?location=Bogor" rel="nofollow">Bogor</a></li><li><a class="category-link" href="?location=Depok" rel="nofollow">Depok</a></li><li><a class="category-link" href="?location=Ho%20Chi%20Minh%20City" rel="nofollow">Ho Chi Minh City</a></li><li><a class="category-link" href="?location=Jakarta" rel="nofollow">Jakarta</a></li><li><a class="category-link" href="?location=Singapore" rel="nofollow">Singapore</a></li><li><a class="category-link" href="?location=Surabaya" rel="nofollow">Surabaya</a></li><li><a class="category-link" href="?location=Tangerang" rel="nofollow">Tangerang</a></li><li><a class="category-link" href="?location=Yogyakarta" rel="nofollow">Yogyakarta</a></li></ul></div></div><div role="button" class="filter-button-wrapper filter-button-wrapper-margin-right" tabindex="0" aria-label="Filter by Team: All" aria-haspopup="true" aria-expanded="false"><div class="filter-button filter-button-mlp">Team<svg class="filter-button-caret icon icon-caret-down" width="16px" height="16px" viewBox="0 0 16 16"><path d="M7.93207 10.767L12.8077 5.54806L12.2857 5.06044L7.93207 9.70631L3.52195 5L3 5.48762L7.93207 10.767Z"></path></svg></div><div class="filter-popup" aria-hidden="false"><ul><li class="group-item"><a class="group-link selected" href="?" rel="nofollow"><svg class="selected-filter-checkmark icon icon-check" width="16px" height="16px" viewBox="0 0 16 16"><path d="M6.2,14.4L0,8.2l2.5-2.5l3.5,3.5c0.1,0.1,0.2,0.1,0.2,0L13.5,2L16,4.5L6.2,14.4z"></path></svg>All</a></li><li class="group-item" role="group" aria-label="FinTech - Business Development"><a class="group-link" href="?department=FinTech%20-%20Business%20Development" rel="nofollow">FinTech - Business Development</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Business%20Development&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - Data, Research &amp; Insights"><a class="group-link" href="?department=FinTech%20-%20Data%2C%20Research%20%26%20Insights" rel="nofollow">FinTech - Data, Research &amp; Insights</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Data%2C%20Research%20%26%20Insights&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - Legal &amp; Compliance"><a class="group-link" href="?department=FinTech%20-%20Legal%20%26%20Compliance" rel="nofollow">FinTech - Legal &amp; Compliance</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Legal%20%26%20Compliance&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - Operations &amp; Strategy"><a class="group-link" href="?department=FinTech%20-%20Operations%20%26%20Strategy" rel="nofollow">FinTech - Operations &amp; Strategy</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Operations%20%26%20Strategy&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - Product Management"><a class="group-link" href="?department=FinTech%20-%20Product%20Management" rel="nofollow">FinTech - Product Management</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Product%20Management&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - Risk Management"><a class="group-link" href="?department=FinTech%20-%20Risk%20Management" rel="nofollow">FinTech - Risk Management</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Risk%20Management&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - Technology"><a class="group-link" href="?department=FinTech%20-%20Technology" rel="nofollow">FinTech - Technology</a><ul><li><a class="category-link" href="?department=FinTech%20-%20Technology&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="FinTech - UX &amp; Design"><a class="group-link" href="?department=FinTech%20-%20UX%20%26%20Design" rel="nofollow">FinTech - UX &amp; Design</a><ul><li><a class="category-link" href="?department=FinTech%20-%20UX%20%26%20Design&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="HoldCo - Corporate Affairs"><a class="group-link" href="?department=HoldCo%20-%20Corporate%20Affairs" rel="nofollow">HoldCo - Corporate Affairs</a><ul><li><a class="category-link" href="?department=HoldCo%20-%20Corporate%20Affairs&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="HoldCo - Data, Research &amp; Insights"><a class="group-link" href="?department=HoldCo%20-%20Data%2C%20Research%20%26%20Insights" rel="nofollow">HoldCo - Data, Research &amp; Insights</a><ul><li><a class="category-link" href="?department=HoldCo%20-%20Data%2C%20Research%20%26%20Insights&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="HoldCo - Finance"><a class="group-link" href="?department=HoldCo%20-%20Finance" rel="nofollow">HoldCo - Finance</a><ul><li><a class="category-link" href="?department=HoldCo%20-%20Finance&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="HoldCo - Operations &amp; Strategy"><a class="group-link" href="?department=HoldCo%20-%20Operations%20%26%20Strategy" rel="nofollow">HoldCo - Operations &amp; Strategy</a><ul><li><a class="category-link" href="?department=HoldCo%20-%20Operations%20%26%20Strategy&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="HoldCo - Public Policy &amp; Government Relations"><a class="group-link" href="?department=HoldCo%20-%20Public%20Policy%20%26%20Government%20Relations" rel="nofollow">HoldCo - Public Policy &amp; Government Relations</a><ul><li><a class="category-link" href="?department=HoldCo%20-%20Public%20Policy%20%26%20Government%20Relations&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="HoldCo - Security"><a class="group-link" href="?department=HoldCo%20-%20Security" rel="nofollow">HoldCo - Security</a><ul><li><a class="category-link" href="?department=HoldCo%20-%20Security&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Business Development"><a class="group-link" href="?department=ODS%20-%20Business%20Development" rel="nofollow">ODS - Business Development</a><ul><li><a class="category-link" href="?department=ODS%20-%20Business%20Development&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Data, Research &amp; Insights"><a class="group-link" href="?department=ODS%20-%20Data%2C%20Research%20%26%20Insights" rel="nofollow">ODS - Data, Research &amp; Insights</a><ul><li><a class="category-link" href="?department=ODS%20-%20Data%2C%20Research%20%26%20Insights&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Finance"><a class="group-link" href="?department=ODS%20-%20Finance" rel="nofollow">ODS - Finance</a><ul><li><a class="category-link" href="?department=ODS%20-%20Finance&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Product Management"><a class="group-link" href="?department=ODS%20-%20Product%20Management" rel="nofollow">ODS - Product Management</a><ul><li><a class="category-link" href="?department=ODS%20-%20Product%20Management&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Public Policy &amp; Government Relations"><a class="group-link" href="?department=ODS%20-%20Public%20Policy%20%26%20Government%20Relations" rel="nofollow">ODS - Public Policy &amp; Government Relations</a><ul><li><a class="category-link" href="?department=ODS%20-%20Public%20Policy%20%26%20Government%20Relations&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Risk Management"><a class="group-link" href="?department=ODS%20-%20Risk%20Management" rel="nofollow">ODS - Risk Management</a><ul><li><a class="category-link" href="?department=ODS%20-%20Risk%20Management&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - Technology"><a class="group-link" href="?department=ODS%20-%20Technology" rel="nofollow">ODS - Technology</a><ul><li><a class="category-link" href="?department=ODS%20-%20Technology&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="ODS - UX &amp; Design"><a class="group-link" href="?department=ODS%20-%20UX%20%26%20Design" rel="nofollow">ODS - UX &amp; Design</a><ul><li><a class="category-link" href="?department=ODS%20-%20UX%20%26%20Design&amp;team=-" rel="nofollow">-</a></li></ul></li><li class="group-item" role="group" aria-label="Other teams"><a class="group-link" href="?department=" rel="nofollow">Other teams</a><ul><li><a class="category-link" href="?department=&amp;team=Indonesia%20Region%20-%20Region%20Jabodetabek" rel="nofollow">Indonesia Region - Region Jabodetabek</a></li></ul></li></ul></div></div><div role="button" class="filter-button-wrapper filter-button-wrapper-margin-right" tabindex="0" aria-label="Filter by Work type: All" aria-haspopup="true" aria-expanded="false"><div class="filter-button filter-button-mlp">Work type<svg class="filter-button-caret icon icon-caret-down" width="16px" height="16px" viewBox="0 0 16 16"><path d="M7.93207 10.767L12.8077 5.54806L12.2857 5.06044L7.93207 9.70631L3.52195 5L3 5.48762L7.93207 10.767Z"></path></svg></div><div class="filter-popup" aria-hidden="false"><ul><li><a class="category-link selected" href="?" rel="nofollow"><svg class="selected-filter-checkmark icon icon-check" width="16px" height="16px" viewBox="0 0 16 16"><path d="M6.2,14.4L0,8.2l2.5-2.5l3.5,3.5c0.1,0.1,0.2,0.1,0.2,0L13.5,2L16,4.5L6.2,14.4z"></path></svg>All</a></li><li><a class="category-link" href="?commitment=Direct%20Contract" rel="nofollow">Direct Contract</a></li><li><a class="category-link" href="?commitment=Internship" rel="nofollow">Internship</a></li><li><a class="category-link" href="?commitment=Permanent" rel="nofollow">Permanent</a></li><li><a class="category-link" href="?commitment=" rel="nofollow">Uncategorized</a></li></ul></div></div><noscript><style type="text/css">.filter-button-wrapper:focus {outline: none;}.filter-button-wrapper .filter-popup {top: 100%;}.filter-button-wrapper:focus .filter-popup,.filter-button-wrapper:hover .filter-popup,.filter-button-wrapper:active .filter-popup {display: block;}</style></noscript></div><div class="postings-wrapper"><div class="postings-group"><div class="large-category-header">FinTech - Business Development</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="07d2ca8f-3a58-4d41-9ffe-ed72e8835433"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/07d2ca8f-3a58-4d41-9ffe-ed72e8835433" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/07d2ca8f-3a58-4d41-9ffe-ed72e8835433"><h5 data-qa="posting-name">Finance Business Partner - Groceries - #10043</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="70493d8a-7d7f-4660-b1ed-c792d0d765be"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/70493d8a-7d7f-4660-b1ed-c792d0d765be" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/70493d8a-7d7f-4660-b1ed-c792d0d765be"><h5 data-qa="posting-name">Head of Sales - Midtrans - #9618</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="1b45618e-9fc6-4462-95c0-c89e99f739d4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/1b45618e-9fc6-4462-95c0-c89e99f739d4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/1b45618e-9fc6-4462-95c0-c89e99f739d4"><h5 data-qa="posting-name">Head of Sales Strategy - Merchant Services - #9993</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="d6ac496c-e0ad-4669-b594-ede9bf8d55f9"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/d6ac496c-e0ad-4669-b594-ede9bf8d55f9" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/d6ac496c-e0ad-4669-b594-ede9bf8d55f9"><h5 data-qa="posting-name">Key Account Manager #9874</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="3f4f687f-8599-4d5c-96d5-8af234c3b09d"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/3f4f687f-8599-4d5c-96d5-8af234c3b09d" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/3f4f687f-8599-4d5c-96d5-8af234c3b09d"><h5 data-qa="posting-name">Onboarding &amp; Support Business Lead</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="18bd3c46-648a-4204-8c39-9a3a8c3803e2"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/18bd3c46-648a-4204-8c39-9a3a8c3803e2" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/18bd3c46-648a-4204-8c39-9a3a8c3803e2"><h5 data-qa="posting-name">Senior Sales Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="60b17958-bbef-411b-9024-5cbbabf12fff"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/60b17958-bbef-411b-9024-5cbbabf12fff" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/60b17958-bbef-411b-9024-5cbbabf12fff"><h5 data-qa="posting-name">Senior Sales Manager - Midtrans - #9679</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - Data, Research &amp; Insights</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="6be8c0fe-d1e1-416f-8b8c-19d792255ff4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/6be8c0fe-d1e1-416f-8b8c-19d792255ff4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/6be8c0fe-d1e1-416f-8b8c-19d792255ff4"><h5 data-qa="posting-name">Data Warehouse Engineer - Payments Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="44117b68-3ece-40ac-91c1-920caadfe5dd"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/44117b68-3ece-40ac-91c1-920caadfe5dd" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/44117b68-3ece-40ac-91c1-920caadfe5dd"><h5 data-qa="posting-name">Principal Data Engineer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="fc862fb7-6833-49c3-96c7-c8ee71cd0fe4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/fc862fb7-6833-49c3-96c7-c8ee71cd0fe4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/fc862fb7-6833-49c3-96c7-c8ee71cd0fe4"><h5 data-qa="posting-name">Researcher - Merchant Services</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="5611e062-e094-4da3-ab1c-75c85cf62194"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/5611e062-e094-4da3-ab1c-75c85cf62194" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/5611e062-e094-4da3-ab1c-75c85cf62194"><h5 data-qa="posting-name">Risk Data Scientist</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="a539cdc1-109f-48e8-9b24-1a831b735f01"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a539cdc1-109f-48e8-9b24-1a831b735f01" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a539cdc1-109f-48e8-9b24-1a831b735f01"><h5 data-qa="posting-name">Senior Data Scientist</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="cc1c5265-723f-48c1-a04d-b07cc49b3e42"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/cc1c5265-723f-48c1-a04d-b07cc49b3e42" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/cc1c5265-723f-48c1-a04d-b07cc49b3e42"><h5 data-qa="posting-name">Senior Data Scientist - Computer Vision - KYC</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - Legal &amp; Compliance</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="365ef8c5-c4b7-4aab-9d0d-eabea5ef448b"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/365ef8c5-c4b7-4aab-9d0d-eabea5ef448b" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/365ef8c5-c4b7-4aab-9d0d-eabea5ef448b"><h5 data-qa="posting-name">AML/CFT Manager - Fintech - MAB</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="da40c805-1fbd-4228-8059-b7729041021e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/da40c805-1fbd-4228-8059-b7729041021e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/da40c805-1fbd-4228-8059-b7729041021e"><h5 data-qa="posting-name">FinServ Compliance Manager - #9918</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="19489ced-76de-411a-8205-8aebdef22d4c"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/19489ced-76de-411a-8205-8aebdef22d4c" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/19489ced-76de-411a-8205-8aebdef22d4c"><h5 data-qa="posting-name">Payments Compliance Manager - #9917</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - Operations &amp; Strategy</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="192f57ad-633c-4006-a0df-09f148bb5ece"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/192f57ad-633c-4006-a0df-09f148bb5ece" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/192f57ad-633c-4006-a0df-09f148bb5ece"><h5 data-qa="posting-name">Business Analytics Lead, Money Management - Merchant Services - #9690</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="e7e1c1fc-08b0-4539-abf0-84b5685c319a"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e7e1c1fc-08b0-4539-abf0-84b5685c319a" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e7e1c1fc-08b0-4539-abf0-84b5685c319a"><h5 data-qa="posting-name">Business Associate, Transfers - Consumer Payment - #9865</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="424140f5-5064-4ce2-8c4d-2b7ecbb14d51"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/424140f5-5064-4ce2-8c4d-2b7ecbb14d51" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/424140f5-5064-4ce2-8c4d-2b7ecbb14d51"><h5 data-qa="posting-name">Gopay Later Growth Senior Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="afb5bc40-aa4f-4837-a2d9-7d38eade2599"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/afb5bc40-aa4f-4837-a2d9-7d38eade2599" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/afb5bc40-aa4f-4837-a2d9-7d38eade2599"><h5 data-qa="posting-name">Strategy Senior Manager, Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - Product Management</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="e694228e-5468-4193-9301-7aa79d1f62a4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e694228e-5468-4193-9301-7aa79d1f62a4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e694228e-5468-4193-9301-7aa79d1f62a4"><h5 data-qa="posting-name">Growth Lead - Consumer Lending (E-Commerce)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="ac34e3be-5747-4371-ad39-4b61d62302ce"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ac34e3be-5747-4371-ad39-4b61d62302ce" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ac34e3be-5747-4371-ad39-4b61d62302ce"><h5 data-qa="posting-name">Growth Lead - GoPay Later</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="761415aa-89b7-4ffb-a19b-2b91ac4243b4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/761415aa-89b7-4ffb-a19b-2b91ac4243b4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/761415aa-89b7-4ffb-a19b-2b91ac4243b4"><h5 data-qa="posting-name">Growth Lead (Merchant Lending)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="35da9d16-f619-4a14-a715-9033bb36eb7f"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/35da9d16-f619-4a14-a715-9033bb36eb7f" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/35da9d16-f619-4a14-a715-9033bb36eb7f"><h5 data-qa="posting-name">Product Manager 2 - Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="312d1b95-21ea-4c90-93e8-20724b6208e7"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/312d1b95-21ea-4c90-93e8-20724b6208e7" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/312d1b95-21ea-4c90-93e8-20724b6208e7"><h5 data-qa="posting-name">Senior Product Manager - Merchant Productivity</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - Risk Management</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="60d37414-287e-4552-a0d0-accf1737d0ce"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/60d37414-287e-4552-a0d0-accf1737d0ce" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/60d37414-287e-4552-a0d0-accf1737d0ce"><h5 data-qa="posting-name">Risk Analyst - Payments #9746</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="a61cda6c-82fd-4daf-aabf-3db91e01684f"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a61cda6c-82fd-4daf-aabf-3db91e01684f" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a61cda6c-82fd-4daf-aabf-3db91e01684f"><h5 data-qa="posting-name">Risk Manager - Payments #9868</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59"><h5 data-qa="posting-name">Risk Strategy - Consumer Lending #9919</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="e33b73ae-63e2-4e9c-aff9-03e9127e4e4e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e33b73ae-63e2-4e9c-aff9-03e9127e4e4e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e33b73ae-63e2-4e9c-aff9-03e9127e4e4e"><h5 data-qa="posting-name">Risk Strategy - Consumer Lending #9919</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore</span></div></a></div><div class="posting" data-qa-posting-id="ce3ba8fb-6d8e-4634-ac8e-76a10646bfea"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ce3ba8fb-6d8e-4634-ac8e-76a10646bfea" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ce3ba8fb-6d8e-4634-ac8e-76a10646bfea"><h5 data-qa="posting-name">Senior Risk Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">Hybrid — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="17408b81-f5a0-4f15-afae-cc04ed7e43b6"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/17408b81-f5a0-4f15-afae-cc04ed7e43b6" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/17408b81-f5a0-4f15-afae-cc04ed7e43b6"><h5 data-qa="posting-name">Underwriting and Credit Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f"><h5 data-qa="posting-name">Underwriting Lead - Merchant Lending - #9990</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee"><h5 data-qa="posting-name">Underwriting Strategy &amp; Policy Senior Lead - Merchant Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - Technology</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="a3543985-6d2c-45cf-84f7-312ec7efed36"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a3543985-6d2c-45cf-84f7-312ec7efed36" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a3543985-6d2c-45cf-84f7-312ec7efed36"><h5 data-qa="posting-name">Full Stack Engineer - Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="36caef5f-7a1c-4326-80b4-8c146060ac70"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/36caef5f-7a1c-4326-80b4-8c146060ac70" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/36caef5f-7a1c-4326-80b4-8c146060ac70"><h5 data-qa="posting-name">IT GRC Senior Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5"><h5 data-qa="posting-name">Lead Software Engineer - Payments Data Products &amp; Infra</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="472ae629-87cb-4f8c-bb69-eae35cf3751e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/472ae629-87cb-4f8c-bb69-eae35cf3751e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/472ae629-87cb-4f8c-bb69-eae35cf3751e"><h5 data-qa="posting-name">SDET - Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="0169bd4d-f352-4162-8e8e-2c09df5b8db4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/0169bd4d-f352-4162-8e8e-2c09df5b8db4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/0169bd4d-f352-4162-8e8e-2c09df5b8db4"><h5 data-qa="posting-name">SDET Engineer - Consumer Experience (Bangalore)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="7b320e00-3745-4478-8097-93405566819d"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/7b320e00-3745-4478-8097-93405566819d" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/7b320e00-3745-4478-8097-93405566819d"><h5 data-qa="posting-name">SDET Engineer - Consumer Experience (Jakarta)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="10dbc666-80f8-4250-85ee-59fa92d056aa"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/10dbc666-80f8-4250-85ee-59fa92d056aa" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/10dbc666-80f8-4250-85ee-59fa92d056aa"><h5 data-qa="posting-name">Senior Data Engineer (Data Platform) - Payments Data Products &amp; Infra</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="43fa73a0-3946-4921-8dd1-8dbdf5a9726e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/43fa73a0-3946-4921-8dd1-8dbdf5a9726e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/43fa73a0-3946-4921-8dd1-8dbdf5a9726e"><h5 data-qa="posting-name">Senior Mobile Engineer (Android) - Payments Data Products &amp; Infra</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="e83c2567-28a4-411c-adff-7306422a0482"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e83c2567-28a4-411c-adff-7306422a0482" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e83c2567-28a4-411c-adff-7306422a0482"><h5 data-qa="posting-name">Senior SDET - Consumer Payments</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="d846246a-bcb3-42c4-af55-cb9c5df9fd8b"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/d846246a-bcb3-42c4-af55-cb9c5df9fd8b" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/d846246a-bcb3-42c4-af55-cb9c5df9fd8b"><h5 data-qa="posting-name">Senior SDET - Consumer Payments</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70"><h5 data-qa="posting-name">Senior SDET - Money Management</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="672e0a30-76dc-4a8b-9821-5d702374a593"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/672e0a30-76dc-4a8b-9821-5d702374a593" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/672e0a30-76dc-4a8b-9821-5d702374a593"><h5 data-qa="posting-name">Senior Software Engineer - Online Merchant</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="d3b7122b-692b-4815-8aa9-f1d0259bccd5"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/d3b7122b-692b-4815-8aa9-f1d0259bccd5" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/d3b7122b-692b-4815-8aa9-f1d0259bccd5"><h5 data-qa="posting-name">Senior Software Engineer (Back End) - Consumer Lending (Funding/Collection)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="7507f24f-ec5c-464a-822a-96465f56de6b"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/7507f24f-ec5c-464a-822a-96465f56de6b" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/7507f24f-ec5c-464a-822a-96465f56de6b"><h5 data-qa="posting-name">Senior Software Engineer (Back End) - Consumer Lending (Risk)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="88358de8-e37b-4bd6-9afe-359eea3128b9"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/88358de8-e37b-4bd6-9afe-359eea3128b9" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/88358de8-e37b-4bd6-9afe-359eea3128b9"><h5 data-qa="posting-name">Senior Software Engineer (Full Stack) - Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta / Singapore</span></div></a></div><div class="posting" data-qa-posting-id="9b2d9240-3315-4b28-a7d6-73e2a097c8d7"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/9b2d9240-3315-4b28-a7d6-73e2a097c8d7" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/9b2d9240-3315-4b28-a7d6-73e2a097c8d7"><h5 data-qa="posting-name">Site Reliability Engineer - Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="a5869e9e-5306-478b-b1e0-1e3966143637"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a5869e9e-5306-478b-b1e0-1e3966143637" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a5869e9e-5306-478b-b1e0-1e3966143637"><h5 data-qa="posting-name">Software Development Engineer in Test - API Automation</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="7b97ddd0-2314-4d1a-8440-fc9a9fc5111c"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/7b97ddd0-2314-4d1a-8440-fc9a9fc5111c" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/7b97ddd0-2314-4d1a-8440-fc9a9fc5111c"><h5 data-qa="posting-name">Software Development Engineer in Test KYC</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="ad7a1160-4d07-4f4a-a2d3-c362afac18ac"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ad7a1160-4d07-4f4a-a2d3-c362afac18ac" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ad7a1160-4d07-4f4a-a2d3-c362afac18ac"><h5 data-qa="posting-name">Software Engineer (Backend) - Consumer Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">FinTech - UX &amp; Design</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="8549d480-ea87-43fe-b974-b7c65a9851f9"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/8549d480-ea87-43fe-b974-b7c65a9851f9" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/8549d480-ea87-43fe-b974-b7c65a9851f9"><h5 data-qa="posting-name">UX Writer - Merchant Lending</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="d224e3c3-d6f0-43cd-9608-cec1990cb6a0"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/d224e3c3-d6f0-43cd-9608-cec1990cb6a0" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/d224e3c3-d6f0-43cd-9608-cec1990cb6a0"><h5 data-qa="posting-name">UX Writer - Merchant Services</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">HoldCo - Corporate Affairs</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="7ad0a551-f26b-4eb8-9849-cc04ac5dba4d"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/7ad0a551-f26b-4eb8-9849-cc04ac5dba4d" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/7ad0a551-f26b-4eb8-9849-cc04ac5dba4d"><h5 data-qa="posting-name">Media Intelligence Intern</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Internship</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">HoldCo - Data, Research &amp; Insights</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="6d8ebb73-2348-423d-847e-b8a8408ac1ed"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/6d8ebb73-2348-423d-847e-b8a8408ac1ed" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/6d8ebb73-2348-423d-847e-b8a8408ac1ed"><h5 data-qa="posting-name">Data Engineer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="36d71dff-c9ac-44b8-b870-f74d941bd7d3"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/36d71dff-c9ac-44b8-b870-f74d941bd7d3" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/36d71dff-c9ac-44b8-b870-f74d941bd7d3"><h5 data-qa="posting-name">Data Engineer Lead</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="73e71b86-d53f-4841-92ec-4bd09a0ef479"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/73e71b86-d53f-4841-92ec-4bd09a0ef479" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/73e71b86-d53f-4841-92ec-4bd09a0ef479"><h5 data-qa="posting-name">Senior Data Engineer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">HoldCo - Finance</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="56966262-038f-497f-84c1-f360a9440c55"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/56966262-038f-497f-84c1-f360a9440c55" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/56966262-038f-497f-84c1-f360a9440c55"><h5 data-qa="posting-name">Assistant Tax Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="33a32026-3986-42fb-9ddc-a45e1053c9e0"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/33a32026-3986-42fb-9ddc-a45e1053c9e0" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/33a32026-3986-42fb-9ddc-a45e1053c9e0"><h5 data-qa="posting-name">Junior Tax Officer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="245a0ec2-e5cf-421e-9646-70b079f115eb"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/245a0ec2-e5cf-421e-9646-70b079f115eb" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/245a0ec2-e5cf-421e-9646-70b079f115eb"><h5 data-qa="posting-name">Senior Technical Accounting Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore / Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="a209e959-6eaf-4d0e-807a-42dcaffbaf91"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a209e959-6eaf-4d0e-807a-42dcaffbaf91" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a209e959-6eaf-4d0e-807a-42dcaffbaf91"><h5 data-qa="posting-name">Senior Transfer Pricing</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="4ccd018d-cb4e-489d-8b12-b120b364a6ce"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/4ccd018d-cb4e-489d-8b12-b120b364a6ce" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/4ccd018d-cb4e-489d-8b12-b120b364a6ce"><h5 data-qa="posting-name">Sourcing Specialist (Singapore)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore</span></div></a></div><div class="posting" data-qa-posting-id="7c53764a-a062-4971-b209-51ae7cfb67e4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/7c53764a-a062-4971-b209-51ae7cfb67e4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/7c53764a-a062-4971-b209-51ae7cfb67e4"><h5 data-qa="posting-name">Technical Accounting Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta / Singapore</span></div></a></div></div><div class="postings-group"><div class="large-category-header">HoldCo - Operations &amp; Strategy</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="2242125a-7155-4353-bc79-473d237d6808"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/2242125a-7155-4353-bc79-473d237d6808" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/2242125a-7155-4353-bc79-473d237d6808"><h5 data-qa="posting-name">Business Intelligence Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="f1204bec-20bc-447e-b01c-74ac912b16da"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/f1204bec-20bc-447e-b01c-74ac912b16da" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/f1204bec-20bc-447e-b01c-74ac912b16da"><h5 data-qa="posting-name">Senior Business Intelligence</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">HoldCo - Public Policy &amp; Government Relations</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e"><h5 data-qa="posting-name">Manager of Policy Communication</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">HoldCo - Security</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="fa9b44db-1ec0-4856-873f-afe6dfcb9d22"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/fa9b44db-1ec0-4856-873f-afe6dfcb9d22" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/fa9b44db-1ec0-4856-873f-afe6dfcb9d22"><h5 data-qa="posting-name">Data Protection &amp; Privacy Office</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="481d69bc-7824-4c88-bc7c-c21902cbf131"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/481d69bc-7824-4c88-bc7c-c21902cbf131" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/481d69bc-7824-4c88-bc7c-c21902cbf131"><h5 data-qa="posting-name">Data Protection &amp; Privacy Office - Strategy &amp; Monitoring</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Business Development</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="f7bcbd05-b658-4b80-8577-87df02aaae98"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98"><h5 data-qa="posting-name">Account Executive (Jakarta North)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Direct Contract</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa"><h5 data-qa="posting-name">Account Manager - Tangerang</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Tangerang</span></div></a></div><div class="posting" data-qa-posting-id="5e3ad167-6545-4f00-9532-abc5c348b3b0"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/5e3ad167-6545-4f00-9532-abc5c348b3b0" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/5e3ad167-6545-4f00-9532-abc5c348b3b0"><h5 data-qa="posting-name">Account Manager (East Jakarta)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="dfa07479-8e81-43ff-a9ad-4ae02f72207e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/dfa07479-8e81-43ff-a9ad-4ae02f72207e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/dfa07479-8e81-43ff-a9ad-4ae02f72207e"><h5 data-qa="posting-name">Account Manager (North East Jakarta)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1"><h5 data-qa="posting-name">Area CE Associate - Central Jakarta</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="4220480a-be7c-4f31-8d6b-59a21558b594"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/4220480a-be7c-4f31-8d6b-59a21558b594" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/4220480a-be7c-4f31-8d6b-59a21558b594"><h5 data-qa="posting-name">Area Consumer Engagement Associate</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bali</span></div></a></div><div class="posting" data-qa-posting-id="e60f0ed3-0fe4-4f85-b1a7-167888e159a4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e60f0ed3-0fe4-4f85-b1a7-167888e159a4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e60f0ed3-0fe4-4f85-b1a7-167888e159a4"><h5 data-qa="posting-name">Area Consumer Engagement Associate (Yogya)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Yogyakarta</span></div></a></div><div class="posting" data-qa-posting-id="95352b3a-e239-4d08-8e8a-aeedba71872e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/95352b3a-e239-4d08-8e8a-aeedba71872e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/95352b3a-e239-4d08-8e8a-aeedba71872e"><h5 data-qa="posting-name">Area Operations Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bandung</span></div></a></div><div class="posting" data-qa-posting-id="18674f77-24b2-46a4-86bb-7b5e7fe71f2c"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/18674f77-24b2-46a4-86bb-7b5e7fe71f2c" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/18674f77-24b2-46a4-86bb-7b5e7fe71f2c"><h5 data-qa="posting-name">Area Operations Manager (Bogor Depok)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Depok / Bogor</span></div></a></div><div class="posting" data-qa-posting-id="d9e236de-3ffc-4aae-9895-20212cdbeceb"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/d9e236de-3ffc-4aae-9895-20212cdbeceb" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/d9e236de-3ffc-4aae-9895-20212cdbeceb"><h5 data-qa="posting-name">Area Operations Manager (Jakarta)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="e1eeec09-779c-48f5-a7f8-90ecf966dc4e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e1eeec09-779c-48f5-a7f8-90ecf966dc4e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e1eeec09-779c-48f5-a7f8-90ecf966dc4e"><h5 data-qa="posting-name">Area Sales Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Surabaya</span></div></a></div><div class="posting" data-qa-posting-id="8c7385d0-98c1-41d8-b780-6c84ed6c40ad"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/8c7385d0-98c1-41d8-b780-6c84ed6c40ad" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/8c7385d0-98c1-41d8-b780-6c84ed6c40ad"><h5 data-qa="posting-name">Area Sales Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="abeeede5-8126-4e1d-b4e4-c5b4afbff43c"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/abeeede5-8126-4e1d-b4e4-c5b4afbff43c" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/abeeede5-8126-4e1d-b4e4-c5b4afbff43c"><h5 data-qa="posting-name">Digital Performance Marketing Specialist Gojek</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="471c9704-cd3d-4cc3-9ddb-36f64cfa787b"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/471c9704-cd3d-4cc3-9ddb-36f64cfa787b" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/471c9704-cd3d-4cc3-9ddb-36f64cfa787b"><h5 data-qa="posting-name">Driver Strategy Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="306b0f44-a6f1-4f43-ba05-6e35695d70f3"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/306b0f44-a6f1-4f43-ba05-6e35695d70f3" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/306b0f44-a6f1-4f43-ba05-6e35695d70f3"><h5 data-qa="posting-name">Food Affordable Strategy Data Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="6f3368c9-6e84-489c-add3-4ad1fd4b9519"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/6f3368c9-6e84-489c-add3-4ad1fd4b9519" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/6f3368c9-6e84-489c-add3-4ad1fd4b9519"><h5 data-qa="posting-name">Operations Analyst, Data Operations (Trust &amp; Safety)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore</span></div></a></div><div class="posting" data-qa-posting-id="a062b588-6d29-4628-aa01-2e9e4a6da8f0"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a062b588-6d29-4628-aa01-2e9e4a6da8f0" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a062b588-6d29-4628-aa01-2e9e4a6da8f0"><h5 data-qa="posting-name">Region Consumer Engagement Associate (Marketing) - Jabodetabek</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="63b9af16-d876-43e2-8f29-3abb844379e9"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/63b9af16-d876-43e2-8f29-3abb844379e9" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/63b9af16-d876-43e2-8f29-3abb844379e9"><h5 data-qa="posting-name">Region Consumer Engagement Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="ea0f2d5a-c9d5-4202-ac91-a671b128bfb4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ea0f2d5a-c9d5-4202-ac91-a671b128bfb4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ea0f2d5a-c9d5-4202-ac91-a671b128bfb4"><h5 data-qa="posting-name">Region Merchant Development Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="29c083cb-0dda-4ce1-9513-788f00e8f482"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/29c083cb-0dda-4ce1-9513-788f00e8f482" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/29c083cb-0dda-4ce1-9513-788f00e8f482"><h5 data-qa="posting-name">Region Operations Associate</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="0489939a-c571-4d5f-adaa-95ceac8912c5"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/0489939a-c571-4d5f-adaa-95ceac8912c5" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/0489939a-c571-4d5f-adaa-95ceac8912c5"><h5 data-qa="posting-name">Region Operations Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="a5f5f567-0e95-4763-8c50-c4dcfb0b757e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a5f5f567-0e95-4763-8c50-c4dcfb0b757e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a5f5f567-0e95-4763-8c50-c4dcfb0b757e"><h5 data-qa="posting-name">Sales Strategy Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="f39be622-e287-41df-bcb2-7389478a1be4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/f39be622-e287-41df-bcb2-7389478a1be4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/f39be622-e287-41df-bcb2-7389478a1be4"><h5 data-qa="posting-name">Sales Support Senior Associate, Enterprise</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2"><h5 data-qa="posting-name">Strategic Partnerships Lead</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="eaab5bee-084d-4cdc-bd08-63230251009c"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/eaab5bee-084d-4cdc-bd08-63230251009c" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/eaab5bee-084d-4cdc-bd08-63230251009c"><h5 data-qa="posting-name">Supply Strategy Data Analyst [Ads]</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87"><h5 data-qa="posting-name">Transport Strategic Insight</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="8b9f79f1-25ac-45cd-b2a1-98a4e7217644"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/8b9f79f1-25ac-45cd-b2a1-98a4e7217644" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/8b9f79f1-25ac-45cd-b2a1-98a4e7217644"><h5 data-qa="posting-name">Vendor Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Data, Research &amp; Insights</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="acc8cca4-0f98-4c31-8d24-76446d0ce0c5"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/acc8cca4-0f98-4c31-8d24-76446d0ce0c5" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/acc8cca4-0f98-4c31-8d24-76446d0ce0c5"><h5 data-qa="posting-name">Senior Data Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="f680021a-b5cc-43ea-a048-255827353a92"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/f680021a-b5cc-43ea-a048-255827353a92" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/f680021a-b5cc-43ea-a048-255827353a92"><h5 data-qa="posting-name">Senior Data Analyst - India</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="33ecd052-8ff7-45aa-b712-d1060cef1c8d"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/33ecd052-8ff7-45aa-b712-d1060cef1c8d" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/33ecd052-8ff7-45aa-b712-d1060cef1c8d"><h5 data-qa="posting-name">Senior Data Scientist - Marketplace</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="86673189-b5e2-4ace-b1a3-5ab20f14d84d"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/86673189-b5e2-4ace-b1a3-5ab20f14d84d" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/86673189-b5e2-4ace-b1a3-5ab20f14d84d"><h5 data-qa="posting-name">Senior Data Scientist - Marketplace (India)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="34f6146a-c482-407c-a31c-72ac9bb90a7c"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/34f6146a-c482-407c-a31c-72ac9bb90a7c" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/34f6146a-c482-407c-a31c-72ac9bb90a7c"><h5 data-qa="posting-name">Senior Data Scientist - Marketplace (Singapore)</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Singapore</span></div></a></div><div class="posting" data-qa-posting-id="c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69"><h5 data-qa="posting-name">Senior Data Warehouse Engineer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="2b430ba4-210e-4db6-a63e-c11459a0304f"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/2b430ba4-210e-4db6-a63e-c11459a0304f" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/2b430ba4-210e-4db6-a63e-c11459a0304f"><h5 data-qa="posting-name">Senior Data Warehouse Engineer - India</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="c54483cb-dd68-43c3-9fe5-623dbb6db56f"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/c54483cb-dd68-43c3-9fe5-623dbb6db56f" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/c54483cb-dd68-43c3-9fe5-623dbb6db56f"><h5 data-qa="posting-name">Senior Principal Data Scientist</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Finance</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="9aa5a060-e2c3-4296-9057-049a3c1fa5bd"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/9aa5a060-e2c3-4296-9057-049a3c1fa5bd" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/9aa5a060-e2c3-4296-9057-049a3c1fa5bd"><h5 data-qa="posting-name">Accountant</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="111ec429-1fa8-43ef-a9bc-94ad60444ea9"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/111ec429-1fa8-43ef-a9bc-94ad60444ea9" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/111ec429-1fa8-43ef-a9bc-94ad60444ea9"><h5 data-qa="posting-name">FP&amp;A - Consolidation Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Product Management</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="59548879-6e27-4764-9378-85f7f2003a91"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/59548879-6e27-4764-9378-85f7f2003a91" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/59548879-6e27-4764-9378-85f7f2003a91"><h5 data-qa="posting-name">CRM Executive - Vietnam</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Ho Chi Minh City</span></div></a></div><div class="posting" data-qa-posting-id="4362376c-4d70-43fb-85c4-3734fc6eeff5"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/4362376c-4d70-43fb-85c4-3734fc6eeff5" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/4362376c-4d70-43fb-85c4-3734fc6eeff5"><h5 data-qa="posting-name">Growth Ops  - GoFood</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e"><h5 data-qa="posting-name">Growth Planning &amp; Operation - GoFood</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="f77e2886-beb3-4cb1-a333-48376830053e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/f77e2886-beb3-4cb1-a333-48376830053e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/f77e2886-beb3-4cb1-a333-48376830053e"><h5 data-qa="posting-name">Jr. Manager of Ads Sales Assisted Growth Ops</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="8d38e7a3-89eb-4d80-997d-b08404b0e1a0"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/8d38e7a3-89eb-4d80-997d-b08404b0e1a0" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/8d38e7a3-89eb-4d80-997d-b08404b0e1a0"><h5 data-qa="posting-name">Marketing Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="68d7d220-1f05-49ea-9f34-fffe0ef75aea"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/68d7d220-1f05-49ea-9f34-fffe0ef75aea" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/68d7d220-1f05-49ea-9f34-fffe0ef75aea"><h5 data-qa="posting-name">Product Marketing Manager</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="da8d4a37-f5a4-4436-8743-58c787781285"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/da8d4a37-f5a4-4436-8743-58c787781285" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/da8d4a37-f5a4-4436-8743-58c787781285"><h5 data-qa="posting-name">Senior Growth Manager - Food &amp; Ads</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Public Policy &amp; Government Relations</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5"><h5 data-qa="posting-name">Manager of Food &amp; Groceries Regulatory</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Risk Management</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="419ca012-7459-4d3e-acfc-381d32c8ae7e"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/419ca012-7459-4d3e-acfc-381d32c8ae7e" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/419ca012-7459-4d3e-acfc-381d32c8ae7e"><h5 data-qa="posting-name">Senior Risk Analyst</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - Technology</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="dfe98505-36d8-4467-aa36-df8599ab69d8"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/dfe98505-36d8-4467-aa36-df8599ab69d8" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/dfe98505-36d8-4467-aa36-df8599ab69d8"><h5 data-qa="posting-name">Engineering Manager - Data Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="1098f20b-5c61-4b52-ac12-0c7d065e80db"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/1098f20b-5c61-4b52-ac12-0c7d065e80db" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/1098f20b-5c61-4b52-ac12-0c7d065e80db"><h5 data-qa="posting-name">Engineering Manager - Marketplace</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="d606bc58-6765-4017-a0c0-3e4bcf0aeb99"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/d606bc58-6765-4017-a0c0-3e4bcf0aeb99" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/d606bc58-6765-4017-a0c0-3e4bcf0aeb99"><h5 data-qa="posting-name">Head of Engineering - Transport</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="81fac6c8-76c8-4867-88c3-7aeb6f6d0c72"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/81fac6c8-76c8-4867-88c3-7aeb6f6d0c72" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/81fac6c8-76c8-4867-88c3-7aeb6f6d0c72"><h5 data-qa="posting-name">Lead SDET - Automation Engineering Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="b1f917e0-a9a0-4a3c-a4c3-505e41c1f034"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/b1f917e0-a9a0-4a3c-a4c3-505e41c1f034" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/b1f917e0-a9a0-4a3c-a4c3-505e41c1f034"><h5 data-qa="posting-name">Lead Software Engineer - Gofood</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="3ff4035e-6ad8-46c4-ac71-cf1fee12b49a"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/3ff4035e-6ad8-46c4-ac71-cf1fee12b49a" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/3ff4035e-6ad8-46c4-ac71-cf1fee12b49a"><h5 data-qa="posting-name">Lead Software Engineer - Observability team</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="a54f9d2d-4b2d-43c3-bb82-c6705beefbcf"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a54f9d2d-4b2d-43c3-bb82-c6705beefbcf" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a54f9d2d-4b2d-43c3-bb82-c6705beefbcf"><h5 data-qa="posting-name">Principal Software Engineer - Marketplace</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="426f18b4-739e-4da0-a74b-446c349c0a31"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/426f18b4-739e-4da0-a74b-446c349c0a31" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/426f18b4-739e-4da0-a74b-446c349c0a31"><h5 data-qa="posting-name">Principal Software Engineer (Backend) - Transport</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="376aefd9-6d6c-4e57-8040-a3b0dd416d26"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/376aefd9-6d6c-4e57-8040-a3b0dd416d26" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/376aefd9-6d6c-4e57-8040-a3b0dd416d26"><h5 data-qa="posting-name">SDET - Automation Engineering Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="93b5e2e0-272f-4091-b7aa-fafc06ca67c4"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/93b5e2e0-272f-4091-b7aa-fafc06ca67c4" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/93b5e2e0-272f-4091-b7aa-fafc06ca67c4"><h5 data-qa="posting-name">Senior SDET - Automation Engineering Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="68f907a3-329f-411b-af2d-a66b38243919"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/68f907a3-329f-411b-af2d-a66b38243919" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/68f907a3-329f-411b-af2d-a66b38243919"><h5 data-qa="posting-name">Senior Software Engineer - Data Science Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="0216fdb3-64c6-4e37-ace8-1d9c0c79ca23"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/0216fdb3-64c6-4e37-ace8-1d9c0c79ca23" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/0216fdb3-64c6-4e37-ace8-1d9c0c79ca23"><h5 data-qa="posting-name">Senior Software Engineer - Event Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="3c6bca98-cc50-43be-bafd-46ea1ab35594"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/3c6bca98-cc50-43be-bafd-46ea1ab35594" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/3c6bca98-cc50-43be-bafd-46ea1ab35594"><h5 data-qa="posting-name">Software Engineer - Data Science Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="2db27f2b-d849-41c8-9273-5ba2541dece6"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/2db27f2b-d849-41c8-9273-5ba2541dece6" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/2db27f2b-d849-41c8-9273-5ba2541dece6"><h5 data-qa="posting-name">Software Engineer ( Backend) - GoFood</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="331177df-4294-4bc1-93a4-6459ff18ef97"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/331177df-4294-4bc1-93a4-6459ff18ef97" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/331177df-4294-4bc1-93a4-6459ff18ef97"><h5 data-qa="posting-name">Software Engineer (Backend) - Transport</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="9fa9af02-5e5c-4812-b98f-fba1a5041b25"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/9fa9af02-5e5c-4812-b98f-fba1a5041b25" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/9fa9af02-5e5c-4812-b98f-fba1a5041b25"><h5 data-qa="posting-name">Software Engineer (iOS) - Groceries</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="3dd90bbb-893d-4f4e-bcb1-d328a1e3696b"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/3dd90bbb-893d-4f4e-bcb1-d328a1e3696b" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/3dd90bbb-893d-4f4e-bcb1-d328a1e3696b"><h5 data-qa="posting-name">Sr. Software Engineer (Android) - Engineering Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="424adaad-e517-4b70-85f6-d23e50955f7f"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/424adaad-e517-4b70-85f6-d23e50955f7f" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/424adaad-e517-4b70-85f6-d23e50955f7f"><h5 data-qa="posting-name">Sr. Software Engineer (iOS) - Engineering Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="e2bbb29c-85ef-4db2-9ea7-93af9101b634"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/e2bbb29c-85ef-4db2-9ea7-93af9101b634" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/e2bbb29c-85ef-4db2-9ea7-93af9101b634"><h5 data-qa="posting-name">Sr. Software Engineer (iOS) - Engineering Platform</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div></div><div class="postings-group"><div class="large-category-header">ODS - UX &amp; Design</div><div class="posting-category-title large-category-label">-</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="a535c249-cf27-41cf-b92d-df1235864fee"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/a535c249-cf27-41cf-b92d-df1235864fee" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/a535c249-cf27-41cf-b92d-df1235864fee"><h5 data-qa="posting-name">Senior Product Designer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div><div class="posting" data-qa-posting-id="6aac2e66-88b7-46a3-9c91-605a33dc532d"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/6aac2e66-88b7-46a3-9c91-605a33dc532d" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/6aac2e66-88b7-46a3-9c91-605a33dc532d"><h5 data-qa="posting-name">UX Motion Designer</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Bengaluru</span></div></a></div><div class="posting" data-qa-posting-id="ea17a902-a106-48ab-be52-08ce99f99b4b"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/ea17a902-a106-48ab-be52-08ce99f99b4b" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/ea17a902-a106-48ab-be52-08ce99f99b4b"><h5 data-qa="posting-name">UX Writer - Food</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div><div class="postings-group"><div class="posting-category-title large-category-label">Indonesia Region - Region Jabodetabek</div><div class="horizontal-line"></div><div class="posting" data-qa-posting-id="49a9ad58-4fe3-4f36-b823-2b828a98ba42"><div class="posting-apply" data-qa="btn-apply"><a href="https://jobs.lever.co/GoToGroup/49a9ad58-4fe3-4f36-b823-2b828a98ba42" class="posting-btn-submit template-btn-submit hex-color">Apply</a></div><a class="posting-title" href="https://jobs.lever.co/GoToGroup/49a9ad58-4fe3-4f36-b823-2b828a98ba42"><h5 data-qa="posting-name">Area Senior Manager - Jabodetabek</h5><div class="posting-categories"><span href="#" class="display-inline-block small-category-label workplaceTypes">On-site — </span><span href="#" class="sort-by-commitment posting-category small-category-label commitment">Permanent</span><span href="#" class="sort-by-location posting-category small-category-label location">Jakarta</span></div></a></div></div></div></div></div></div></div><div class="main-footer page-full-width"><div class="main-footer-text page-centered"><p><a href="https://www.gotocompany.com/">GoTo Group Home Page</a></p><a href="https://www.lever.co/job-seeker-support/" class="image-link"><span>Jobs powered by </span><img alt="Lever logo" src="/img/lever-logo-full.svg"></a></div></div><script src="/js/bug-snag.js" data-apikey="6a247c6ff13012d02fde17377f0b857b" data-appversion="0.0.1716334947" data-endpoint="https://bugs.lever.co/js" data-releasestage="production"></script><script>var gaCode = "UA-129682534-1";</script><script>var gaAllowLinker = false;</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-129682534-1"></script><script>if (gaCode.startsWith('UA')) {window.initializeGoogleAnalytics = function() {(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create', gaCode, {name: "customer",allowLinker: gaAllowLinker,});ga('customer.send', 'pageview');}} else {window.initializeGoogleAnalytics = function() {window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', gaCode);if (gaAllowLinker) {gtag('set', 'linker', 'lever.co');}}}</script><script type="text/javascript">/*We only want to not initialize Google Analytics and Segment on load if the following is true:- `gdpr` is enabled for the account- the account has the `cookieBanner` enabled- the account has the `optIn` cookieBanner typeThis is the only case where an applicant has to explicitly opt-in to the cookie consent before we can load GA/Segment*//* 2022-03-08: Disabling segment tracking due to an explosion in MAU after removing identify call */window.initializeGoogleAnalytics();window.hasInitializedAnalytics = true;</script></body></html><script src="/js/jquery-3.6.1.min.js"></script><script src="/js/list.js"></script>
  recorded_at: Sun, 26 May 2024 06:23:55 GMT
- request:
    method: get
    uri: https://api.lever.co/v0/postings/GoToGroup/?mode=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 26 May 2024 06:23:56 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1303678'
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Etag:
      - W/"13e47e-Olvo8Kdb6QOyBfA+6GXw3kETjqs"
      X-Stream-Path:
      - dapi
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        [{"additionalPlain":"About The Team\n\nAccount Executive (AE) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support teams. Ideally, an AE regularly visits assigned merchants to see what really happened on the ground as well as provide necessary advice to them in increasing transactions over time.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support teams. Ideally, an AE regularly visits assigned merchants to see what really happened on the ground as well as provide necessary advice to them in increasing transactions over time.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Direct Contract","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1694515437986,"descriptionPlain":"About The Team\n\nAccount Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build & maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.\n","description":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build &amp; maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.</div>","id":"f7bcbd05-b658-4b80-8577-87df02aaae98","lists":[{"text":"What You Will Do","content":"<li>Prepare sales forecasts and budgets; set transaction targets in areas like product mix,sales volume, market shares in their territory</li><li>Analyze consumer behavior, market insight, field situation, and market trend in their territory</li><li>Regular review leads merchants (i.e. monitor merchant growth, transfer merchants to new categories, competitor activity, etc.)</li><li>Provide advices to the merchant based on valid data analytics result in order to increase number of transactions</li><li>Create regular report to what's happen in their respective territory toward Regional/Nation-Wide company strategy</li>"},{"text":"What You Will Need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Account Executive (Jakarta North)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build &amp; maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.</div>","descriptionBodyPlain":"About The Team\n\nAccount Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build & maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98","applyUrl":"https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Tangerang","team":"-","allLocations":["Tangerang"]},"createdAt":1712309314064,"description":"","descriptionPlain":"","id":"8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa","lists":[],"text":"Account Manager - Tangerang","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa","applyUrl":"https://jobs.lever.co/GoToGroup/8c43d5dc-1ee7-4fa1-9a41-366eea4b4caa/apply"},{"additionalPlain":"About the team\n\nAccount Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b></div><div><br></div><div>Account Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1691377608448,"descriptionPlain":"About the Role \n\nAccount Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</div><div><br></div><div><br></div>","id":"5e3ad167-6545-4f00-9532-abc5c348b3b0","lists":[{"text":"What you will do","content":"<li>Create sales &amp; journey plan to achieve his/her own target in areas like product mix, sales volume, market shares for his/her territory</li><li>Engage merchants within his/her territory to keep them active in Gojek ecosystem &amp; to increase revenue for the company</li><li>Provide advice &amp; offer solution to the merchants in his/her territory based on data so that the merchants can grow&nbsp;</li><li>Create regular reports on what's happening in his/her respective territory and his/her team’s territory</li><li>Know when to escalate &amp; ask help from DSM for bigger issues</li><li>(For AMs with team) Lead and manage his/her team: Review team performance and take corrective actions to achieve target, Cascade &amp; execute strategy from DSM to the team, Coach &amp; groom leadership skills to his/her team, Support AEs in his/her team to problem solve issues happening in their territories, especially issues happening at key/critical merchants</li><li>Any other assigned task related to Sales motion</li><li>Handling objection and complain handling</li>"},{"text":"What you will need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Account Manager (East Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAccount Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/5e3ad167-6545-4f00-9532-abc5c348b3b0","applyUrl":"https://jobs.lever.co/GoToGroup/5e3ad167-6545-4f00-9532-abc5c348b3b0/apply"},{"additionalPlain":"Account Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 9pt\">Account Manager (AM) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support team. Ideally, an AM regularly visits assigned merchants to see what really happened on the ground as well as providing necessary advice to them in increasing transaction overtime.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715157639446,"descriptionPlain":"Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n","description":"<div><span style=\"font-size: 9pt\">Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</span></div>","id":"dfa07479-8e81-43ff-a9ad-4ae02f72207e","lists":[{"text":"What you will do","content":"<li>Create sales &amp; journey plan to achieve his/her own target in areas like product mix, sales volume, market shares for his/her territory</li><li>Engage merchants within his/her territory to keep them active in Gojek ecosystem &amp; to increase revenue for the company</li><li>Provide advice &amp; offer solution to the merchants in his/her territory based on data so that the merchants can grow&nbsp;</li><li>Create regular reports on what's happening in his/her respective territory and his/her team’s territory</li><li>Know when to escalate &amp; ask help from DSM for bigger issues</li><li>Any other assigned task related to Sales motion</li><li>Handling objection and complain handling</li><div><br></div>"},{"text":"What you will need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li><div><br></div>"}],"text":"Account Manager (North East Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.</span></div>","descriptionBodyPlain":"Account Manager will manage a smaller number of higher-revenue higher-growth SMB merchants. In some districts, AM may be managing AEs. Main responsibility is to ensure that the merchants keep growing in order to achieve the target.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/dfa07479-8e81-43ff-a9ad-4ae02f72207e","applyUrl":"https://jobs.lever.co/GoToGroup/dfa07479-8e81-43ff-a9ad-4ae02f72207e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715077881489,"descriptionPlain":"As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.\n","description":"<div>As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&amp;A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.</div>","id":"9aa5a060-e2c3-4296-9057-049a3c1fa5bd","lists":[{"text":"What You Will Do","content":"<li>Ensure accounting process are properly designed and executed and initiate process improvement when necessary</li><li>Identify, analyze and resolve low complexity accounting issues independently</li><li>Review accounting numbers and ensure posted journal entries are complete, accurate and reconciled to the source of data and/or underlying documents</li><li>Review detailed list of financial statements items and ensure they are tallied with trial balance</li><li>Perform and review financial closing activities</li><li>Involve in preparation of statutory financial statements</li>"},{"text":"What You Will Need","content":"<li>A bachelor's or associate’s degree in Accountancy or equivalent</li><li>At least 2 years of experience as auditor in public accounting firm and/or accountant in e-commerce, fintech, technology or other relevant industry</li><li>Strong knowledge of Indonesian Accounting Standards (PSAK), knowledge in International Financial Reporting Standards (IFRS) would be an advantage</li><li>Fluent in English (verbal and written)&nbsp;</li><li>Strong interpersonal communication skills</li><li>Strong attention to detail and accuracy</li><li>Strong problem-solving and analytical mindset</li>"}],"text":"Accountant","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&amp;A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.</div>","descriptionBodyPlain":"As our Accountant, you’ll be an instrumental cog in the Accounting team wheel of Gojek that directly impacts the company’s financial reporting process. Collaborating with the other finance streams (FP&A, tax, finance operations, treasury and procurement) as well as business, product and other corporate functions, your main objective will be to ensure any transaction under your scope is properly recorded in the financial statements. You will have ample opportunity to flex your technical accounting and analytical skills, and dive deep into projects surrounding the financial reporting process, collectively getting us even closer to producing reliable and accurate financial statements of the company in a timely manner.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/9aa5a060-e2c3-4296-9057-049a3c1fa5bd","applyUrl":"https://jobs.lever.co/GoToGroup/9aa5a060-e2c3-4296-9057-049a3c1fa5bd/apply"},{"additionalPlain":"About the Team \n\nThe management of AML-CFT in Subsidiaries which is under the coordination of the AML-CFT Special Work Unit. The implementation of the AML-CFT program is carried out by the AML-CFT Special Work Unit which is structurally under the Compliance Department and is directly responsible to the Director in charge of the compliance.\n\nThe AML CFT unit is a unique unit. We work in silence where everything has to be balanced between quality and speed. Where evidence must be supported by data and risk profiles. We must be able to understand the applicable laws and regulations, must always be up to date on the latest criminal cases or schemes related to ML, TF and PF and must be able to understand creative ideas from friends in Business and ensure they do not go off track . If you like watching FBI, CSI, NCSI series then you will definitely enjoy working in this unit.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 10pt\">About the Team </b></div><div><br></div><div>The management of AML-CFT in Subsidiaries which is under the coordination of the AML-CFT Special Work Unit. The implementation of the AML-CFT program is carried out by the AML-CFT Special Work Unit which is structurally under the Compliance Department and is directly responsible to the Director in charge of the compliance.</div><div><br></div><div>The AML CFT unit is a unique unit. We work in silence where everything has to be balanced between quality and speed. Where evidence must be supported by data and risk profiles. We must be able to understand the applicable laws and regulations, must always be up to date on the latest criminal cases or schemes related to ML, TF and PF and must be able to understand creative ideas from friends in Business and ensure they do not go off track . If you like watching FBI, CSI, NCSI series then you will definitely enjoy working in this unit.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Legal & Compliance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1699323667395,"descriptionPlain":"About the Role\n\nThis position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">This position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.</span></div>","id":"365ef8c5-c4b7-4aab-9d0d-eabea5ef448b","lists":[{"text":"What you will do","content":"<li>Lead a unit of AML/CFT professionals focused on the various elements of an AML/CFT program;</li><li>A pointed person for any Regulatory Compliance matters/projects as well as internal or external auditors in compliance reviews.</li><li>As an industry expert, keep track of the latest developments around regulations and find smart solutions to mitigate ML/TF risks;&nbsp;</li><li>Remain knowledgeable of new or changing regulation, regulatory expectations, market conditions and industry best practices and find smart solutions to mitigate ML/TF risks;</li><li>Ensure Subject Matter Experts participate in all activities where expertise is required, including but not limited to, risk assessments, policy writing, training development, advice to the business, monitoring activities, and reporting;</li><li>Provide senior management with actionable advice on how to effectively manage AML/CFT-related risks;</li><li>Ensure all regulatory reporting requirements related to AML/CFT themes are met;</li><li>Ensure implementation AML CFT regular trainings as well to Business Unit and Support Function and to liaise with the Learning &amp; Development PAC</li>"},{"text":"What you will need","content":"<li>A minimum of 5 years in a senior leadership role in the AML/CFT</li><li>You have extensive knowledge of payments and or banking/finance industry</li><li>A thorough understanding of AML/CFT laws and regulations incl. risks, controls, industry best practices and regulatory requirements</li><li>Excellent and direct communicator who talks straight without being rude</li><li>&nbsp;You have the ability to clearly explain AML CFT compliance and related risks, develop sound mitigation strategies and find workable solutions</li><li>&nbsp;You have extensive experience representing and leading meetings with regulatory agencies, examiners and auditors</li><li>You have the ability to structure and prioritize in a high volume, fast-paced environment and drive a process to completion</li><li>You are a team player that does not shy away from taking ownership</li>"}],"text":"AML/CFT Manager - Fintech - MAB","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">This position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.</span></div>","descriptionBodyPlain":"About the Role\n\nThis position is established to ensure the ongoing oversight and execution of the AML CFT implementation programs at MAB (PT Multifinance Anak Bangsa).Head of AML CFT is responsible for the day-to-day oversight of the AML CFT Unit, including the Expert staff and Transaction Monitoring. In this capacity she will have primary responsibility for ensuring expertise is actively involved in processes related to risk assessment, policy development, training, advising and reporting aspects of the Compliance program. Additionally, s/he will have primary responsibility for the design, implementation and execution of the (transaction) monitoring programs related to the expertise topics (AML CFT).Finally, as a member of the Compliance AML CFT Team, will support other AML CFT and Compliance Managers in the day-to-day running of the department. The AML CFT Manager must maintain working knowledge of all processes and procedures within the department in order to provide job coverage in the case of holidays, leave of absence or termination of employment of other managers within the Compliance AML CFT Department.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/365ef8c5-c4b7-4aab-9d0d-eabea5ef448b","applyUrl":"https://jobs.lever.co/GoToGroup/365ef8c5-c4b7-4aab-9d0d-eabea5ef448b/apply"},{"additionalPlain":"Our Regional Consumer Engagement team is a family of 17 people based in Indonesia, specifically in Jabodetabek region. We oversee all things and act as a center of excellence for partnerships and increasing potential visibility in respective region POI or malls and work to create (consumer engagement and brand awareness. It’s our job to ensure that all engagement activities run seamlessly. One of the biggest challenges we had to face is to ensure gojek domination is consistent across Jabodetabek region. We eventually resolved it by doing close coordination with HQ and the regional team. Currently, we’re busy at work on various projects, including one about POI domination, merchants branding.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>Our Regional Consumer Engagement team is a family of 17 people based in Indonesia, specifically in Jabodetabek region. We oversee all things and act as a center of excellence for partnerships and increasing potential visibility in respective region POI or malls and work to create (consumer engagement and brand awareness. It’s our job to ensure that all engagement activities run seamlessly. One of the biggest challenges we had to face is to ensure gojek domination is consistent across Jabodetabek region. We eventually resolved it by doing close coordination with HQ and the regional team. Currently, we’re busy at work on various projects, including one about POI domination, merchants branding.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713419462921,"descriptionPlain":"They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).\n\nWhat you will do\n\n- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.\n- Creating consumer engagement strategy and plan according to local insight, merchants branding & POI domination and HQ driven initiative amplifications for the region. \n- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any \n- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.\n\nWhat you will need \n\n- Bachelor degree from top university or  any well-known universities from each region) or abroad with GPA > 3.2 or equivalent\n- Preferably majoring in Marketing Management or Business\n- At least 3-4 years of working experience in marketing\n- Solid experience in partnership\n- Good understanding of local knowledge & demonstrate excellent in Digital Marketing Campaign\n- Able to teach related Consumer Engagement knowledge to all CE team\n- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills\n- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills\n\n","description":"<div><span style=\"font-size: 10pt\">They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).</span></div><div><br></div><div><b style=\"font-size: 18px\">What you will do</b></div><div><br></div><div>- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.</div><div>- Creating consumer engagement strategy and plan according to local insight, merchants branding &amp; POI domination and HQ driven initiative amplifications for the region.&nbsp;</div><div>- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any&nbsp;</div><div>- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.</div><div><br></div><div><b style=\"font-size: 18px\">What you will need</b>&nbsp;</div><div><br></div><div>- Bachelor degree from top university or&nbsp; any well-known universities from each region) or abroad with GPA &gt; 3.2 or equivalent</div><div>- Preferably majoring in Marketing Management or Business</div><div>- At least 3-4 years of working experience in marketing</div><div>- Solid experience in partnership</div><div>- Good understanding of local knowledge &amp; demonstrate excellent in Digital Marketing Campaign</div><div>- Able to teach related Consumer Engagement knowledge to all CE team</div><div>- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</div><div>- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</div><div><br></div>","id":"c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1","lists":[],"text":"Area CE Associate - Central Jakarta","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).</span></div><div><br></div><div><b style=\"font-size: 18px;\">What you will do</b></div><div><br></div><div>- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.</div><div>- Creating consumer engagement strategy and plan according to local insight, merchants branding &amp; POI domination and HQ driven initiative amplifications for the region.&nbsp;</div><div>- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any&nbsp;</div><div>- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.</div><div><br></div><div><b style=\"font-size: 18px;\">What you will need</b>&nbsp;</div><div><br></div><div>- Bachelor degree from top university or&nbsp; any well-known universities from each region) or abroad with GPA &gt; 3.2 or equivalent</div><div>- Preferably majoring in Marketing Management or Business</div><div>- At least 3-4 years of working experience in marketing</div><div>- Solid experience in partnership</div><div>- Good understanding of local knowledge &amp; demonstrate excellent in Digital Marketing Campaign</div><div>- Able to teach related Consumer Engagement knowledge to all CE team</div><div>- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</div><div>- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</div><div><br></div>","descriptionBodyPlain":"They say no man is an island - a notion that holds particularly true for this role. As our CE Associate, you’ll be an instrumental cog in the Jabodetabek Consumer Engagement team) wheel of Gojek that directly impacts the company’s (brand awareness and activation). Collaborating with (marketing and regional team), your main objective will be to (drive consumer engagement through creating mall partnership (Jakarta and Bodetabek) strategy and plan according to local insight in the region). You will have ample opportunity to flex your analytical and creative skill at the same time, and deep consumer understanding, skills, and dive deep into projects surrounding looking for growth opportunities by tailoring local insight into partnership strategy), collectively getting us even closer to (engage more consumer).\n\nWhat you will do\n\n- Support Area Senior Manager for driving consumer engagement focus areas in terms of engagement, partnership with local POI, mall in which will deliver POI domination, POS merchants branding, standard package that will deliver Region target completed orders and active users.\n- Creating consumer engagement strategy and plan according to local insight, merchants branding & POI domination and HQ driven initiative amplifications for the region. \n- Overseeing completed order transaction and MTU achievement vs target in regular basis, immediate actions to fill the gap if any \n- Manage regional/local insight generation for idea creation, translating into key actionable initiatives to build relevance with local residences.\n\nWhat you will need \n\n- Bachelor degree from top university or  any well-known universities from each region) or abroad with GPA > 3.2 or equivalent\n- Preferably majoring in Marketing Management or Business\n- At least 3-4 years of working experience in marketing\n- Solid experience in partnership\n- Good understanding of local knowledge & demonstrate excellent in Digital Marketing Campaign\n- Able to teach related Consumer Engagement knowledge to all CE team\n- Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills\n- Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1","applyUrl":"https://jobs.lever.co/GoToGroup/c5a0d0c2-5bcc-4ee3-ac4f-ccfc29fee0f1/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Bali","team":"-","allLocations":["Bali"]},"createdAt":1703134039485,"descriptionPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","id":"4220480a-be7c-4f31-8d6b-59a21558b594","lists":[{"text":"What You Will Do","content":"<li>Support Area Head to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver Area target completed orders and active users.</li><li>Managing all day to day marketing executional activities from all areas needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in areas are delivered with a given standard of accuracy, completeness, timeliness as per the standard package and local initiatives.&nbsp;</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis.&nbsp;Internally work with direct responsibility to deliver area executions and targets by executing events, exhibits, and other activities.</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results.</li><li>Responsible for setting the integrated communications plan and ensuring consistency of messaging and brand communications. Working closely with the sales, government relations, and operations team.</li>"},{"text":"What You Will Need","content":"<li>Minimum 2&nbsp; years of working experience in Marketing/Sales, preferaby from global FMCG Company</li><li>Good understanding of local knowledge</li><li>Strong analytical and planning skills</li><li>Good communication and presentation skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Good collaboration with compassion and proactiveness</li><li>Agile and fast in thinking and execution</li><li><b>Willing to be based in Bali</b></li>"}],"text":"Area Consumer Engagement Associate","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","descriptionBodyPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/4220480a-be7c-4f31-8d6b-59a21558b594","applyUrl":"https://jobs.lever.co/GoToGroup/4220480a-be7c-4f31-8d6b-59a21558b594/apply"},{"additionalPlain":"About The Team\n\nArea CE Associate  will play for marketing strategy in Gojek Regions. He/she will report to the appointed Area Head. He/she will regularly coordinate with the all team (operations, sales & analytics team) in the designated Areas\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Area CE Associate&nbsp; will play for marketing strategy in Gojek Regions. He/she will report to the appointed Area Head. He/she will regularly coordinate with the all team (operations, sales &amp; analytics team) in the designated Areas</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Yogyakarta","team":"-","allLocations":["Yogyakarta"]},"createdAt":1711351519318,"descriptionPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div><b>About The Role</b></div><div><br></div><div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","id":"e60f0ed3-0fe4-4f85-b1a7-167888e159a4","lists":[{"text":"What You Will Do","content":"<li>Support Area Head to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver Area target completed orders and active users.</li><li>Managing all day to day marketing executional activities from all areas needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in areas are delivered with a given standard of accuracy, completeness, timeliness as per the standard package and local initiatives.&nbsp;</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis.</li><li>&nbsp;Internally work with direct responsibility to deliver area executions and targets by executing events, exhibits, and other activities.</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results.</li><li>Responsible for setting the integrated communications plan and ensuring consistency of messaging and brand communications. Working closely with the sales, government relations, and operations team.</li>"},{"text":"What You Will Need","content":"<li>Min 2&nbsp; years of working experience in Marketing/Sales</li><li>Good understanding of local knowledge</li><li>Strong analytical and planning skills</li><li>Good communication and presentation skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Good collaboration with compassion and proactiveness</li><li>Agile and fast in thinking and execution</li><li>Have exposure of working at a top global FMCG company would be a plus point</li>"}],"text":"Area Consumer Engagement Associate (Yogya)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","descriptionBodyPlain":"About The Role\n\nYou will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the representative Area, aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e60f0ed3-0fe4-4f85-b1a7-167888e159a4","applyUrl":"https://jobs.lever.co/GoToGroup/e60f0ed3-0fe4-4f85-b1a7-167888e159a4/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Bandung","team":"-","allLocations":["Bandung"]},"createdAt":1716603127529,"description":"","descriptionPlain":"","id":"95352b3a-e239-4d08-8e8a-aeedba71872e","lists":[{"text":"What you will do:","content":"<li>Accountable for day-to-day operations monitoring (2W and 4W) including:&nbsp;&nbsp;driver acquisition management, driver engagement management (loyalty &amp; retention and safety &amp; performance training), driver exit (i.e. drivers suspension, etc.) management and inventory management (driver attributes and driver warrant), driver income through driver expenses reduction and providing alternative income (i.e. Swadaya, ProEnsure SOP and legal compliances in the areamo Go)</li><li>Collaborate with Area Head for day-to-day escalated issues around driver services</li><li>Collaborate with Sales and Consumer Engagement team to achieve shared target in Area level</li><li>Responsible for end to end processes channel walk in center (Driver Support Unit) in the area</li><li>Manage and evaluate all programs related with generating more high quality drivers in the region</li><li>Support ROH in product changes roll out in the region</li>"},{"text":"What you will need:","content":"<li>At least 5 years experience in operations, preferably at the managerial level and from Multi National Company</li><li>Having strong analytical thinking and problem solving skills using various improvement tools and methods</li><li>Having good understanding about supply and demand planning</li><li>Having good communication skills and good attention to detail and routine activities</li><li>Able to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Able to handle communication in community or mass conflict&nbsp;</li><li>Fluent in Bahasa Indonesia &amp; proficient in spoken and written in English</li><li>Having Six Sigma Black Belt Certification is an advantage</li>"}],"text":"Area Operations Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/95352b3a-e239-4d08-8e8a-aeedba71872e","applyUrl":"https://jobs.lever.co/GoToGroup/95352b3a-e239-4d08-8e8a-aeedba71872e/apply"},{"additionalPlain":"About the team \n\nArea Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staffs attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the team </b></div><div><br></div><div><span style=\"font-size: 16px\">Area Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staffs attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Depok","team":"-","allLocations":["Depok","Bogor"]},"createdAt":1713768982209,"descriptionPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","id":"18674f77-24b2-46a4-86bb-7b5e7fe71f2c","lists":[{"text":"What You Will Do:","content":"<li>Accountable for day-to-day operations monitoring (2W and 4W) including:&nbsp;&nbsp;Driver acquisition management, Driver engagement management (loyalty &amp; retention and safety &amp; performance training), Driver exit (i.e. drivers suspension, etc.) management and inventory management (driver attributes and driver warrant), driver income through driver expenses reduction and providing alternative income (i.e. Swadaya, Promo Go)&nbsp;</li><li>Collaborate with Area Head for day-to-day escalated issues around driver services</li><li>Collaborate with Sales and Consumer Engagement team to achieve shared target in Area level</li><li>Collaborate with Public &amp; Government Relation team and Local Government that related to operations, e.g. Dishub</li><li>Responsible for end to end processes channel walk in center (Driver Support Unit) in the area</li><li>Ensure SOP and legal compliances in the specific area</li><li>Manage and evaluate all programs related with generating more high quality drivers in the region</li><li>Support Regional Operations Head in product changes roll out and other strategic implementation in the region</li>"},{"text":"What You Will Need","content":"<li>At least 5 years experience in operations/ supply/ demand generation, preferably at the managerial level and from Multi National Company</li><li>Having strong analytical thinking, insights generating, and complex problem solving skills using various improvement tools and methods, including Big Query/ SQL, Tableau</li><li>Good understanding about supply and demand planning</li><li>Prior experience in managing team (&gt; 3 members)</li><li>Good communication skills and good attention to detail and routine activities</li><li>Ability to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Capability to handle communication in community or mass conflict&nbsp;</li><li>Proficiency in English both spoken and written</li>"}],"text":"Area Operations Manager (Bogor Depok)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","descriptionBodyPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, and driver welfare), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/18674f77-24b2-46a4-86bb-7b5e7fe71f2c","applyUrl":"https://jobs.lever.co/GoToGroup/18674f77-24b2-46a4-86bb-7b5e7fe71f2c/apply"},{"additionalPlain":"About The Team\n\nArea Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staff as well as Satellite Operations Supervisor for specific cities attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Area Operations Manager (AOM) will work within direct command of Area Head and matrix collaboratively with the regional operations team on some projects. You will lead the Operations team consisting of Operations Supervisor and Staff as well as Satellite Operations Supervisor for specific cities attached to your area. You play a pivotal role to improve the quality life of drivers and at the same time ensuring our consumers are easily helped by providing sufficient supply. Though everyday will be very challenging managing the entire operations in the area but you feel great satisfaction as you are directly creating a social impact.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713865216824,"descriptionPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","id":"d9e236de-3ffc-4aae-9895-20212cdbeceb","lists":[{"text":"What You Will Do:","content":"<li>Accountable for day-to-day operations monitoring (2W and 4W) including:&nbsp;&nbsp;driver acquisition management, driver engagement management (loyalty &amp; retention and safety &amp; performance training),&nbsp;driver exit (i.e. drivers suspension, etc.) management and inventory management (driver attributes and driver warrant), driver income through driver expenses reduction and providing alternative income (i.e. Swadaya, Promo Go)&nbsp;</li><li>Collaborate with Area Head for day-to-day escalated issues around driver services</li><li>Collaborate with Sales and Consumer Engagement team to achieve shared target in Area level</li><li>Responsible for end to end processes channel walk in center (Driver Support Unit) in the area</li><li>Ensure SOP and legal compliances in the area</li><li>Manage and evaluate all programs related with generating more high quality drivers in the region</li><li>Support ROH in product changes roll out in the region</li>"},{"text":"What You Will Need:","content":"<li>At least 5 years experience in operations, preferably at the managerial level and from Multi National Company</li><li>Having strong analytical thinking and problem solving skills using various improvement tools and methods</li><li>Having good understanding about supply and demand planning</li><li>Having good communication skills and good attention to detail and routine activities</li><li>Able to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Able to handle communication in community or mass conflict&nbsp;</li><li>Proficiency in English</li><li>Having Six Sigma Black Belt Certification is an advantage</li>"}],"text":"Area Operations Manager (Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.</span></div>","descriptionBodyPlain":"About The Role\n\nAs Area Operation Manager, you will be an integral player in the Indonesia Region team. Focus on managing the supply, you will handle full operational activities related to our driver-partners, including operations monitoring (that include acquisition, onboarding, engagement, suspension), ensure the SOP is in compliance with area regulations, and collaborate with various stakeholders in ensuring the full capacity of the performances of our driver-partners in efforts to providing the best experience for our drivers.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d9e236de-3ffc-4aae-9895-20212cdbeceb","applyUrl":"https://jobs.lever.co/GoToGroup/d9e236de-3ffc-4aae-9895-20212cdbeceb/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716602705785,"description":"","descriptionPlain":"","id":"8c7385d0-98c1-41d8-b780-6c84ed6c40ad","lists":[{"text":"What you will do:","content":"<li>Design an overall merchant strategy (encompassing both hunting and farming motion) for the Area, followed by implementation and execution of the plan to ensure business objectives are achieved</li><li>Oversee and manage the performance of his/her team (consisting of at least AE &amp; AM)</li><li>Review team performance and take corrective actions &nbsp;to achieve target.</li><li>Cascade strategy from RSH &amp; Sales Strategy HQ to the team &amp; lead the execution for the Area.</li><li>Coach AE &amp; AM to Identify new sales opportunities within existing merchant accounts by up-selling and cross-selling existing products.                                                                                                                                                                                                  </li><li>Support his/her team to problem solve issues happening in their area, especially issues happening at critical merchants.</li><li>Regularly do coaching &amp; mentoring for the team members</li><li>Identify key/critical merchants in the Area including: Build and maintain relationships with these merchants                                                                                and Give additional support to the AE/AM managing the merchants to problem solve issues experienced by these merchants</li><li>Work with relevant stakeholders in the region/area to ensure that sales strategies &amp; merchant activities are aligned with the overall regional and nationwide company objectives. This would include supporting the RCE team to translate consumer behavior, market insight, field situation, and market trend within the district to refine the overall region strategy.</li><li>Know when to escalate &amp; ask help from RSH for bigger issues</li>"},{"text":"What you will need :","content":"<li>Bachelor's degree in any field (Top tier University is preferable) and willing to relocate to another city</li><li>5-7 years of experience within mid-to-senior management function (FMCG, SMB Banking and Telecom company)</li><li>Strong network and knowledge about the city</li><li>Excellence to bridge, develop and maintain good relationships with key partners such as but not limited to local/regional government stakeholders, 3rd party partners, merchant associations, communities</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Strong leadership and interpersonal skills, experienced in managing a big team, as well as strong in people development and mentoring / coaching</li><li>Strong written &amp; communication skills, fluent in English and Bahasa Indonesia</li><li>Fact-based/number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"},{"text":"About the team:","content":"<li>Area Sales Manager (ASM) will work within direct command of Area Head and matrix collaboratively with the region sales team on some projects. You will lead the Sales team consisting of Account Manager (AM) &amp; Account Executive (AE) for Surabaya &amp; Malang areas. as ASM regularly visits with AM &amp; AE to their assigned merchants across their areas to see what really happened on the ground as well as providing advance advice to them in increasing transaction overtime.</li>"}],"text":"Area Sales Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/8c7385d0-98c1-41d8-b780-6c84ed6c40ad","applyUrl":"https://jobs.lever.co/GoToGroup/8c7385d0-98c1-41d8-b780-6c84ed6c40ad/apply"},{"additionalPlain":"About the team \n\nThe Area Sales Manager (ASM) will work within the direct command of the Area Head and matrix collaboratively with the region sales team on some projects. You will lead the Sales team consisting of the Account Manager (AM) & Account Executive (AE) for the Surabaya & Malang areas. ASM regularly visits AM & AE to their assigned merchants across their areas to see what happened on the ground as well as providing advance advice to them in increasing transactions over time.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b>&nbsp;</div><div><br></div><div>The Area Sales Manager (ASM) will work within the direct command of the Area Head and matrix collaboratively with the region sales team on some projects. You will lead the Sales team consisting of the Account Manager (AM) &amp; Account Executive (AE) for the Surabaya &amp; Malang areas. ASM regularly visits AM &amp; AE to their assigned merchants across their areas to see what happened on the ground as well as providing advance advice to them in increasing transactions over time.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Surabaya","team":"-","allLocations":["Surabaya"]},"createdAt":1708941679861,"descriptionPlain":"About the Role \n\nArea Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!\n\n","description":"<div><b>About the Role</b>&nbsp;</div><div><br></div><div>Area Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!</div><div><br></div>","id":"e1eeec09-779c-48f5-a7f8-90ecf966dc4e","lists":[{"text":"What you will do","content":"<li>Design an overall merchant strategy (encompassing both hunting and farming motion) for the Area, followed by implementation and execution of the plan to ensure business objectives are achieved</li><li>Oversee and manage the performance of his/her team (consisting of at least AE &amp; AM), including:</li><div>- Review team performance and take corrective actions to achieve the target</div><div>- Cascade strategy from RSH &amp; Sales Strategy HQ to the team &amp; lead the execution for the Area</div><div>- Coach AE &amp; AM to Identify new sales opportunities within existing merchant accounts by up-selling and cross-selling existing products</div><div>- Support his/her team to problem-solve issues happening in their area, especially issues happening at critical merchants</div><div>- Regularly do coaching &amp; mentoring for the team members</div><li>Identify key/critical merchants in the Area and:</li><div>- Build and maintain relationships with these merchants</div><div>- Give additional support to the AE/AM managing the merchants to problem-solve issues experienced by these merchants</div><li>Work with relevant stakeholders in the region/area to ensure that sales strategies &amp; merchant activities are aligned with the overall regional and nationwide company objectives. This would include supporting the RCE team to translate consumer behavior, market insight, field situation, and market trends within the district to refine the overall region strategy.</li><li>Know when to escalate &amp; ask help from RSH for bigger issues</li>"},{"text":"What you will need","content":"<li>Bachelor's degree in any field (top tier University is preferable) and willing to relocate to Surabaya (if your residence is outside Surabaya)</li><li>At least 5 years of experience within mid-to-senior management function (FMCG, SMB Banking, and Telecom company)</li><li>Strong network and knowledge about the city</li><li>Excellence in bridging, developing and maintaining good relationships with key partners such as but not limited to local/regional government stakeholders, 3rd party partners, merchant associations, communities</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Strong leadership and interpersonal skills, experienced in managing a big team, as well as strong in people development and mentoring/coaching</li><li>Strong written &amp; communication skills, fluent in English and Bahasa Indonesia</li><li>Fact-based/number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Area Sales Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b>&nbsp;</div><div><br></div><div>Area Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nArea Sales Manager is accountable for sales strategy, sales team, and achieving sales revenue targets across all sales channels within Surabaya and Malang areas. This role is for someone that experience in leading a sales team and also someone who has a good eye for growing the business. If you're the one that we're looking for, don't hesitate to join the exciting team!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e1eeec09-779c-48f5-a7f8-90ecf966dc4e","applyUrl":"https://jobs.lever.co/GoToGroup/e1eeec09-779c-48f5-a7f8-90ecf966dc4e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","location":"Jakarta","team":"Indonesia Region - Region Jabodetabek","allLocations":["Jakarta"]},"createdAt":1690973911809,"descriptionPlain":"Area Senior Manager  position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. \n","description":"<div><span style=\"font-size: 10pt\">Area Senior Manager&nbsp; position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. </span></div>","id":"49a9ad58-4fe3-4f36-b823-2b828a98ba42","lists":[{"text":"What You Will Do","content":"<li>Accountable for topline (ie : transaction, revenue) and bottom line metrics (ie ; cost, profit) of <a href=\"http://Area.Fully\" class=\"postings-link\">Area.</a></li><li><a href=\"http://Area.Fully\" class=\"postings-link\">Fully</a> accountable to build, maintain and continuously improve business operations of the Area to ensure efficient operation and optimum supply reliability on a day-to-day basis</li><li>Accountable for gofood sales motion in the <a href=\"http://area.Design\" class=\"postings-link\">area.</a></li><li><a href=\"http://area.Design\" class=\"postings-link\">Design</a> and implement the localized marketing campaign&nbsp;Work closely with stakeholders &amp; leadership in Region Level to develop and execute market strategies</li><li>Takes full ownership of the city’s budget and target</li>"},{"text":"What You Will Need","content":"<li>Minimum 7 years experience with extensive exposure to Area operations with exposure to BTL Marketing</li><li>Has existing relationships or&nbsp; is able to bridge, develop and maintain good relationships with key partners, local/regional government stakeholders 3rd party partners, merchant associations, and communities (ie: Driver community)Strong in planning, leadership, managerial skill, result-driven,&nbsp; target-oriented with proven track records</li><li>Very fluent in numbers, excellent in analyzing data and using analytics to make decisions</li><li>Proficient in English &amp; Bahasa, strong communication &amp; interpersonal skills</li><li>Able to recruit top-notch talent team, nurture &amp; mentor them</li><li>Having flexibility, willing to travel &amp; relocated to the overall region</li>"}],"text":"Area Senior Manager - Jabodetabek","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Area Senior Manager&nbsp; position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. </span></div>","descriptionBodyPlain":"Area Senior Manager  position will oversee operation, sales, and consumer engagement activities in the regions which aims to hack growth for focused products. He/she should has analytical and creative at the same time, and always looking for growth opportunities. This role combines deep consumer understanding, data analytics, and project management. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/49a9ad58-4fe3-4f36-b823-2b828a98ba42","applyUrl":"https://jobs.lever.co/GoToGroup/49a9ad58-4fe3-4f36-b823-2b828a98ba42/apply"},{"additionalPlain":"About The Team\n\nOur tax team, a division of the HoldCo CFO office, mainly professionals based in Indonesia, consists of several sub-divisions of tax functions working alongside the finance and business operations. We are predominantly concerned with ensuring all technical taxes have been appropriately followed and maintain a high level of compliance. If you are passionate about tax and finance, whilst looking for a fun dynamic environment, then we are your people!  \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>About The Team</div><div><br></div><div><span style=\"font-size: 10pt\">Our tax team, a division of the HoldCo CFO office, mainly professionals based in Indonesia, consists of several sub-divisions of tax functions working alongside the finance and business operations. We are predominantly concerned with ensuring all technical taxes have been appropriately followed and maintain a high level of compliance. If you are passionate about tax and finance, whilst looking for a fun dynamic environment, then we are your people!&nbsp;&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1697204557563,"descriptionPlain":"About The Team\n\nAs Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.\nThis role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment. \nThe candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.\n","description":"<div><b>About The Team</b></div><div><br></div><div>As Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.</div><div>This role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment.&nbsp;</div><div>The candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.</div>","id":"56966262-038f-497f-84c1-f360a9440c55","lists":[{"text":"What You Will Do","content":"<li>Manage tax compliance matters; including preparation of monthly and annual tax calculation/payment/returns, i.e. WHT, VAT, CIT)</li><li>Manage and advise day-to-day business initiatives including decisive actions toward dynamic business products</li><li>Manage and handle restructuring projects independently with supervision from the AVP of Tax</li><li>Able to communicate and align with relevant stakeholders within the group</li><li>Monitoring any tax regulation updates, identifying relevant business areas that may be impacted, and planning the risk mitigation strategy</li><li>Able to support the litigation process and assessment of risks</li><li>Able to support the advocacy initiatives within the relevant external organizations.</li>"},{"text":"What You Will Need","content":"<li>S1 Bachelor of Economics (majoring in accounting or corporate finance) or Bachelor of Social Finance (Majoring in Fiscal Administration) </li><li>Minimum 5 years of working experience in the taxation field</li><li>Strong interpersonal, analytical, communication, and presentation skills with advanced command of written and spoken English</li><li>Strong technical skills in tax, accounting, and corporate finance</li><li>Ability to work in a fast-paced, rapidly changing, and high-growth environment</li><li>Able to work independently and in a team</li>"}],"text":"Assistant Tax Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Team</b></div><div><br></div><div>As Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.</div><div>This role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment.&nbsp;</div><div>The candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.</div>","descriptionBodyPlain":"About The Team\n\nAs Assistant Tax Manager, you will hold an important role within the Group Tax team that directly impacts GoTo Group’s stakeholders. In this role, you will get to take care of tax compliance matters and also provide tax advisory for the GoTo Group. The GoTo Finance Shared Service team will be your companions during this ride.\nThis role will support and significantly impact the Group position and implementation of business operations as it will safeguard and ensure that each arrangement has considered the appropriate tax treatment. \nThe candidates will be required to catch up with the variety of businesses in the GoTo group and understand the commercial flow, establishing communication with all relevant stakeholders within the group.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/56966262-038f-497f-84c1-f360a9440c55","applyUrl":"https://jobs.lever.co/GoToGroup/56966262-038f-497f-84c1-f360a9440c55/apply"},{"additionalPlain":"About the Team\n\nOur team collective goal is to shape the convenience of managing money on our journey to provide financial inclusion for all businesses in Indonesian that resonates with trust and reliability. This role will be part of the Merchant Money Management team within GoTo Financial. We're a group of diverse skill sets, but we're united in our passion for developing innovative business strategies that drive real results. From crafting business solutions to analyzing merchant data, we're always up for a challenge and constantly pushing ourselves to learn and grow.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Our team collective goal is to shape the convenience of managing money on our journey to provide financial inclusion for all businesses in Indonesian that resonates with trust and reliability. This role will be part of the Merchant Money Management team within GoTo Financial. We're a group of diverse skill sets, but we're united in our passion for developing innovative business strategies that drive real results. From crafting business solutions to analyzing merchant data, we're always up for a challenge and constantly pushing ourselves to learn and grow.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1708493342702,"descriptionPlain":"About The Role\n\nWe are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.\n","description":"<div><b style=\"font-size: 18px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.</span></div>","id":"192f57ad-633c-4006-a0df-09f148bb5ece","lists":[{"text":"What You Will Do","content":"<li>Develop and execute a data-driven business strategy that aligns with the overall merchant platform business objectives</li><li>Identify, develop, implement, and refine merchants-focused needs by collaborating with the Product team to provide a tech-enabled solution with focus on merchant money management</li><li>Conduct merchant-focused market research to understand the merchant’s business and money lifecycle, and craft presentations for the overall business strategy</li><li>Build strategic relationships with our bank partners throughout the life cycle of our strategic collaboration</li><li>Always be on top of market and regulatory trends, as well as the competitive landscape in the fintech industry</li>"},{"text":"What You Will Need","content":"<li>A Bachelor’s / Masters or an equivalent degree</li><li>Should have at least have 4 year working experience, experience working in tech or financial service companies is a plus</li><li>Strong business sense and problem-solving skills</li><li>Strong project management skill to manage complex projects; also can manage and prioritize multiple internal and external stakeholders</li><li>Strong communication skills, collaborative spirit, delighted to work with other stakeholders&nbsp;</li><li>Strong analytical thinking and data analytics ability</li><li>Good knowledge of SQL is a plus</li>"}],"text":"Business Analytics Lead, Money Management - Merchant Services - #9690","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 18px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.</span></div>","descriptionBodyPlain":"About The Role\n\nWe are looking for a Money Management Business Lead (Merchant Services) for GoTo Financial who will play an important role in setting the foundational business strategy and executing go-to-market strategies of our team. You’ll take the wheel in creating the most impactful money management business solutions for our merchants, and steer the partnership strategy with our bank partners. Throughout this exciting experience, you’ll build relationships with internal and external stakeholders, from product, marketing, research, legal, and compliance team. The ideal candidate will have experience in business and product management, excellent communication skills, and the ability to work independently in a fast-paced environment.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/192f57ad-633c-4006-a0df-09f148bb5ece","applyUrl":"https://jobs.lever.co/GoToGroup/192f57ad-633c-4006-a0df-09f148bb5ece/apply"},{"additionalPlain":"About The Team\n\nJoin GoPay team, a hub of innovation and collaboration, to revolutionize everyday experiences at scale, while embracing a culture that values creativity and meaningful impact. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone has access to high quality financial services. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 14px\">Join GoPay team, a hub of innovation and collaboration, to revolutionize everyday experiences at scale, while embracing a culture that values creativity and meaningful impact. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone has access to high quality financial services. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713256664040,"descriptionPlain":"Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy & driver execution. Having prior experience in data query & data analysis will be considered highly relevant for this role. \n","description":"<div><span style=\"font-size: 16px\">Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy &amp; driver execution. Having prior experience in data query &amp; data analysis will be considered highly relevant for this role.&nbsp;</span></div>","id":"e7e1c1fc-08b0-4539-abf0-84b5685c319a","lists":[{"text":"What You Will Do","content":"<li>Utilize existing tools, such as SQL, etc. to gather data relevant for analysis</li><li>Develop and Implement a data-driven business strategy that aligns with the overall objectives</li><li>Analyze market trends, competitive landscape &amp; customer needs to identify opportunities for business expansion</li><li>Create, monitor and analyze business performance metrics to assess the effectiveness of strategies and drive continuous growth</li><li>Collaborate with the marketing, engineering and product teams to develop integrated strategies</li><li>Be on top of execution of product and business initiatives</li>"},{"text":"What This Role Needs","content":"<li>A Bachelor’s / Masters or an equivalent degree</li><li>Should have at least have 1 year working experience, experience working in tech or financial service companies is a plus</li><li>Strong business sense and problem-solving skills</li><li>Strong project management skill to manage complex projects; also can manage and prioritize multiple internal and external stakeholders</li><li>Strong communication skills, collaborative spirit, delighted to work with other stakeholders</li><li>Strong analytical thinking and data analytics ability</li><li>Good knowledge of SQL is a must</li>"}],"text":"Business Associate, Transfers - Consumer Payment - #9865","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy &amp; driver execution. Having prior experience in data query &amp; data analysis will be considered highly relevant for this role.&nbsp;</span></div>","descriptionBodyPlain":"Since the launch of GoPay app in 2023 , we have seen exponential growth. Having said that , we have set even higher goals for ourselves. As part of the Transfers team in Money Management, you will be responsible for managing the money-in and money-out user experiences. You will be working with the digital marketing, brand team, CRM team, and Product teams to create strategy around the user journey, from acquisition to retention. You will be expected to utilize data to optimize the strategy & driver execution. Having prior experience in data query & data analysis will be considered highly relevant for this role. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/e7e1c1fc-08b0-4539-abf0-84b5685c319a","applyUrl":"https://jobs.lever.co/GoToGroup/e7e1c1fc-08b0-4539-abf0-84b5685c319a/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716278898371,"descriptionPlain":"We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. \n","description":"<div><span style=\"font-size: 16px\">We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. </span></div>","id":"2242125a-7155-4353-bc79-473d237d6808","lists":[{"text":"What You WIll Do","content":"<li>Be the expert in using data to measure and analyze business performance.</li><li>Explore business issues/opportunities, uncover insights and/or identify targeted areas for business growth.</li><li>Lead new data analytics capability rollouts and/or data-led initiatives throughout organization.&nbsp;</li><li>Monitor key metrics and alert the business on potential issues.</li><li>Analyze operational efficiency and build business models to guide decision-making.</li><li>Design market/business intelligence reports and performance measurement dashboards to share with senior management.</li><li>Focus on data analysis, report generation, and supporting more senior team members in data-related tasks.</li><li>Primarily responsible for querying databases, preparing datasets, and creating basic visualizations.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree in a quantitative field such as Computer Science, Statistics, Mathematics, Economics, or related fields.</li><li>Strong analytical and problem-solving skills.</li><li>Proficiency in SQL for data extraction.</li><li>Familiarity with data visualization tools such as Tableau, Power BI, or Looker.</li><li>Familiarity with Excel and PPT.</li><li>Basic understanding of statistical methods and techniques.</li><li>Excellent communication skills to convey insights to non-technical stakeholders.</li><li>Ability to work in a fast-paced environment and handle multiple tasks simultaneously.</li><li>Previous internship or coursework in business intelligence or analytics is a plus.</li><li>Basic understanding of business models in the field.</li>"}],"text":"Business Intelligence Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. </span></div>","descriptionBodyPlain":"We are seeking a skilled Business Intelligence Analyst, where you'll be instrumental in utilizing data to measure business performance, uncover growth opportunities, and monitor key metrics. Lead the rollout of new analytics capabilities and initiatives throughout the organization, while also analyzing operational efficiency and constructing business models to guide decision-making. Your responsibilities will include designing market/business intelligence reports and performance measurement dashboards for senior management, as well as supporting senior team members in data-related tasks such as querying databases and creating visualizations. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/2242125a-7155-4353-bc79-473d237d6808","applyUrl":"https://jobs.lever.co/GoToGroup/2242125a-7155-4353-bc79-473d237d6808/apply"},{"additionalPlain":"Mobility Marketing has 20 members divided into the online ride hailing and logistic marketing team. Full of diverse backgrounds and locations, we provide the nourishment to sustain our business from the inside out. Our main responsibility is to ensure that we defend our position and continue to grow in Vietnam. \nAs a CRM, we run all things related to customer engagement and retention across the entire Gojek App. We aim to generate incremental impact from every interaction between our users and the company. How do we ensure this, you ask? By relying heavily on experiments and A/B testing for continuous improvement. Additionally, we collaborate with the talented people over in the Product, Marketing, Research, BI, Growth, Analytics, and Creative teams on a daily basis to ensure the alignment of insights, strategy, and business objectives, and to deliver the best user experience possible.\n\nOne of our team's biggest obstacles has been understanding our customers' needs and preferences towards our various services and predicting their future behaviors for preventive actions rather than reactive ones. After many weeks of research, collaboration, and trial and error, we figured out that the best way to tackle this issue was to integrate data science and machine learning into our approach, supported by campaign management tools that enable a seamless journey setup. Currently, our team has been busy working on a project surrounding automation and personalization, whose purpose is to enhance our user experience by offering relevant communication to support the larger goal in increasing Gojek active users.\n\nAs a team, we’re concerned with the growth of the company, and each other’s personal growth and well-being, too; we enjoy bonding over our shared love of workout routines, books, movies and any other hobbies.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 9pt\">Mobility Marketing has 20 members divided into the online ride hailing and logistic marketing team. Full of diverse backgrounds and locations, we provide the nourishment to sustain our business from the inside out. Our main responsibility is to ensure that we defend our position and continue to grow in Vietnam.&nbsp;</span></div><div><span style=\"font-size: 9pt\">As a CRM, we run all things related to customer engagement and retention across the entire Gojek App. We aim to generate incremental impact from every interaction between our users and the company. How do we ensure this, you ask? By relying heavily on experiments and A/B testing for continuous improvement. Additionally, we collaborate with the talented people over in the Product, Marketing, Research, BI, Growth, Analytics, and Creative teams on a daily basis to ensure the alignment of insights, strategy, and business objectives, and to deliver the best user experience possible.</span></div><div><br></div><div><span style=\"font-size: 9pt\">One of our team's biggest obstacles has been understanding our customers' needs and preferences towards our various services and predicting their future behaviors for preventive actions rather than reactive ones. After many weeks of research, collaboration, and trial and error, we figured out that the best way to tackle this issue was to integrate data science and machine learning into our approach, supported by campaign management tools that enable a seamless journey setup. Currently, our team has been busy working on a project surrounding automation and personalization, whose purpose is to enhance our user experience by offering relevant communication to support the larger goal in increasing Gojek active users.</span></div><div><br></div><div><span style=\"font-size: 9pt\">As a team, we’re concerned with the growth of the company, and each other’s personal growth and well-being, too; we enjoy bonding over our shared love of workout routines, books, movies and any other hobbies.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Ho Chi Minh City","team":"-","allLocations":["Ho Chi Minh City"]},"createdAt":1715224196708,"descriptionPlain":"As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.\n","description":"<div><span style=\"font-size: 9pt\">As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.</span></div>","id":"59548879-6e27-4764-9378-85f7f2003a91","lists":[{"text":"What you will do","content":"<li>Implement marketing tactical campaigns via inbound (Shuffle Card, Inbox, Chatbot) and outbound channels (e.g. Email, Push Notification)</li><li>Implement lifecycle automation programs via inbound (Shuffle Card, Inbox, Chatbot) and outbound channels (e.g. Email, Push Notification)</li><li>Launch/deployment is conducted in an efficient, timely, and high quality manner</li><li>Manage the creation and updating of emails, push notifications, landing pages, forms, and reports for campaigns and webpages</li><li>Develop communication templates for consistency and effectiveness in accordance with branding guidelines and best practices</li><div><br></div>"},{"text":"What you will need","content":"<li>A BS/MS in Engineering, Computer Science, Business, Marketing, or equivalent experience</li><li>At least 1 years of CRM marketing experience, preferably within the online mobile app, e-commerce, quick commerce, e-grocery,&nbsp; telecommunications, airlines, or other relevant service industry</li><li>Proficiency in launching CRM campaign/customer journey implementation and experimentation through advanced CRM tools (e.g. Braze, Leanplum, Clevertap, SalesForce)</li><li>Good knowledge of HTML/CSS, scripting, and SQL will be a plus</li><li>Strong analytical and quantitative skills; ability to use hard data and metrics to back up assumptions, recommendations, and drive actions (e.g. Strong knowledge of conducting experimentation and A/B testing)</li><li>Excellent written &amp; verbal communication in English and Vietnamese at the business level with strong presentation skills in order to represent the Marketing team in functional meetings</li><li>Ability to work effectively within a high-pressure environment where prioritization is essential</li><div><br></div>"}],"text":"CRM Executive - Vietnam","country":"VN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.</span></div>","descriptionBodyPlain":"As our CRM Marketing, you’ll take the wheel in executing the campaign/journey implementation and development for Gojek customer lifecycle programs and communications. Working closely with the Marketing Team, Product Team, and Strategy and Planning team, you will configure technical implementation of Gojek customer lifecycle journeys and tactical communication campaigns through various inbound and outbound (non-paid) channels. You will directly impact the incremental growth of Gojek in the Indonesia market through scalable, personalized, relevant, and contextual communication and increase in the engagement and retention of our users.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/59548879-6e27-4764-9378-85f7f2003a91","applyUrl":"https://jobs.lever.co/GoToGroup/59548879-6e27-4764-9378-85f7f2003a91/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"HoldCo - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716264696268,"descriptionPlain":"\n","description":"<div><br></div>","id":"6d8ebb73-2348-423d-847e-b8a8408ac1ed","lists":[{"text":"What You Will Do","content":"<li>Gather business requirements to support BI projects.</li><li>Explore existing and new data sources and facilitate the integration to the Data Warehouse.</li><li>Design and develop Data Quality Framework across Data Platform.</li><li>Design, implement Data Model for enterprise data warehouse.</li><li>Classifying data based Data Governance policy and Data Access Framework.</li><li>Develop data definition and metrics and maintain the consistency across Data team.</li><li>Modify existing structured and unstructured data integration solutions for rapidly evolving business needs.</li><li>Collaborate with a cross-functional team to resolve data quality and operational issues.</li><li>Create conceptual models and data flow diagrams.</li><li>Participate with end users to gather requirements and consult on data integration solutions.</li><li>Receive and adhere to project delivery deadlines.&nbsp;&nbsp;</li><li>Migrate code across environments and leverage a source code management system.</li><li>Develop and maintain proper documentation for data pipeline and service.</li>"},{"text":"What you will need ","content":"<li>Bachelor's or Master's degree in Computer Science, Engineering, Information Systems, or related fields.</li><li>2-5 years of experience in data engineering, software engineering, or a similar role.</li><li>Proficiency in programming languages such as Python, Java, or Scala.</li><li>Solid understanding of SQL, database management systems, and data modeling concepts.</li><li>Experience with big data technologies such as Hadoop, Spark, or Kafka.</li><li>Hands-on experience with cloud platforms such as AWS, Azure, or Google Cloud Platform.</li><li>Strong problem-solving skills and attention to detail.</li><li>Ability to design and implement scalable data pipelines and ETL processes.</li><li>Excellent communication and collaboration skills to work effectively with cross-functional teams.</li><li>Deeper understanding of data engineering concept, programming language, and big data technology.</li>"}],"text":"Data Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><br></div>","descriptionBodyPlain":"\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6d8ebb73-2348-423d-847e-b8a8408ac1ed","applyUrl":"https://jobs.lever.co/GoToGroup/6d8ebb73-2348-423d-847e-b8a8408ac1ed/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"HoldCo - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716265340466,"description":"","descriptionPlain":"","id":"36d71dff-c9ac-44b8-b870-f74d941bd7d3","lists":[{"text":"What You Will Do","content":"<li>Design and implement complex data solutions, architecting data systems, and driving technical initiatives.</li><li>Optimize data infrastructure for performance, scalability, and reliability - working with large-scale data volumes &amp; distributed systems.</li><li>Modify existing structured and unstructured data integration solutions for rapidly evolving business needs.</li><li>Collaborate with a cross-functional team to resolve data quality and operational issues, as&nbsp; well as delivering solutions to meet business needs.</li><li>Participate with end users to gather requirements and consult on data integration solutions.</li><li>Design, build, and optimize data pipelines, ETL processes, and data infrastructure in the field.</li><li>Provide technical guidance and support to ensure the successful delivery of data projects, including troubleshooting and resolving technical challenges.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's or Master's degree in Computer Science, Engineering, Information Systems, or related fields.</li><li>5+ years of experience in data engineering, software engineering, or a similar role.</li><li>Expertise in programming languages such as Python, Java, or Scala.</li><li>Advanced knowledge of SQL, database management systems, and data warehousing concepts.</li><li>Extensive experience with big data technologies and distributed systems.</li><li>Proven track record of designing and implementing complex data pipelines and ETL processes.</li><li>Deep understanding of cloud-based data technologies and best practices.</li><li>Leadership abilities to mentor junior team members and lead technical initiatives.</li><li>Strong problem-solving and troubleshooting skills.</li><li>Ability to communicate technical concepts effectively to both technical and non-technical stakeholders.</li>"}],"text":"Data Engineer Lead","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/36d71dff-c9ac-44b8-b870-f74d941bd7d3","applyUrl":"https://jobs.lever.co/GoToGroup/36d71dff-c9ac-44b8-b870-f74d941bd7d3/apply"},{"additionalPlain":"About the team \nThe GoTo DPPO Team focuses on ensuring compliance with prevailing personal data protection laws and regulations along with best practices in protecting the personal data and privacy of individuals in the GoTo ecosystem. The team comprises personnel from various backgrounds (legal, IT/technical, risk and control, etc.) and promotes open communication and strong collaboration. Team members are held accountable for their tasks and are empowered to make changes to make things better.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 10pt\">About the team</b><span style=\"font-size: 10pt\">&nbsp;</span></div><div><span style=\"font-size: 10pt\">The GoTo DPPO Team focuses on ensuring compliance with prevailing personal data protection laws and regulations along with best practices in protecting the personal data and privacy of individuals in the GoTo ecosystem. The team comprises personnel from various backgrounds (legal, IT/technical, risk and control, etc.) and promotes open communication and strong collaboration. Team members are held accountable for their tasks and are empowered to make changes to make things better.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Security","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1685434808527,"descriptionPlain":"About the Role\nWorking as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.\n","description":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.</span></div>","id":"fa9b44db-1ec0-4856-873f-afe6dfcb9d22","lists":[{"text":"What you will do","content":"<li>Be the first point of contact for NakaTroops (ODS and eCommerce) for any data protection and privacy related matters.</li><li>Assess new projects/initiatives to identify any privacy risks and provide recommendations on required privacy measures to be incorporated into products and services to maintain user’s privacy.</li><li>Assists with remediation of data protection and privacy control deficiencies.</li><li>Collaborate with various teams in the organization, including business, product and engineering</li>"},{"text":"What you will need","content":"<li>Sound knowledge of personal data protection laws and regulations. At the very minimum, familiarity with Indonesia's UU Pelindungan Data Pribadi.&nbsp;</li><li>Proficient in both English and Bahasa (written and spoken).</li><li>Experience in the area of data protection and privacy is highly desirable.</li><li>Related certifications are also an advantage: CIPM, CIPP, CIPT</li><li>Good communication skills as the role requires interaction with various stakeholders.</li><li>Highly motivated to learn and develop, able to work in a fast-paced environment.</li>"}],"text":"Data Protection & Privacy Office","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt;\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.</span></div>","descriptionBodyPlain":"About the Role\nWorking as part of the GoTo Data Protection and Privacy Office, this role will focus on supporting and providing guidance to the business units (ODS and eCommerce) in data protection and privacy risk management and compliance. This includes providing advice and assessments on initiatives/projects through various privacy instruments (e.g. Privacy Impact Assessment, Privacy by Design review, etc.). Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/fa9b44db-1ec0-4856-873f-afe6dfcb9d22","applyUrl":"https://jobs.lever.co/GoToGroup/fa9b44db-1ec0-4856-873f-afe6dfcb9d22/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Security","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1687139215540,"descriptionPlain":"Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy\n","description":"<div><span style=\"font-size: 10pt\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy</span></div>","id":"481d69bc-7824-4c88-bc7c-c21902cbf131","lists":[{"text":"What will you do","content":"<li>Assist in building the Data Protection Framework based on the prevailing Personal Data Protection Laws &amp; Regulations for all GoTo Entities (this includes regulations from countries where GoTo entities operate)</li><li>Identifying the expected controls and processes that are required in order to be compliant to Personal Data Protection Laws &amp; Regulations</li><li>Monitor the rate of compliance of the various GoTo entities by performing active reviews and/or monitoring, identify any gaps and monitor remediation actions</li><li>Facilitate (supporting related teams in BUs) external audits and reviews that are related to Personal Data Protection (e.g. ISO 27701 audit)</li><li>Facilitate the handling of personal data incidents (reporting, response), if any.</li>"},{"text":"What you will need","content":"<li>Sound knowledge of personal data protection laws and regulations. At the very minimum, familiarity with Indonesia's UU Pelindungan Data Pribadi.&nbsp;</li><li>Proficient in both English and Bahasa (written and spoken).</li><li>Experience in risk &amp; control management (e.g. audit, enterprise risk management, operational risk management)</li><li>Experience in the area of data protection and privacy is highly desirable</li><li>Related certifications are also an advantage: CIPM, CIPP, CIPT</li><li>Good communication skills as the role requires interaction with various stakeholders</li><li>Highly motivated to learn and develop, able to work in a fast-paced environment.</li>"},{"text":"About the Team","content":"<li>The GoTo DPPO Team focuses on ensuring compliance with prevailing personal data protection laws and regulations along with best practices in protecting the personal data and privacy of individuals in the GoTo ecosystem. The team comprises personnel from various backgrounds (legal, IT/technical, risk and control, etc.) and promotes open communication and strong collaboration.</li><li>Team members are held accountable for their tasks and are empowered to make changes to make things better.</li>"}],"text":"Data Protection & Privacy Office - Strategy & Monitoring","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy</span></div>","descriptionBodyPlain":"Working as part of the GoTo Data Protection and Privacy Office, this role will focus on monitoring compliance to the prevailing Personal Data Protection Laws and Regulations. This includes understanding the Personal Data Protection laws and regulations that are applicable to GoTo entities, identifying the expected control/processes that are required in order to comply with the regulatory requirements and performing active monitoring to ensure compliance. Successful candidates will be exposed to the highly dynamic and fast-paced working environment and are expected to exhibit sound knowledge and application of personal data protection requirements into various types of projects/initiatives from the business units. Good communication skill is essential since the role is exposed to various stakeholders with different backgrounds who may have different levels of understanding on the topic of data protection and privacy\n","hostedUrl":"https://jobs.lever.co/GoToGroup/481d69bc-7824-4c88-bc7c-c21902cbf131","applyUrl":"https://jobs.lever.co/GoToGroup/481d69bc-7824-4c88-bc7c-c21902cbf131/apply"},{"additionalPlain":"About the Team\n\nOur Data Warehouse team is one of the key teams to bring data into critical information and knowledge that can be used to make sound business resolutions. We are hardening the bridges by working closely with Product Engineers and Data Engineers to gather any new data point or capture data changes. And combining them by working closely with various and growing business teams to capture requirements and convert them into business impact.\n\nWe are a tight-knit group made up of culinarista, netflix enthusiasts, readers, and amateur gamers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Our Data Warehouse team is one of the key teams to bring data into critical information and knowledge that can be used to make sound business resolutions. We are hardening the bridges by working closely with Product Engineers and Data Engineers to gather any new data point or capture data changes. And combining them by working closely with various and growing business teams to capture requirements and convert them into business impact.</div><div><br></div><div>We are a tight-knit group made up of culinarista, netflix enthusiasts, readers, and amateur gamers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710917725702,"descriptionPlain":"About the Role\n\nAs a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.\n\nYour main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.\n\nBest yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>As a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.</div><div><br></div><div>Your main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.</div><div><br></div><div>Best yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.</div><div><br></div>","id":"6be8c0fe-d1e1-416f-8b8c-19d792255ff4","lists":[{"text":"What You Will Do","content":"<li>Handle End to End Data Pipelines from heterogeneous input to Data Warehouse, serving various multiple teams for analytical purposes</li><li>Develop scalable automation/script to handle growing data warehouse tasks</li><li>Become a data architect by implementing Data Modeling concepts and data governance policies based on data type and use case</li><li>Diagnose and solve data issues in our data pipelines look for the root cause of problems and envision a long-term solution</li><li>Responsible for managing a reliable Single Version of Truth and turning Data into critical information and knowledge that can be used to make sound business resolutions</li><li>Work closely with the data stakeholders to come up with a working data solution and accommodate their data needs</li><li>Define clear and well-scoped requirements documents, including specs and workflows, that are easily understood by technical and non-technical audiences</li><li>Consult with product and data engineers to ensure the developed data solutions match the business needs</li>"},{"text":"What You Will Need ","content":"<li>At least 2-3 years of experience in a Data Environment as a Data Warehouse Developer or Data Engineer</li><li>Deep knowledge related to Data Warehouse concepts, architecture, and data modeling</li><li>Advanced level SQL (Query, CRUD operation). Experience in cloud data warehouses (BigQuery, Redshift) is a plus</li><li>Enjoy writing code to solve any data problems, preferably in Python, and experience in Java and Go experiences is a plus</li><li>Experience in a range of ETL systems (Apache Airflow, Debezium, etc)</li><li>Basic knowledge in real-time data processing. Experience in Apache Kafka, and Apache Flink is a plus</li><li>Basic knowledge of containerization (Docker) and CI/CD (Gitlab CI)</li><li>Analytical and data-driven, you love digging into the data to know what’s happening and define &amp; measure success on every project</li>"}],"text":"Data Warehouse Engineer - Payments Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.</div><div><br></div><div>Your main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.</div><div><br></div><div>Best yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.</div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs a Data Warehouse Engineer, you’ll be an instrumental cog in the Data team that impacts the company’s analytical data infrastructure.\n\nYour main objective is to design, develop, and manage our data warehouse and the data infrastructure that supports it, which needs to operate reliably at scale using a high degree of automation in many aspects. You will also be managing the single source of truth of data for analytics and partnering with product managers, product engineers, data engineers, BI/analytics, and data scientists during this ride. You will also play active roles in ensuring data governance policies and tooling are implemented and adhered to.\n\nBest yet, you’ll have the opportunity to flex your technical and communication skills, helping the team to best utilize the data that we have and deliver beautifully simple and scalable solutions to meet user needs.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6be8c0fe-d1e1-416f-8b8c-19d792255ff4","applyUrl":"https://jobs.lever.co/GoToGroup/6be8c0fe-d1e1-416f-8b8c-19d792255ff4/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710749746948,"description":"","descriptionPlain":"","id":"abeeede5-8126-4e1d-b4e4-c5b4afbff43c","lists":[{"text":"What you will do","content":"<li>Devise and implement tailored digital marketing strategies to shape the Gojek brand and drive user acquisition and growth</li><li>Analyze market trends to identify growth opportunities and refine strategies accordingly</li><li>Collaborate cross-functionally to ensure alignment with business goals</li><li>Monitor and evaluate campaign performance to drive optimization</li><li>Stay updated on industry trends and technologies to drive innovation</li><li>Manage relationships with external partners and agencies to support initiatives</li><li>Contribute to overarching marketing strategies and brainstorming sessions.</li>"},{"text":"What you will need","content":"<li>3+ years of digital marketing experience</li><li>Proficiency in digital marketing tools and platforms</li><li>Strong analytical, communication, and problem-solving skills</li><li>Bachelor's degree in Marketing, Communications, or related field</li><li>Fluency in English, (with Vietnamese proficiency a plus).</li>"}],"text":"Digital Performance Marketing Specialist Gojek","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/abeeede5-8126-4e1d-b4e4-c5b4afbff43c","applyUrl":"https://jobs.lever.co/GoToGroup/abeeede5-8126-4e1d-b4e4-c5b4afbff43c/apply"},{"additional":"","additionalPlain":"","categories":{"department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716604187900,"description":"","descriptionPlain":"","id":"471c9704-cd3d-4cc3-9ddb-36f64cfa787b","lists":[{"text":"What you will do:","content":"<li>Facilitate clear communication with stakeholders to understand project requirements and expectations.</li><li>Utilize data-driven approaches to identify, analyze, and resolve complex business challenges.</li><li>Translate ambiguous problem statements into well-defined analytical questions and hypotheses.</li><li>Independently design and implement analytical frameworks to address business needs and drive improvements.</li><li>Implement scalable monitoring solutions that require a very minimum manual intervention while ensuring data accuracy and reliability</li>"},{"text":"What you will need:","content":"<li>Strong project management skills to balance the statistical &amp; long term strategies and tactical needs from regional team in achieving the targets</li><li>Superb business sense to transform an ambiguous business or product problem into a well-scoped and impactful analysis&nbsp;</li><li>Ability to independently select and implement the correct statistical test to answer business questions.</li><li>Solid experience in handling analytical using SQL, including both DDL and DML.</li><li>Experienced with job schedulers tools like Airflow or DBT.</li><li>Ability to code for data analysis in Python, R, or similar languages is advantageous.</li>"}],"text":"Driver Strategy Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/471c9704-cd3d-4cc3-9ddb-36f64cfa787b","applyUrl":"https://jobs.lever.co/GoToGroup/471c9704-cd3d-4cc3-9ddb-36f64cfa787b/apply"},{"additionalPlain":"About Us\n\nWe are a team of developers and product managers with diverse academic, professional and personal backgrounds but united by the passion to enrich Data Platform & Analytics at Gojek through sound methods and ease of use. Working alongside the Product Managers, BI Analytics and Product Engineers, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions. \n\nThis includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.\n\nAlong with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About Us</b></div><div><br></div><div><span style=\"font-size: 16px\">We are a team of developers and product managers with diverse academic, professional and personal backgrounds but united by the passion to enrich Data Platform &amp; Analytics at Gojek through sound methods and ease of use. Working alongside the Product Managers, BI Analytics and Product Engineers, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">This includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.</span></div><div><br></div><div><span style=\"font-size: 16px\">Along with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1714628452648,"descriptionPlain":"About the Role\n\nAs Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.    \n \nYou will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.\n\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style=\"font-size: 16px\">&nbsp;</span></div><div><span style=\"font-size: 16px\">You will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.</span></div><div><br></div>","id":"dfe98505-36d8-4467-aa36-df8599ab69d8","lists":[{"text":"What You Will Do","content":"<li>Assess and manage team performance through staff meetings, one on ones, and quarterly assessments</li><li>Mentor your engineers to ensure their growth and engagement in the team, evaluate team workload and develop a staffing plan, and assign projects and balance workload to ensure continuous delivery and higher predictability</li><li>Serve as primary interface to staffing team, creating job descriptions, identifying sources for candidates, conducting interviews and shepherding candidates through the process</li><li>Lead a team of Software Engineers focused on improving velocity and impact across Gojek’s diverse project areas and platforms</li><li>Become a partner to Product Managers on deciding vision, strategy and OKRs</li><li>Provide technical expertise throughout the product life cycle including design, implementation, and delivery of scalable build/test/release infrastructure</li>"},{"text":"What You Will Need","content":"<li>Having at least 8 years of relevant software development experience preferably with experience in data products, also at least 2 years of leading and mentoring an engineering team to success</li><li>Ability to understand and implement Continuous Integration and Continuous Delivery</li><li>Well versed with Agile methodologies, TDD and Test Engineering, and Automation</li><li>Ability to plan, prioritize, estimate and execute releases with a good degree of predictability</li><li>Ability to scope, review and refine user stories for technical completeness and to alleviate dependency risks</li><li>Ability to review the code and ensure code maintainability as part of new product enhancements.</li>"},{"text":"Bonus Points If","content":"<li>Understanding in data modeling for data warehouse, relational database, and non-relational database</li><li>Understanding in batch and stream data pipeline; Beam, Flink, Spark</li>"}],"text":"Engineering Manager - Data Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style=\"font-size: 16px;\">&nbsp;</span></div><div><span style=\"font-size: 16px;\">You will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.</span></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs Gojek is undergoing exponential growth, our data has followed the same growth curve. Thus, as an integral member of the Data Platform team, you'll be at the epicenter of one of Southeast Asia's most coveted companies and witness and solve the challenges that come with rapid scaling.    \n \nYou will be on the streaming team responsible for working on 3 products. The next-gen self-serve real-time data transformation platform, Kafka to multiple sink lightweight and DIY product and dynamic schema registry. Since most of Gojek across Data Science and Engg use this product and rely on them, the responsibility increases to provide high-quality products.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/dfe98505-36d8-4467-aa36-df8599ab69d8","applyUrl":"https://jobs.lever.co/GoToGroup/dfe98505-36d8-4467-aa36-df8599ab69d8/apply"},{"additionalPlain":"About the Team\n\nThe Marketplace Product Development team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace. We are responsible for the pillars of technology, science, and strategy across the supply and demand. More specifically, we optimally match customer orders across Gojek (Food, Transport, etc.) with the right driver partners at the right time and location. We are the brains of Gojek's on-demand nature, matching millions of orders a day. This supply and demand matching is the core problem that our Product Team tackles every day, designing products and services that solve this ever-evolving challenge. The efficiency of our matching technology directly impacts customer and driver-partner experience, as well as the unit economics of the platform.\n \nSome of the key problem statements that our team works on are: how to intelligently pair driver partners to customers to provide the quickest pickup times, how to make our service more affordable by pairing demand on overlapping routes, and how to fairly distribute customer orders across our driver base, just to name a few. \n \nCombating remote work has brought us even closer, with frequent catch-ups over tea and sharing ways we have been keeping ourselves sane. Along with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Marketplace Product Development team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace. We are responsible for the pillars of technology, science, and strategy across the supply and demand. More specifically, we optimally match customer orders across Gojek (Food, Transport, etc.) with the right driver partners at the right time and location. We are the brains of Gojek's on-demand nature, matching millions of orders a day. This supply and demand matching is the core problem that our Product Team tackles every day, designing products and services that solve this ever-evolving challenge. The efficiency of our matching technology directly impacts customer and driver-partner experience, as well as the unit economics of the platform.</div><div>&nbsp;</div><div>Some of the key problem statements that our team works on are: how to intelligently pair driver partners to customers to provide the quickest pickup times, how to make our service more affordable by pairing demand on overlapping routes, and how to fairly distribute customer orders across our driver base, just to name a few.&nbsp;</div><div>&nbsp;</div><div>Combating remote work has brought us even closer, with frequent catch-ups over tea and sharing ways we have been keeping ourselves sane. Along with our desire to utilize smart technology and innovative engineering strategies to make people’s lives easier, our team also bonds over our shared love for reading, gaming, and drinking lots of coffee. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715062480243,"descriptionPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility & reliability to enable more business opportunities. \nEngineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. \n\nAs an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility &amp; reliability to enable more business opportunities.&nbsp;</div><div>Engineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. </div><div><br></div><div>As an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.</div><div><br></div><div><br></div>","id":"1098f20b-5c61-4b52-ac12-0c7d065e80db","lists":[{"text":"What you will do","content":"<li>Drives business strategy along with cross-functional counterparts &amp; works with team members to convert that into OKRs</li><li>Work closely with your counterparts to ensure that the team’s deliverables fit well into broader organization objectives</li><li>Represent and accountable for the technical output of the team and drive to improve specific business KPI</li><li>Ensures that knowledge is shared amongst the team and does not position themselves or others as a single point of failure</li><li>Crosses team and service boundaries to work across budgeting, legal, compliance, and security aspects of the team’s delivery</li><li>Monitors and adjusts team pace to instill urgency for success but protect from burnout.</li><li>Responsible for coaching, development, and career management for the team</li><li>Independently plans and executes changes to team staffing in service of company goals: identifying gaps, defining roles, and creating people-planning for the team.</li>"},{"text":"What Will You Need","content":"<li>Engineers typically acquire the skills, knowledge, and experience necessary to meet the expectations of this role with at least 10 years of relevant industry experience.</li><li>Track record of leading multidisciplinary teams. (dev / test / pm / data)Has demonstrated ability to successfully lead people, people managers, teams or projects multiple times in different contexts.</li><li>Well-versed with Agile methodologies, best practices of writing tests and Continuous Integration / Continuous Delivery.</li><li>Has strong expertise and hands-on experience in at least one engineering focus (front-end, back-end, mobile, data or systems)</li><li>Experience developing end-to-end products that leverage machine learning at scaleTrack record in building a team of talented engineers.&nbsp;</li><li>Excellent written &amp; verbal communication skills focused on improving collaboration, understanding &amp; information exchange across all stakeholders.</li>"}],"text":"Engineering Manager - Marketplace","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility &amp; reliability to enable more business opportunities.&nbsp;</div><div>Engineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. </div><div><br></div><div>As an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Engineering Manager. In this role, you would be tasked with platformization of the Mobility Marketplace as a first-class problem, which requires understanding end-to-end use-cases and challenge the status quo at all times by reviewing current engineering techniques and tools and scout for opportunities and fundamental engineering solutions that would bring agility & reliability to enable more business opportunities. \nEngineering manager is a leadership role, in which direct reports are team leads and senior engineers of the team. \n\nAs an Engineering manager, you will be accountable to lead and grow a team of 15+ engineers. To excel in this role we believe you need the ability to drive strategic technical, delivery and people decisions for the team by collaborating with cross-functional counterparts and stakeholders and also considering inputs from various parties, most importantly from the customers. You are also expected to coach and nurture your team, including but not limited to team leads in the team who report to you.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/1098f20b-5c61-4b52-ac12-0c7d065e80db","applyUrl":"https://jobs.lever.co/GoToGroup/1098f20b-5c61-4b52-ac12-0c7d065e80db/apply"},{"additionalPlain":"About The Team\n\nWorking in a team for an online groceries business is like conducting a symphony orchestra. Each member plays a crucial role, contributing their expertise to create a harmonious and efficient operation.\n\nIn this symphony of teamwork, each department relies on the others to create a seamless and unforgettable performance. Just as a well-executed symphony leaves the audience feeling uplifted and satisfied, our collaborative efforts aim to delight our customers and leave them coming back for an encore.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Working in a team for an online groceries business is like conducting a symphony orchestra. Each member plays a crucial role, contributing their expertise to create a harmonious and efficient operation.</span></div><div><br></div><div><span style=\"font-size: 16px\">In this symphony of teamwork, each department relies on the others to create a seamless and unforgettable performance. Just as a well-executed symphony leaves the audience feeling uplifted and satisfied, our collaborative efforts aim to delight our customers and leave them coming back for an encore.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716254712180,"descriptionPlain":"We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.\n","description":"<div><span style=\"font-size: 16px\">We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.</span></div>","id":"07d2ca8f-3a58-4d41-9ffe-ed72e8835433","lists":[{"text":"What You Will Do","content":"<li>Be the primary stakeholders for all things finance-related and provide decision support and business intelligence for the Groceries Business.</li><li>Lead analysis including performance and profitability of SKUs by category, brand, and hub level, and hub operating efficiency metrics (variable costs), return on marketing investment on promotional and marketing activities.</li><li>Oversee and improve the accruals process for costs associated with revenue, promotional spend, and marketing spend.</li><li>Able to recommend/drive margin improvement and cost-saving initiatives and help to promote a culture of efficiencies and financial accountability</li><li>Support and manage annual budgeting and monthly rolling forecast for your assigned product by liaising with key business stakeholders for valuable input</li><li>Develop financial plans and models based on an in-depth understanding of business needs, with the objective of achieving growth and profitability targets</li><li>Support business strategies by providing financial analysis/developing financial models to evaluate ad-hoc projects/initiatives</li>"},{"text":"What This Role Needs","content":"<li>Degree level qualification in Finance/Business</li><li>5-years experience in Finance/Accounting, at least 3 years in an FPA role</li><li>Strong skills with analytics tools (Tableau/Power BI) and analyzing large datasets/SQL</li><li>Proficient in Office (Powerpoint, Excel, Word)</li><li>Prior working experience in a technology company is a plus</li><li>Strong communication and interpersonal skills</li><li>Able to manage multiple stakeholders across various levels of seniority</li><li>Able to work independently with high attention to details</li>"}],"text":"Finance Business Partner - Groceries - #10043","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.</span></div>","descriptionBodyPlain":"We are currently seeking an experienced Finance Business Partner for GoTo’s Groceries vertical, including TokopediaNOW! And associated businesses to support a wide range of finance activities including budgeting, and performance management. This role is an individual contributor role and reports to the Head of Finance of the Groceries vertical.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/07d2ca8f-3a58-4d41-9ffe-ed72e8835433","applyUrl":"https://jobs.lever.co/GoToGroup/07d2ca8f-3a58-4d41-9ffe-ed72e8835433/apply"},{"additionalPlain":"About The Team\n\nThe Financial  Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF-regulated entities, with OJK  as the regulator. As a Financial Services  Compliance team, we are obliged to ensure the adherence of business units to Financial Services  system regulations and at the same time to help ensure the business units are in a strategic position to execute all the business initiative. We are a close-knit team who love to solve problems, eat good food, and taking extra care for each other.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Financial&nbsp; Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF-regulated entities, with OJK&nbsp; as the regulator. As a Financial Services&nbsp; Compliance team, we are obliged to ensure the adherence of business units to Financial Services&nbsp; system regulations and at the same time to help ensure the business units are in a strategic position to execute all the business initiative. We are a close-knit team who love to solve problems, eat good food, and taking extra care for each other.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Legal & Compliance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713511797674,"descriptionPlain":"About The Role\n\nThe Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.\n","description":"<div><b>About The Role</b></div><div><br></div><div>The Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.</div>","id":"da40c805-1fbd-4228-8059-b7729041021e","lists":[{"text":"What You Will Do","content":"<li>Responsible to Compliance and Regulatory Affairs matters in GoTo Financial&nbsp; P2P operations, which includes but not limited to business/product reporting and approval process with the regulators, compliance advisory to business unit, as well as regulatory assessment</li><li>Make sure that compliance is part of the process excellence within Goto Financial’s financial services business line.&nbsp;</li><li>Maintain the latest update of financial services regulations and&nbsp; provide/disseminate assessment on such regulations to the internal&nbsp; units in GoTo Financial</li><li>Be the substantive PiC of GoTo Financial in any external engagements with OJK, other regulators, industry associations and other external stakeholders</li><li>Giving continued support on the creation, standardization and implementation of P2P Compliance, policies, terms &amp; conditions, internal working procedures and standard operational guidelines;</li><li>Any other ad-hoc duties that may be required.</li>"},{"text":"What You Will Need","content":"<li>Bachelor Degree in Law/ Economics/ Accounting/ Computer Science/ Engineer. Having a master’s degree would be an advantage.</li><li>Possess certifications in Risk Management/ IT Audit will be an advantage.</li><li>At least 5 years of mixed experience in the area of economic/ payments policy/ regulatory compliance and past working experience in Bank Indonesia/ Otoritas Jasa Keuangan will be an advantage.&nbsp;</li><li>Advanced level of spoken and written both in English and Indonesian language to, self-initiating as well as a team player who are putting the team best interest above individuals’ objective</li><li>Excellent analytical skills with the capacity of identifying all risks and proactively choosing the best solutions, sound judgment, and attention to details.</li><li>Ability to multitask and adapt to work in a fast-paced team environment.&nbsp;</li><li>Well-developed communication skills (including oral, written and interpersonal skills) and the ability to liaise and negotiate in a variety of contexts, include builds credibility and strong relationships with internal and external stakeholders and counterparts</li>"}],"text":"FinServ Compliance Manager - #9918","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.</div>","descriptionBodyPlain":"About The Role\n\nThe Compliance and Regulatory Affairs Manager is a strategic role within GoTo Financial payments division. As a Senior member of the team, she/he will be expected to be the primary PiC to ensure the alignment of GoTo Financial Services esp P2P and consumer lending business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to make sure the entity fully complies with the regulation.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/da40c805-1fbd-4228-8059-b7729041021e","applyUrl":"https://jobs.lever.co/GoToGroup/da40c805-1fbd-4228-8059-b7729041021e/apply"},{"additionalPlain":"As part of our strategy team, you'll dive deep into complex challenges, utilizing impact-sizing and issue trees to dissect problem statements and unveil transformative solutions.\n\nOur team thrives on collaboration, engaging with diverse stakeholders to ensure our strategies are not only effective but empathetically tailored to meet other stakeholders’ needs\n\nYour voice matters.\n\nOur GoFood’s Food Affordable business team is based in Jakarta and plays a crucial role in scaling the company’s affordable service in our Gojek ecosystem. On a day-to-day basis, we try to empathize with our unique untapped segment’s pain points, then design and implement freshly new, yet impactful and scalable business solutions to have them onboard with our service. Thus, our main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">As part of our strategy team, you'll dive deep into complex challenges, utilizing impact-sizing and issue trees to dissect problem statements and unveil transformative <a href=\"http://solutions.Our\">solutions.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://solutions.Our\">Our</a> team thrives on collaboration, engaging with diverse stakeholders to ensure our strategies are not only effective but empathetically tailored to meet other stakeholders’ needs</span></div><div><br></div><div><span style=\"font-size: 10pt\">Your voice <a href=\"http://matters.Our\">matters.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://matters.Our\">Our</a> GoFood’s Food Affordable business team is based in Jakarta and plays a crucial role in scaling the company’s affordable service in our Gojek ecosystem. On a day-to-day basis, we try to empathize with our unique untapped segment’s pain points, then design and implement freshly new, yet impactful and scalable business solutions to have them onboard with our service. Thus, our main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do.&nbsp;</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709115137182,"descriptionPlain":"As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.\n\nFor example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin? \n- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance. \n- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.\n\n","description":"<div><span style=\"font-size: 10pt\">As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.</span></div><div><br></div><div><span style=\"font-size: 10pt\">For example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin?&nbsp;</span></div><div><span style=\"font-size: 10pt\">- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance.&nbsp;</span></div><div><span style=\"font-size: 10pt\">- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.</span></div><div><br></div>","id":"306b0f44-a6f1-4f43-ba05-6e35695d70f3","lists":[{"text":"What you will do? ","content":"<li>Analyze and execute GoFood’s Affordable Food initiatives, strategies, and implementation, with a primary focus on the lower SES users</li><li>Analyze various data points, design experiments and test scalable solutions to drive business and strategic decision-making on supply <a href=\"http://initiatives.Collaborate\">initiatives.</a></li><li><a href=\"http://initiatives.Collaborate\">Collaborate</a> with the Product Management, Operations, and Sales Team to ensure seamless implementation of all related <a href=\"http://initiatives.Analysis\">initiatives.</a></li><li><a href=\"http://initiatives.Analysis\">Analysis</a> on the competitive intelligence insights and <a href=\"http://findings.Be\">findings.</a></li><li><a href=\"http://findings.Be\">Be</a> a reliable individual for multiple health metrics and analysis.</li><div><br></div>"},{"text":"What you will need? ","content":"<li>Required:&nbsp;</li><div>- Experience and understanding of SQL</div><div>- English proficiency&nbsp;</div><li>A BS/MS in Business, Engineering, Computer Science, Mathematics, Economics, Statistics, or equivalent experience</li><li>2+ years of experience within one or more of the following fields: Strategy Consulting, Investment Banking, Accounting, or relevant industries</li><li>A proactive and team-player attitude</li><li>Create a structured way of problem solving with MECE issue trees and impact sizing</li><li>Comfortable manipulating large amounts of raw data with an obsession to detail and accuracy of data</li><li>Strong project management skills to manage complex projects and to prioritize and effectively collaborate with multiple internal and external stakeholders&nbsp;</li><div><br></div>"}],"text":"Food Affordable Strategy Data Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.</span></div><div><br></div><div><span style=\"font-size: 10pt;\">For example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin?&nbsp;</span></div><div><span style=\"font-size: 10pt;\">- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance.&nbsp;</span></div><div><span style=\"font-size: 10pt;\">- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.</span></div><div><br></div>","descriptionBodyPlain":"As a Strategy Data Analyst for the GoFood team, you will be working as part of the GoFood Strategy Team, working to problem solve and analyze business problem statements by crafting a MECE impact-sizing and issue trees to then plan and craft the most data-driven and structured solution.\n\nFor example, how do we craft an affordable food-delivery business model with a proven unit economics that is economically sustainable and is designed with a positive contribution margin? \n- You will work closely with cross-functional teams to develop data-driven solutions to optimize pricing, allocation, and spend decisions to drive growth and improve performance. \n- You will dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to drive growth and contribute to the continuous improvement of data pipelines within the market intelligence domain.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/306b0f44-a6f1-4f43-ba05-6e35695d70f3","applyUrl":"https://jobs.lever.co/GoToGroup/306b0f44-a6f1-4f43-ba05-6e35695d70f3/apply"},{"additionalPlain":"About The Team\n\nBeing part of the ODS FP&A consolidation team, you will be responsible for regular business reporting, including the preparation of weekly / monthly performance reviews. The team is task orientated, with the focus on ensuring things get done and problems get solved. There will also be opportunities to work with various teams and learn from the organization. \n","additional":"<div><b>About The Team</b></div><div><br></div><div>Being part of the ODS FP&amp;A consolidation team, you will be responsible for regular business reporting, including the preparation of weekly / monthly performance reviews. The team is task orientated, with the focus on ensuring things get done and problems get solved. There will also be opportunities to work with various teams and learn from the organization.&nbsp;</div>","categories":{"commitment":"Permanent","department":"ODS - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716181186480,"descriptionPlain":"About The Role\n\nWe are seeking an FP&A (Financial Planning & Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.\n\nYou will be challenged to provide a clear overview and analysis of the entire ODS P&L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.\n","description":"<div><b>About The Role</b></div><div><br></div><div>We are seeking an FP&amp;A (Financial Planning &amp; Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.</div><div><br></div><div>You will be challenged to provide a clear overview and analysis of the entire ODS P&amp;L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&amp;A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.</div>","id":"111ec429-1fa8-43ef-a9bc-94ad60444ea9","lists":[{"text":"What You Will Do","content":"<li>Responsible for regular business reporting, including the preparation of weekly / monthly performance reviews. Key tasks include preparation of the presentation deck, including commentary and analysis, ensuring the respective Finance Business Partners (FBPs) provide their inputs into the preparation template</li><li>Develop and maintain any new ODS level reports that might be required by management</li><li>Developing and documenting new FP&amp;A processes and policies, as well as looking to improve existing processes</li><li>Working with various Product/Function FBPs to support Business Unit level analytics requirements</li><li>Ad hoc analytics as required to support management decision making</li><li>Budgeting and Forecasting: Support the annual budgeting process including any ad-hoc / quarterly revisions. Including but not limited to template preparation, briefing sessions, ensuring timelines are met and submission into the budget system.&nbsp;</li>"},{"text":"What You Will Need","content":"<li>Degree-level qualification in Accounting/ Business / Quantitative fields of study</li><li>3-5 years experience in Finance, preferably in FP&amp;A role for 1-3 years</li><li>Proficient in financial modeling, to be able to take a business requirement and build a financial model around it</li><li>Able to work independently with strong attention to detail</li><li>Able to communicate effectively with multiple stakeholders across various levels of seniority, both written and verbal</li><li>Able to translate business requirements into financial view and vice versa</li><li>Think critically and in a structured manner</li><li>Basic knowledge of data modeling, and experience with Google BigQuery is a big plus.</li>"}],"text":"FP&A - Consolidation Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are seeking an FP&amp;A (Financial Planning &amp; Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.</div><div><br></div><div>You will be challenged to provide a clear overview and analysis of the entire ODS P&amp;L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&amp;A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.</div>","descriptionBodyPlain":"About The Role\n\nWe are seeking an FP&A (Financial Planning & Analysis) Consolidation Analyst for our On-Demand Services (ODS) vertical. In this role, your responsibility is to support the various management reporting processes (including but not limited to, Weekly/Monthly reviews, Rolling Forecast reviews, and various budget vs actual reviews). You will also be part of the team responsible for the annual budgeting process for ODS.\n\nYou will be challenged to provide a clear overview and analysis of the entire ODS P&L which consists of multiple Business Units (BUs). In this role, you will be working extensively with the ODS FP&A team to ensure that processes run smoothly and that reports are prepared on an accurate and timely basis.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/111ec429-1fa8-43ef-a9bc-94ad60444ea9","applyUrl":"https://jobs.lever.co/GoToGroup/111ec429-1fa8-43ef-a9bc-94ad60444ea9/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705377654170,"descriptionPlain":"About The Role\n\nAt GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.\n","description":"<div><b>About The Role</b></div><div><br></div><div>At GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.</div>","id":"a3543985-6d2c-45cf-84f7-312ec7efed36","lists":[{"text":"What Will You Do","content":"<li>Write and deploy code that's clear, concise, performant, tested, and easy to understand by other teams and engineers</li><li>Participate in design reviews and own feature development from end to end</li><li>Try improving engineering standards, tooling, and processes after understanding our needs without jumping straight into standard practices</li><li>Deep dive and debug production issues across services and levels of the stack when needed</li><li>Coordinate and communicate with different internal/external teams daily—stay in close communication with the product manager and team lead to execute the feature roadmap efficiently</li>"},{"text":"What Will You Need","content":"<li>5+ years experience building consumer/merchant products; hands-on experience in developing, testing, and deploying applications</li><li>Proficiency with one or more programming languages like Java, Go, and Kotlin.</li><li>Understanding of concepts like HTTP/GRPC, idempotency, concurrency, asynchronous programming, fault tolerance and monitoring, performance, feature flags</li><li>Understanding how mobile/web applications interact with back-end and other systems. Experience in building frontend UIs is a bonus</li><li>Good understanding of SQL/NoSQL databases</li><li>Experience with monitoring tools and a good understanding of their concepts</li><li>Have some experience with infrastructure-related tools and concepts such as Kubernetes, Kafka, RDS, GCP</li><li>Excellent verbal and written communication skills</li><div><br></div>"}],"text":"Full Stack Engineer - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.</div>","descriptionBodyPlain":"About The Role\n\nAt GoTo, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer, you'll craft high-quality, performant code, taking ownership of end-to-end feature development. As a key contributor, you will play a crucial part in shaping the future of our Consumer Lending products, ensuring they not only meet but exceed the evolving needs of millions of users. This is an exciting opportunity to make a lasting impact on the financial industry while advancing your career in a dynamic and innovative environment.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a3543985-6d2c-45cf-84f7-312ec7efed36","applyUrl":"https://jobs.lever.co/GoToGroup/a3543985-6d2c-45cf-84f7-312ec7efed36/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1712032361628,"descriptionPlain":"Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan.\nIn this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","description":"<div><span style=\"font-size: 10pt\">Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash </span><a href=\"http://Loan.In\" style=\"font-size: 10pt\" class=\"postings-link\">Loan.</a></div><div><a href=\"http://Loan.In\" style=\"font-size: 10pt\" class=\"postings-link\">In</a><span style=\"font-size: 10pt\"> this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","id":"424140f5-5064-4ce2-8c4d-2b7ecbb14d51","lists":[{"text":"What you will do","content":"<li>Define growth initiatives that will create significant impact on transaction volume and user base, while at the same time helping increase LTV and retention of ecommerce users</li><li>Work closely with Tokopedia fintech team to execute initiatives, review performance, and propose improvements, such as voucher mechanics and communication channels</li><li>Work with the Product team to develop Product roadmap that will improve acquisition, engagement and retention of users</li><li>Collaborate with the Consumer Lending business teams for cross selling users to other use cases beyond ecommerce with LTV as main goalEngage with Finance, Legal and Compliance on any new major initiatives to ensure OJK compliance</li>"},{"text":"What you will need","content":"<li>&nbsp;Previous experience in ecommerce platform is a bonus</li><li>Good understanding of ecommerce business and lending products; has ability to articulate how lending products fit into an ecommerce ecosystem and their relevant use cases</li><li>Excellent collaborative skill and stakeholder management; has ability to engage people from different functions, culture and organizationsA self-starter</li>"}],"text":"Gopay Later Growth Senior Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash </span><a href=\"http://Loan.In\" style=\"font-size: 10pt;\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">Loan.</a></div><div><a href=\"http://Loan.In\" style=\"font-size: 10pt;\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">In</a><span style=\"font-size: 10pt;\"> this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","descriptionBodyPlain":"Responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan.\nIn this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/424140f5-5064-4ce2-8c4d-2b7ecbb14d51","applyUrl":"https://jobs.lever.co/GoToGroup/424140f5-5064-4ce2-8c4d-2b7ecbb14d51/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709283679281,"descriptionPlain":"As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","description":"<div><span style=\"font-size: 10pt\">As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","id":"e694228e-5468-4193-9301-7aa79d1f62a4","lists":[{"text":"What You Will Do","content":"<li>Define growth initiatives that will create significant impact on transaction volume and user base, while at the same time helping increase LTV and retention of e-commerce users</li><li>Work closely with Tokopedia fintech team to execute initiatives, review performance, and propose improvements, such as voucher mechanics and communication channels</li><li>Work with the Product team to develop Product roadmap that will improve acquisition, engagement and retention of users</li><li>Collaborate with the Consumer Lending business teams for cross selling users to other use cases beyond ecommerce with LTV as main goal</li><li>Engage with Finance, Legal and Compliance on any new major initiatives to ensure OJK compliance</li>"},{"text":"What You Will Need","content":"<li>Previous experience in e-commerce platform is a bonus</li><li>Good understanding of e-commerce business and lending products; has ability to articulate how lending products fit into an ecommerce ecosystem and their relevant use cases</li><li>Excellent collaborative skill and stakeholder management; has ability to engage people from different functions, culture and organizations</li><li>A self-starter</li>"}],"text":"Growth Lead - Consumer Lending (E-Commerce)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal &amp; Compliance team as check &amp; balance of the initiatives that we do in alignment with OJK regulations.</span></div>","descriptionBodyPlain":"As a Growth Lead in Consumer Lending (e-commerce) you will be responsible for the growth and operations of overall Consumer Lending business in Tokopedia, which includes BNPL and Cash Loan. In this role, you will work with the Tokopedia team in defining business opportunities, be hands-on in the execution of the initiatives, and work alongside the Product and Credit Risk team to enable growth levers. You are also expected to work with the Finance, Legal & Compliance team as check & balance of the initiatives that we do in alignment with OJK regulations.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e694228e-5468-4193-9301-7aa79d1f62a4","applyUrl":"https://jobs.lever.co/GoToGroup/e694228e-5468-4193-9301-7aa79d1f62a4/apply"},{"additionalPlain":"About the Team\n\nThe Financial Services stream at Gojek is passionate about empowering our users with the tools to be financially responsible. The Growth team is at the center of the business, where we help direct the product toward the right solutions by tackling the right problems through exploratory data analyses and rapid experimentation. Imagine a blend of data analysis, marketing, statistical testing, and product management; that sweet spot is where we're at. We're a team that's always willing to get our hands dirty, meaning we're responsible for analyzing, designing, and also executing because we believe that high impact comes from high accountability. If you're a data whiz who enjoys the collaborative nature of solving business problems, then you might be our person.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Financial Services stream at Gojek is passionate about empowering our users with the tools to be financially responsible. The Growth team is at the center of the business, where we help direct the product toward the right solutions by tackling the right problems through exploratory data analyses and rapid experimentation. Imagine a blend of data analysis, marketing, statistical testing, and product management; that sweet spot is where we're at. We're a team that's always willing to get our hands dirty, meaning we're responsible for analyzing, designing, and also executing because we believe that high impact comes from high accountability. If you're a data whiz who enjoys the collaborative nature of solving business problems, then you might be our person.</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705907656882,"descriptionPlain":"About the Role\n\nAs a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty & cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>As a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty &amp; cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.</div><div><br></div>","id":"ac34e3be-5747-4371-ad39-4b61d62302ce","lists":[{"text":"What You Will Do","content":"<li>Lead the Growth Analytics team and drive prioritization, strategy, and focus on solutions to solve user problems across platforms. You will be collaborating with the Marketing team on a daily basis</li><li>Maintain rigor in analytical excellence in terms of data analytics, A/B test design, and appropriate statistical tests across the products</li><li>Liaise with other analytical chapters within the Financial Services Platform as well as across Gojek such as Data Science, Data Engineering, Data Governance, Risk Analytics, etc, to ensure that initiatives are aligned and data integrity standards are adhered to</li><li>Discover growth opportunities in the product from funnel conversion rates and user experience by exploring transaction data, customer activity within apps, and actual customer insights</li><li>Analyze our complex and ever-growing data, present insights, and propose strategic options to senior management to drive business decisions</li><li>Test and validate solutions through a proper experimentation process.</li>"},{"text":"What You Will Need ","content":"<li>At least 3 years of working experience in an analytical role (data analyst / BI/data science/statistician, etc)</li><li>Strong SQL skills with expertise in either Excel/Python/R</li><li>Strong business acumen and analytical thinking. Comfortable to translate high-level business requirements into structured analytical steps</li><li>Experience in planning, designing, and executing experiments that can help business growth to increase upper funnel, customer retention, and cross-selling. Also comfortable working with frequentist statistics to analyze experiment results</li><li>Strong data viz and data storytelling skills</li><li>Strong project management skills to manage projects; able to work together with relevant units, also can manage and prioritize multiple internal stakeholders</li><li>Hustle is essential, moving quickly and executing to allow for continual iteration is a core competency of our team.</li>"}],"text":"Growth Lead - GoPay Later","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty &amp; cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.</div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs a Lead Growth Analyst on the Financial Services Platform, you will be responsible to utilize our voluminous data to improve acquisition, activation, retention, loyalty & cross selling for our Financial Services products across platforms within the ecosystem. You will be driving the analytics projects of the Growth team across different platforms, ultimately enabling the consumer lending business team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesian. You will be based in the Jakarta office.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ac34e3be-5747-4371-ad39-4b61d62302ce","applyUrl":"https://jobs.lever.co/GoToGroup/ac34e3be-5747-4371-ad39-4b61d62302ce/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713765081862,"descriptionPlain":"As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.\n","description":"<div><span style=\"font-size: 10.5pt\">As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.</span></div>","id":"761415aa-89b7-4ffb-a19b-2b91ac4243b4","lists":[{"text":"What You Will Do","content":"<li>Lead the strategy and growth function for GoModal. You will be collaborating with the Marketing &amp; Product teams on a daily basis.</li><li>Maintain rigor in analytical excellence in terms of data analytics, A/B test design, and appropriate statistical tests across the product funnel from acquisition, adoption, retention to monetization.</li><li>Discover growth opportunities in the product from funnel conversion rates and user experience by exploring transaction data, customer activity within apps and actual customer insights.</li><li>Analyze our complex and ever-growing data, present insights, and propose strategic options to management to drive business decisions.</li><li>Test and validate solutions through proper experimentation process.</li><li>Importantly, using data to identify growth opportunities and problem solve so as to achieve business goals with metrics such as conversion rates of WL to submit KYC, adoption rate &amp; GTV (disbursement)</li>"},{"text":"What You Will Need","content":"<li>BS in Statistics, Math, Computer Science, Engineering, Economics, Business, or equivalent experience</li><li>At least 4 years of working experience in a growth or product role (growth marketing, data analyst, BI, strategy, etc).</li><li>Strong project management skill to manage complex projects; also can manage and prioritize multiple internal and external stakeholders.</li><li>Strong business acumen and analytical thinking. Comfortable to translate high-level business requirements into structured analytical steps.</li><li>Experienced planning, designing, and executing experiments. Also comfortable working with frequentist statistics to analyze experiment results.</li><li>Strong data visualization and data storytelling skills.</li><li>Hustle is essential, moving quickly and executing to allow for continual iteration is a core competency of our team.</li><li>Preferred but not required: Strong SQL skills with expertise in either Excel/Python/R&nbsp;</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Growth Lead (Merchant Lending)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10.5pt;\">As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.</span></div>","descriptionBodyPlain":"As a GTM Lead for the Merchant Lending team, you will be responsible to drive product strategy and business growth for merchant credit lines offered to GoBiz sellers. This role requires a person who is data driven, a growth marketer will create tests and experiments to positively influence customer acquisition, customer conversion, customer retention and customer lifetime value. You will utilize our voluminous data to improve acquisition, activation, retention, and loyalty for our product. You will be driving the growth strategy and analytics projects of the Growth team for the product, ultimately enabling the Merchant Lending team to make data-driven decisions. You will have ample opportunity to flex your analytics and project management skills, getting us even closer to the financial inclusion of all Indonesians. You will be based in the Jakarta office.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/761415aa-89b7-4ffb-a19b-2b91ac4243b4","applyUrl":"https://jobs.lever.co/GoToGroup/761415aa-89b7-4ffb-a19b-2b91ac4243b4/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager and data Science to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager and data Science to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1708332929934,"descriptionPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?\n","description":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?</div>","id":"4362376c-4d70-43fb-85c4-3734fc6eeff5","lists":[{"text":"What You Will Do","content":"<li>Discover growth opportunities from the interaction of GoFood and its merchants through all of the metrics by running data analysis from Gojek’s vast data resources including business data, transaction data, customer activity within apps, and actual customer insights</li><li>Introduce beneficial business changes through well-written strategy document; validate the hypotheses through A/B test or other robust experimentation method</li><li>Operate the product solution and define the program to achieve business objectives by combining multiple initiatives (e.g. promotion program, incentive product, and discovery product )</li><li>Optimize and automate solutions by leveraging Data Sciences and Product Resources</li><li>Proactively improve the operation process in the team and act on how to drive a faster, effective, and efficient execution process through third-party tool or in-house service</li>"},{"text":"What You Will Need","content":"<li>BS/MS in Engineering, Computer Science, Math, Economics, Statistics, or equivalent experience</li><li>Minimum 3 years of working experience&nbsp;</li><li>Data analytics capability, have a good knowledge of SQL and experimentation processes; High Proficiency in Python and R is a plus</li><li>Strong business acumen with successful experience influencing and leading cross-functional teams</li><li>End-to-end problem-solving mindset that can work in increments and exponents</li><li>Radical Candor leadership while also being a strong team player; possessing team synergy skills with a high level of enthusiasm in collaborating in a cross-functional team and can also balance attention to detail with swift execution</li><li>Experience in Growth, Product Management, and Data team is a plus</li>"}],"text":"Growth Ops  - GoFood","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?</div>","descriptionBodyPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with a focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that?\n","hostedUrl":"https://jobs.lever.co/GoToGroup/4362376c-4d70-43fb-85c4-3734fc6eeff5","applyUrl":"https://jobs.lever.co/GoToGroup/4362376c-4d70-43fb-85c4-3734fc6eeff5/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714985249008,"descriptionPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div><div><br></div><div><br></div>","id":"2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e","lists":[{"text":"What You Will Do","content":"<li>Discover growth opportunities from the interaction of GoFood and its merchants through all of the metrics by running data analysis from Gojek’s vast data resources including business data, transaction data, customer activity within apps, and actual customer insights</li><li>Introduce beneficial business changes through well-written strategy document; validate the hypotheses through A/B test or other robust experimentation method</li><li>Operate the product solution and define the program to achieve the business objectives by combining multiple initiatives (e.g. promotion program, incentive product, and discovery product )</li><li>Optimize and automate solutions by leveraging Data Sciences and Product resourcesProactively improve the operation process in the team and act on how to drive a faster, more effective, and efficient execution process through third-party tools or in-house service</li>"},{"text":"What You Will Need ","content":"<li>BS/MS in Engineering, Computer Science, Math, Economics, Statistics, or equivalent experience</li><li>Minimum 3 years of working experience&nbsp;</li><li>Data analytics capability, have a good knowledge of SQL and experimentation processes; High Proficiency in Python and R is a plus</li><li>Strong business acumen and project management skills with successful experience in collaborating with cross-functional teams</li><li>End to end the problem-solving mindset that can work in increments and exponents</li><li>Experience in Growth, Product Management, and Data team is a plus</li>"}],"text":"Growth Planning & Operation - GoFood","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e","applyUrl":"https://jobs.lever.co/GoToGroup/2ae422f8-eced-4e9b-9ce5-5c7ec784fc0e/apply"},{"additionalPlain":"Our Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.\nWe, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 16px\">Our Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.</span></div><div><span style=\"font-size: 16px\">We, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1559365441969,"descriptionPlain":"We are looking for a Head of Engineering for the Transport team. \nAs part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. \nYou will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. \nYou should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. \nYour ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","description":"<div><span style=\"font-size: 16px\">We are looking for a Head of Engineering for the Transport team. </span></div><div><span style=\"font-size: 16px\">As part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. </span></div><div><span style=\"font-size: 16px\">You will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. </span></div><div><span style=\"font-size: 16px\">You should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. </span></div><div><span style=\"font-size: 16px\">Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","id":"d606bc58-6765-4017-a0c0-3e4bcf0aeb99","lists":[{"text":"Responsibilities","content":"<li>GO-JEK is looking for an experienced technologist with a passion &amp; understanding of technology to lead its transportation product. Transport is one of the flagship products in GOJEK superapp. It is launched in Indonesia, Singapore and Vietnam.</li><div><br></div><li>As Head of Engineering of Transport, you will partner with GOJEK VP, Senior VP of technology, Transport Head of Business, Group Product Manager and other business stakeholders in the company to formulate a business strategy for Transport. You will work closely with PMs and Tech Leads in Transport to realize this strategy to make GOJEK a dominant player in markets.</li><div><br></div><li>Strategic thinking and strong business acumen along with deep technical expertise are essential in this role. We expect you to be well-versed in current technological trends and familiar with a variety of business concepts. If you are also an excellent communicator and public speaker, we’d like to meet you.</li><div><br></div><div>What you will do</div><div><br></div><li>Design and develop highly scalable, highly available, reliable, secure and fault tolerant systems with minimal guidance for one of the world's fastest growing company in the transportation industry</li><li>Translate business requirements into scalable and extensible design</li><li>Setup growth paths for the team and engage them in processes and practices that shall help scale engineering</li><li>Collaborate with cross functional teams and stakeholders (Business, Product, Data, UX, Platform, Devops etc.) to unlock the next phase of business growth.</li><li>Provide technology leadership to the team and foster engineering excellence.</li><li>Research new technologies and tools that enable building simplistic architecture for the next generation of Gojek services</li>"},{"text":"Experience and Skills","content":"<li>Should have at least 9 years of hands-on experience in designing, developing, testing and deploying applications at scale.</li><li>Proficient in System Design, Design patterns, database structure, Linux/Unix. Experience with functional programming and infrastructure management is a plus.</li><li>Well versed with Agile methodologies, TDD and Test Engineering and Automation.</li><li>Experience as people manager and passionate towards building and growing a high functioning team.&nbsp;</li><li>Excellent understanding of interactive application development paradigm, memory management, performance/resource optimisations, database interactions, network programming, concurrency and multithreading, fault tolerance, monitoring, security and operability of systems</li><li>Ability to pick up new technologies and independently navigate obstacles and find innovative solutions.</li><li>Ability to seamlessly switch focus between tasks and enthusiasm for seeking out learning opportunities.</li><li>Ability to build strong relationships within and beyond the team, enhancing knowledge expansion and problem-solving efforts, while also nurturing the same through the exchange of constructive feedback.</li>"}],"text":"Head of Engineering - Transport","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">We are looking for a Head of Engineering for the Transport team. </span></div><div><span style=\"font-size: 16px;\">As part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. </span></div><div><span style=\"font-size: 16px;\">You will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. </span></div><div><span style=\"font-size: 16px;\">You should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. </span></div><div><span style=\"font-size: 16px;\">Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","descriptionBodyPlain":"We are looking for a Head of Engineering for the Transport team. \nAs part of this role you will be required to keep and raise the bar of engineering excellence, setting up growth paths and structure for the team, establishing best practices for the team to function efficiently. \nYou will be responsible for managing the overall engineering charter for the Transport business vertical. You would be collaborating with stakeholders across several functions including engineering, product and business functions to define and enable the next phase of evolution of the product. \nYou should be someone who is passionate about technology, willing to unlearn and learn, has hands-on experience, and forthcoming to mentor and guide the team towards technical know-hows and help in ideating with the team to build simple yet elegant solutions for different business needs. \nYour ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d606bc58-6765-4017-a0c0-3e4bcf0aeb99","applyUrl":"https://jobs.lever.co/GoToGroup/d606bc58-6765-4017-a0c0-3e4bcf0aeb99/apply"},{"additionalPlain":"About The Team\n\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 14px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives.&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705905810213,"descriptionPlain":"The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.\n\nThis position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.\n","description":"<div><span style=\"font-size: 14px\">The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.</span></div><div><br></div><div><span style=\"font-size: 14px\">This position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.</span></div>","id":"70493d8a-7d7f-4660-b1ed-c792d0d765be","lists":[{"text":"What You Will Do","content":"<li>Developing and implementing commercial strategies in line with company goals and objectives, with the aim to accelerate growth</li><li>Managing senior members of the Sales (enterprise merchants, SMB and very small merchants), by extension, their teams</li><li>Managing existing client relationships - understanding their requirements, ensuring their needs are met</li><li>Designing and implementing new sales and merchant acquisition strategies</li><li>Collaborating with and coordinating diverse teams (e.g. marketing, sales, customer service)</li><li>Negotiating ongoing contracts with merchants,; managing and reviewing contracts and making recommendations regarding commerciality</li><li>Monitoring performance of commercial activities using key metrics and reporting to senior management</li><li>Assisting with the setting, managing, and monitoring financial targets and budget development</li><li>Establishing and maintaining long-term, profitable partnerships with key stakeholders</li>"},{"text":"What This Role Needs","content":"<li>At least 15 years of working experience in the related field</li><li>Must have experience leading at least two of the three merchant segments (Ent/key accounts, SMB, Unmanaged/long tail)</li><li>Experienced in managing a huge team size</li><li>Good to have -&nbsp; have managed P&amp;L&nbsp;</li><li>Strong Problem Solving capabilities</li><li>Agile and willing to adapt to rapidly changing situations/environments</li><li>Ability to manage multiple complex and matrixed sales engagements whilst always positioning the products at the center of the engagement</li><li>Demonstrated ability to build and maintain strong relationships with merchants</li><li>High energy and engagement ethos, self starter , out of the box thinker, able to stay motivated</li><li>An ability to quickly grasp key experiences and device spec and formulate a sales technique to overcome any objections</li><li>Excellent communication skills - presentation, negotiation, and closingExcellent in contract and commercial negotiation process</li><li>Experience in payment industry is a plus</li>"}],"text":"Head of Sales - Midtrans - #9618","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 14px;\">The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.</span></div><div><br></div><div><span style=\"font-size: 14px;\">This position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.</span></div>","descriptionBodyPlain":"The Head of Sales will work closely with the Head of Online Merchants to define the commercial vision and strategy, lead execution to deliver sales, increase margins and market share in online payment acceptance in Indonesia by acquiring new merchants. The Head of Sales will also be responsible for business development, commercial effectiveness, business analytics, and market intelligence in related to improve merchant retention and trust.\n\nThis position reports directly to the Head of Online Merchants and one of the key positions in the Merchant Services senior leadership.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/70493d8a-7d7f-4660-b1ed-c792d0d765be","applyUrl":"https://jobs.lever.co/GoToGroup/70493d8a-7d7f-4660-b1ed-c792d0d765be/apply"},{"additionalPlain":"About The Team\n\nThe Sales & Marketing team consistently strives to implement solutions that allow our merchant partners in Indonesia to sell products both online and offline. We also work to improve the merchant-partner experience through product innovation and integration with the rest of the Gojek ecosystem.\n\nOne of our main goals is to strengthen our market share in Indonesia, combining strategy with local insights to propel our business onward and upwards. Furthermore, we maintain a holistic view of GoTo Financial’s business and payment solutions within the region, constantly striving better to understand the sales region's issues from the ground up and provide solutions and actionable steps forward. Lastly, We ensure our platform is at the top of the minds of merchants while improving our merchant’s life and their experiences using our services.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 14px\">The Sales &amp; Marketing team consistently strives to implement solutions that allow our merchant partners in Indonesia to sell products both online and offline. We also work to improve the merchant-partner experience through product innovation and integration with the rest of the Gojek ecosystem.</span></div><div><br></div><div><span style=\"font-size: 14px\">One of our main goals is to strengthen our market share in Indonesia, combining strategy with local insights to propel our business onward and upwards. Furthermore, we maintain a holistic view of GoTo Financial’s business and payment solutions within the region, constantly striving better to understand the sales region's issues from the ground up and provide solutions and actionable steps forward. Lastly, We ensure our platform is at the top of the minds of merchants while improving our merchant’s life and their experiences using our services.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715061667066,"descriptionPlain":"Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","description":"<div><span style=\"font-size: 14px\">Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","id":"1b45618e-9fc6-4462-95c0-c89e99f739d4","lists":[{"text":"What You Will Do","content":"<li>Develop comprehensive sales strategies and oversee the end-to-end planning process to ensure optimal results while maintaining efficiency</li><li>Define Objectives and Key Results (OKRs), metrics, and targets for the sales team to drive performance and success</li><li>Design and implement incentive schemes, conduct end-to-end calculations and perform industry benchmarking to enhance sales effectiveness</li><li>Lead the go-to-market sales strategy for special projects and new products, aligning with partner needs and market demands</li><li>Utilize data-driven analysis to derive actionable insights, fostering accelerated growth and increased operational efficiency</li><li>Collaborate cross-functionally with sales, product, marketing, and other stakeholders to align strategies derived from data-driven analysis and execute plans effectively</li>"},{"text":"What This Role Needs","content":"<li>Minimum 5 years of relevant working experience in strategy, business development, management consulting, or other related roles that require strong analytical skills, problem-solving, and business acumen</li><li>A structured and analytical thinking process to develop frameworks, project charters, and prioritization</li><li>Strong business sense and ability to articulate complex analysis results to a wide range of audiences and translate the results into actionable business insights</li><li>Proficiency in basic modeling - market sizing, business projection, and scenario analysis</li><li>Good presentation skills, especially the ability to present during problem-solving sessions with other stakeholders (working-level or leadership), are essential</li><li>Solid track record of stakeholder management</li>"}],"text":"Head of Sales Strategy - Merchant Services - #9993","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 14px;\">Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","descriptionBodyPlain":"Join our team and make a real impact. As the Head of Sales Strategy, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/1b45618e-9fc6-4462-95c0-c89e99f739d4","applyUrl":"https://jobs.lever.co/GoToGroup/1b45618e-9fc6-4462-95c0-c89e99f739d4/apply"},{"additionalPlain":"Joining GoTo Financial (GTF) means becoming an integral part of a collaborative and dynamic team culture that values transparency, innovation, and teamwork. As a member of the GTF IT Governance, Risk, and Compliance (IT GRC) team, you'll find yourself immersed in an environment where your contributions are not only recognized but celebrated. You'll work alongside dedicated professionals within the GTF Compliance team, sharing insights, expertise, and best practices to ensure that our IT operations meet regulatory standards and industry requirements. Reporting directly to one of GTF's Head of IT GRC, you'll have the opportunity to learn from seasoned leaders in the field while also contributing your own unique perspective. Together, we'll continue to push the boundaries of innovation and set new standards for IT governance, risk management, and compliance in the financial industry.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>Joining GoTo Financial (GTF) means becoming an integral part of a collaborative and dynamic team culture that values transparency, innovation, and teamwork. As a member of the GTF IT Governance, Risk, and Compliance (IT GRC) team, you'll find yourself immersed in an environment where your contributions are not only recognized but celebrated. You'll work alongside dedicated professionals within the GTF Compliance team, sharing insights, expertise, and best practices to ensure that our IT operations meet regulatory standards and industry requirements. Reporting directly to one of GTF's Head of IT GRC, you'll have the opportunity to learn from seasoned leaders in the field while also contributing your own unique perspective. Together, we'll continue to push the boundaries of innovation and set new standards for IT governance, risk management, and compliance in the financial industry.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713930486899,"descriptionPlain":"About The Role\n\nJoin our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. \n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Join our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. </span></div>","id":"36caef5f-7a1c-4326-80b4-8c146060ac70","lists":[{"text":"What You Will Do","content":"<li>Develop and maintaining IT policies, standards and procedures according to applicable internal and external requirements, including the applicable regulations in Indonesia an other countries where GTF operate;</li><li>Develop and maintain compliance, governance and risk-related IT and business process flow;</li><li>Coordinating with compliance team to ensure that every initiative, development and collaboration are comply with the standards and regulations (internal and external);</li><li>Conduct routine evaluation of policies and procedures implementation and ensure best practice risk mitigation and assessment functions are maintained to comply with the company's strategy;</li><li>Coordinate with related IT work units to follow up on data requests and internal audit findings, external audits and regulators;</li><li>Develop the process and conduct the activities to safekeep or archive of every IT development document in a regular basis;</li><li>Implementing a good governance organization using the ISO27001, ISO 27701, PCI DSS framework and other relevant Technology &amp; Security best practices;</li><li>Develop and implement the RBAC and least privilege of access management in the GTF technology stack</li><li>Act as a Subject Matter Expert to the stakeholders and provide relevant &amp; applicable consultation for addressing the IT GRC requirement in lending product &amp; services.&nbsp;</li>"},{"text":"What You Will Need","content":"<li>A minimum of 5 years experiences as Information Security, IT Governance, Risk and Compliance (IT GRC) or IT Auditors;</li><li>Demonstrate excellent communication and writing skills and proficient with English written and spoken</li><li>Experienced in developing and maintaining IT and/or information security policies and procedures;</li><li>Excellent knowledge in developing risk management and IT framework, BIA, BCP and BCM Framework</li><li>Experienced in report document development and delivery;</li><li>Experienced in dealing with regulatory audit to represent the organization IT GRC operations;</li><li>Having good knowledge with local and regional payment &amp;&nbsp; lending regulatory requirements and how they impact IT policies (having experience is preferred);</li><li>Having excellent experience with ISO 27001, ITIL. COBIT, and PCI-DSS standards;</li><li>One or more of the following or equivalent certifications preferred: CISA, CRISC, ITIL, COBIT is preferred</li>"}],"text":"IT GRC Senior Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Join our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. </span></div>","descriptionBodyPlain":"About The Role\n\nJoin our team at GoTo Financial (GTF) as an IT Governance, Risk, and Compliance (GRC) Analyst where you'll play a  crucial role in ensuring the secure and efficient operation of our IT infrastructure within the financial sector. Dive into the dynamic world of financial products and services, including payment and lending services. You'll gain firsthand experience in understanding the unique IT challenges and compliance requirements within the financial sector. As an IT GRC Analyst at GTF, you'll be at the forefront of safeguarding our IT environment, ensuring regulatory compliance, and upholding the trust of our customers. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/36caef5f-7a1c-4326-80b4-8c146060ac70","applyUrl":"https://jobs.lever.co/GoToGroup/36caef5f-7a1c-4326-80b4-8c146060ac70/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We serve more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solutions, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714985286126,"descriptionPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","id":"f77e2886-beb3-4cb1-a333-48376830053e","lists":[{"text":"What You Will Do","content":"<li>Discover growth opportunities from the interaction of GoFood and its merchants through all of the metrics by running data analysis from Gojek’s vast data resources including business data, transaction data, customer activity within apps and actual customer insights</li><li>Introduce beneficial business changes through well-written strategy document; validate the hypotheses through A/B test or other robust experimentation method</li><li>Operate the product solution and defines the program to achieve business objective by combining multiple initiatives (e.g. promotion program, incentive product, and discovery product )</li><li>Optimize and automate solutions by leveraging Data Sciences and Product resources</li><li>Proactively improve the operation process in the team and act on how to drive a faster, effective, and efficient execution process through third-party tool or in-house service</li>"},{"text":"What You Will Need","content":"<li>BS/MS in Engineering, Computer Science, Math, Economics, Statistics, or equivalent experience</li><li>Minimum 1 year of working experience&nbsp;</li><li>Data analytics capability, have a good knowledge of SQL and experimentation processes; High Proficiency in Python and R is a plus</li><li>End to end the problem-solving mindset that can work in increments and exponents</li><li>Radical Candor leadership while also being a strong team player; possessing team synergy skills with a high level of enthusiasm in collaborating in a cross-functional team and can also balance attention to detail with swift execution</li><li>Experience in Growth, Product Management, and Data team is a plus</li>"}],"text":"Jr. Manager of Ads Sales Assisted Growth Ops","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Associate for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f77e2886-beb3-4cb1-a333-48376830053e","applyUrl":"https://jobs.lever.co/GoToGroup/f77e2886-beb3-4cb1-a333-48376830053e/apply"},{"additionalPlain":"About the team\n\nOur Tax team, a subsidiary of the Finance Accounting and Tax team, consists of around 22 people who are all based in Indonesia. Working alongside the Finance Operations, we are predominantly concerned with ensuring all tax regulations have been followed properly and maintaining that tax compliances are regulated. If you have any questions about finance, accounting, or tax, we are your people!\n\n","additional":"<div><b>About the team</b></div><div><br></div><div>Our Tax team, a subsidiary of the Finance Accounting and Tax team, consists of around 22 people who are all based in Indonesia. Working alongside the Finance Operations, we are predominantly concerned with ensuring all tax regulations have been followed properly and maintaining that tax compliances are regulated. If you have any questions about finance, accounting, or tax, we are your people!</div><div><br></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715657454177,"descriptionPlain":"About the Role\n\nAs our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>As our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.</div><div><br></div><div><br></div>","id":"33a32026-3986-42fb-9ddc-a45e1053c9e0","lists":[{"text":"What you will do","content":"<li>Maintain day-to-day tax compliance matters; including preparation of monthly and annual tax calculation/payment/returns, i.e. WHT, VAT, CIT)</li><li>Provide tactical solutions on main tax issues</li><li>Follow procedures and timelines to operate tax compliance matters</li><li>Provide support in the event of the tax audit, financial audit, due diligence, or any tax dispute process (e.g. collate the required data/documents for the said processes)</li><li>Ensure the application of tax treaty rate treatment for WHT purposes is valid, e.g. review and follow-up DGT Forms in relation to overseas vendors</li>"},{"text":"What you will need","content":"<li>Bachelor of Economics (majoring in Accounting or Management) or Bachelor of Social Science (majoring in Fiscal Administration) with a minimum GPA of <a href=\"http://3.00\">3.00</a> (<a href=\"http://4.00\">4.00</a> scale)</li><li>Oral &amp; written English skills (basic level)</li><li>Ability to work in a fast-paced, rapidly changing, and high-growth organization</li><li>Able to work well individually and as a team player</li>"}],"text":"Junior Tax Officer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs our Junior Tax Officer, you will hold an important role within the Tax team \"wheel\" of GoTo group that directly impacts GoTo’s stakeholders. In this role, you will get to maintain day-to-day tax compliance matters and also contribute to tax dispute processes. The Finance Accounting team will be your companions during this ride. Best yet, you will have the opportunity to flex your analytical and management skills, getting us even closer to our ultimate goal of ensuring consistent and efficient earnings stability.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/33a32026-3986-42fb-9ddc-a45e1053c9e0","applyUrl":"https://jobs.lever.co/GoToGroup/33a32026-3986-42fb-9ddc-a45e1053c9e0/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715584452832,"descriptionPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","description":"<div><b style=\"font-size: 16px\">About the team:</b></div><div><span style=\"font-size: 16px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","id":"d6ac496c-e0ad-4669-b594-ede9bf8d55f9","lists":[{"text":"What you will do:","content":"<li>Act as the lead point of contact for all account matters, anticipate the client’s needs, work within the company to ensure deadlines for the client are met, and help the client succeed,</li><li>Resolve account issues and complaints,</li><li>Plan and present reports on account progress, goals, and periodic initiatives to share with team leaders and peers on a regular basis,</li><li>Provide full visibility into the sales pipeline at every stage of engagement, and take the account into the next level by increasing Midtrans’ share in online payments,</li><li>Develop a strong understanding of the e-commerce and digital commerce market and be the first person that a client calls for escalation,</li><li>Work closely with the Partnership and Banking teams to ensure rapport and collaboration between partners and clients,</li><li>Responsible for administrative duties, such as preparing reports, preparing price quotes, maintaining and approving the entire agreements and forms.</li>"},{"text":"What you will need:","content":"<li>Bachelor’s degree in Business Management, Sales, Communication or related academic area,</li><li>A minimum of 3 years of experience in business management, sales, or project management is mandatory. </li><li>Prior experience in e-commerce and managing key accounts will be a plus point,</li><li>Fluency in both Bahasa and English is required,Able to multitask, prioritize, and manage time efficiently,</li><li>Ability to negotiate, persuade and influence others,</li><li>Excellent interpersonal, communication, presentation and analytical skills,</li><li>Proficient computer skills, and experience with CRM software and the Microsoft Office Suite, with emphasis on superior Excel skills,</li><li>Proven ability to maintain projects and maintain effective relations with accounts or partners.</li>"}],"text":"Key Account Manager #9874","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the team:</b></div><div><span style=\"font-size: 16px;\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","descriptionBodyPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/d6ac496c-e0ad-4669-b594-ede9bf8d55f9","applyUrl":"https://jobs.lever.co/GoToGroup/d6ac496c-e0ad-4669-b594-ede9bf8d55f9/apply"},{"additionalPlain":"About the Team \n\nThe Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team </b></div><div><br></div><div>The Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715066306660,"descriptionPlain":"About the Role \n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n","description":"<div><b>About the Role </b></div><div><br></div><div>As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</div>","id":"81fac6c8-76c8-4867-88c3-7aeb6f6d0c72","lists":[{"text":"What You Will Do ","content":"<li>Create from scratch or significantly Improve automation code structure and framework architecture in terms of maintainability, execution speed, review, and coverage</li><li>Writes, co-writes, and reviews test design/plan documentation&nbsp;</li><li>Drives the design/code review process for test automation, seeking and providing constructive feedback</li><li>Accountable for ensuring that their squad has strong sets of documentation and journals of how their test design and architecture/product evolves over time</li><li>Lead the effort of planning projects, split the complex initiatives into smaller tasks in both team and cross-team initiatives</li><li>Mentors other engineers on an individual basis and guide them with their career development</li><li>Actively participates in the hiring process for SDET candidates (by doing code reviews, meeting candidates, attending recruiting events)</li>"},{"text":"What You Will Need","content":"<li>8-10+ years experience in working with Web, Mobile, and API Testing in both manual &amp; automation testing, test methodologies, and principles</li><li>Well-versed with a programming language (preferably JAVA). Should be comfortable working on any of these Selenium, Cucumber BDD, Appium, RestAssured, SQL, TestNG, CI/CD pipelines, Postman , Mocking tools&nbsp;Experienced with tools such as Git, Jira , Maven/ Gradle &amp; Test case management tool&nbsp;</li><li>Solid analytical &amp; problem-solving skills and experience of working in an Agile environment</li><li>Great interpersonal and communication skills as needs to closely work with remote teams spread across multiple countries&nbsp;Understanding of working and Testing in a microservices environment&nbsp;</li><li>Knowledge of Performance Testing is a plus</li>"}],"text":"Lead SDET - Automation Engineering Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</div>","descriptionBodyPlain":"About the Role \n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/81fac6c8-76c8-4867-88c3-7aeb6f6d0c72","applyUrl":"https://jobs.lever.co/GoToGroup/81fac6c8-76c8-4867-88c3-7aeb6f6d0c72/apply"},{"additionalPlain":"About the Team :\n\nGoFood is a vertical in Gojek that helps customers to order food online from their choice of restaurants using customer apps and web platforms. On a day to day basis teams are involved in brainstorming and developing solutions for different optimisations that bring efficiency in the ecosystem making the Food Ordering journey smooth for our customers.\n\n\n","additional":"<div>About the Team :</div><div><br></div><div>GoFood is a vertical in Gojek that helps customers to order food online from their choice of restaurants using customer apps and web platforms. On a day to day basis teams are involved in brainstorming and developing solutions for different optimisations that bring efficiency in the ecosystem making the Food Ordering journey smooth for our customers.</div><div><br></div><div><br></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715763990572,"descriptionPlain":"About the role :\n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood team, you will be building experiences for GoFood's Users. \n\n\n\n","description":"<div>About the role :</div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood team, you will be building experiences for GoFood's Users.&nbsp;</div><div><br></div><div><br></div><div><br></div>","id":"b1f917e0-a9a0-4a3c-a4c3-505e41c1f034","lists":[{"text":"What You Will Do","content":"<li>Be responsible for the overall solution architecture of the products/services that you will be working on</li><li>Code, Design, prototype, perform reviews and consult in the process of building highly scalable, reliable, and fault-tolerant systems</li><li>As our senior technologist continuously refactor applications and architectures to maintain high-quality levels, be actively involved in formulating product roadmap and defining the OKRs of the team</li><li>Continue to stay abreast of the latest technologies in distributed systems, caching and research new technologies, tools that enable building the next generation systems</li><li>Act as an engineer that enjoys writing readable, concise, reusable, extensible code every day</li><li>Discuss, articulate requirements with product management and scope,&nbsp;</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 8 years of hands-on experience in designing, developing, testing, and deploying large scale applications, microservices in any language or stack (preferably golang)</li><li>At least 1 year of experience in leading a team of engineers</li><li>Good skill in design, development, testing and deploying applications on Golang or Erlang or Ruby or Java large-scale applications</li><li>Has an in-depth understanding of at least one programming language and framework</li><li>Excellent attitude and passion working in a team with willingness to learn</li><li>Able to collaborate well with multiple stakeholders in parallel to align &amp; unblock the team</li><li>Experience in building low latency, high volume REST API requests handling</li><li>Experience in working with relational databases (like postgres)</li><div><br></div>"}],"text":"Lead Software Engineer - Gofood","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>About the role :</div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood team, you will be building experiences for GoFood's Users.&nbsp;</div><div><br></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the role :\n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems which powers GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood team, you will be building experiences for GoFood's Users. \n\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/b1f917e0-a9a0-4a3c-a4c3-505e41c1f034","applyUrl":"https://jobs.lever.co/GoToGroup/b1f917e0-a9a0-4a3c-a4c3-505e41c1f034/apply"},{"additionalPlain":"About the Team \n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. \n\nAt the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company. \n\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team </b></div><div><br></div><div>We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. </div><div><br></div><div>At the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company.&nbsp;</div><div><br></div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1711535878605,"descriptionPlain":"About the Role \n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","id":"3ff4035e-6ad8-46c4-ac71-cf1fee12b49a","lists":[{"text":"What You Will Do","content":"<li>Build and manage a highly scalable, reliable and cost effective application infrastructure at Gojek, forming the backbone of our diverse distributed systems</li><li>Be a role model in technical excellence, helping Gojek engineers deliver top-quality applications without worrying about underlying infrastructure</li><li>Enhance code quality and product performance through continuous improvement and innovation</li><li>Collaborate and communicate effectively with teams across multiple geographies</li><li>Share your knowledge and expertise to strengthen teams knowledge of the platform so they can support themselves</li><li>Regularly refactor your work to maintain high-quality design and architecture following industry best practices</li><div><br></div>"},{"text":"What You Will Need","content":"<li>Atleast 7+ years of relevant experience . Hands on in any object oriented or functional programming language i.e. Java, Golang, Clojure, Python, Ruby etc building applications from scratch</li><li>Deep understanding of distributed systems fundamentals, large scale systems, observability stack, prometheus fundamentals, opentelemetry, container technologies, internet routing and load balancing</li><li>Experience in working with end to end Observability stack. Hands on experience in building and managing the telemetry pipeline at large scale</li><li>Experience in handling, scaling and optimizing high throughput systems</li><li>Prior experience with Grafana stack, Cortex, SLI/SLO platforms is a plus</li><li>Prior experience with AWS, GCP, Azure etc. is a plus</li><li>Deep knowledge of Linux as a production environment, container technologies. e.g. Docker</li><li>Working Experience with cluster orchestrators and schedulers (Kubernetes)</li><li>Experience with infrastructure automation tools like chef, ansible, helm</li><li>Have worked on production distributed systems and have an understanding of microservices architecture, RESTful services, CI/CD</li>"}],"text":"Lead Software Engineer - Observability team","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3ff4035e-6ad8-46c4-ac71-cf1fee12b49a","applyUrl":"https://jobs.lever.co/GoToGroup/3ff4035e-6ad8-46c4-ac71-cf1fee12b49a/apply"},{"additionalPlain":"About The Team\n\nOur GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. \n\nOur service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.\n\nAs a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Our service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.</span></div><div><br></div><div><span style=\"font-size: 10pt\">As a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710229189158,"descriptionPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 10pt\">You will take the wheel in building, operating, and maintaining our developer platform called </span><a href=\"http://GoPay.sh\" style=\"font-size: 10pt\" class=\"postings-link\">GoPay.sh</a><span style=\"font-size: 10pt\"> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</span></div>","id":"c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5","lists":[{"text":"What You Will Do","content":"<li>Translate our product’s goals into iterative MVPs, evaluate, and then refactor into a scalable and extensible design</li><li>Pair with team members on functional and nonfunctional requirements and spread design philosophy, goals, and improvements to code quality across the team</li><li>Design and develop highly scalable, highly available, reliable, secure, and fault-tolerant systems with minimal guidance</li><li>Collaborate with cross-functional teams (Product, DevOps, UX, Data Engineering, QA, etc) on planning and execution</li><li>Manage automated build/test/deployment environments</li><li>Continuously discover, evaluate, and implement new technologies to maximize development</li><li>Deploy, monitor, maintain, and fix products currently in production</li>"},{"text":"What You Will Need","content":"<li>At least 6+ years of relevant software development experience in designing, developing, testing, and deploying applications for large-scale applications</li><li>Deep understanding of Microservices (HTTP &amp; GRPC), and programming languages like Java, Golang, Ruby, and Clojure (and a willingness to learn others)</li><li>Experience with Spring Boot or Hibernate is a big plus</li><li>Experience with cryptography (PKI &amp; HSM) is a big plus</li><li>Experience with Postgresql, Kafka, Kubernetes, GCP &amp; DevOps: Gitlab CI, Terraform</li><li>Proficiency in OOP, SQL, and Design Patterns; experience with functional programming is a plus</li><li>Strong data modeling experience in Relational and NoSQL databases</li><li>Ability to implement Continuous Integration and Continuous Delivery; well-versed with Agile methodologies, TDD and Test Engineering and Automation</li><li>Ability to design and implement low-latency RESTful/GRPC services</li>"}],"text":"Lead Software Engineer - Payments Data Products & Infra","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 10pt;\">You will take the wheel in building, operating, and maintaining our developer platform called </span><a href=\"http://GoPay.sh\" style=\"font-size: 10pt;\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">GoPay.sh</a><span style=\"font-size: 10pt;\"> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</span></div>","descriptionBodyPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5","applyUrl":"https://jobs.lever.co/GoToGroup/c3a0c7d8-a6e7-45a0-af1a-1eb5b6e18fc5/apply"},{"additionalPlain":"About The Team\n\nOur Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.\n\nWe pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.</div><div><br></div><div>We pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Public Policy & Government Relations","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713944910535,"descriptionPlain":"About The Role\n\nThe individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges. \n","description":"<div><b>About The Role</b></div><div><br></div><div>The individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges.&nbsp;</div>","id":"cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5","lists":[{"text":"What You Will Do","content":"<li>Relationship Building: Proactively establish and strengthen relationships with government officials, nonprofit groups, and other key institutions across Indonesia and Southeast Asia.</li><li>Policy Development: Collaborate with multiple stakeholders to develop a strategic and actionable public policy plan that aligns with organizational goals.</li><li>Internal Coordination: Work closely with internal teams within GoTo’s group of companies to ensure cohesive strategy execution across various sectors.</li><li>Project Leadership: Lead multiple projects in partnership with government institutions, focusing on Tech and the Digital Economy.</li><li>Networking and Alliance Building: Cultivate and leverage relationships with a broad network including government, non-government stakeholders, civil society, thought leaders, industry associations, and think tanks to forge strategic alliances.</li><li>Project Management: Oversee public policy projects that involve cross-functional teams and external stakeholders, ensuring successful outcomes and alignment with broader business objectives.</li>"},{"text":"What You Will Need","content":"<li>Bachelor’s degree in Law, Politics, International Relations, or Economics from a reputable university; Master’s degree preferred.</li><li>At least five years in a managerial role within public policy and government relations, or in sectors such as law firms, think tanks, civil society organizations, or government.</li><li>Established network among government stakeholders with a proven impact on policy decisions.</li><li>Strong analytical, problem-solving, communication skills, and independent project management capabilities.</li>"}],"text":"Manager of Food & Groceries Regulatory","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges.&nbsp;</div>","descriptionBodyPlain":"About The Role\n\nThe individual will oversee regulatory matters impacting the food and grocery sector, ensuring the business and its expansion are protected from government oversight and regulatory challenges. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5","applyUrl":"https://jobs.lever.co/GoToGroup/cd0a57bb-9c5b-4d7d-bfd5-230d37b73db5/apply"},{"additionalPlain":"About The Team\n\nOur Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.\n\nWe pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Public Policy and Government Relations Team is a dynamic group of over 20 professionals dedicated to addressing the regulatory landscape across diverse sectors such as Transportation, Food, and Groceries. We excel in forging strategic partnerships with government entities and navigating regulatory hurdles. How do we succeed? Through crafting top-tier engagement strategies and developing policy solutions that are supported by comprehensive analysis, research, and data.</div><div><br></div><div>We pride ourselves on being a close-knit team—truly a second family to each other. When you join us, you can count on our full support to help you integrate and perform with confidence from day one. We believe wholeheartedly in the power of teamwork, fostering a collaborative environment where both professional insights and personal interests are shared openly during our daily calls.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Public Policy & Government Relations","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713944717592,"descriptionPlain":"About The Role\n\nThe individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.\n","description":"<div><b>About The Role</b></div><div><br></div><div>The individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.</div>","id":"cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e","lists":[{"text":"What You Will Do","content":"<li>Develop strategic communications plans to advance the company’s policy advocacy initiatives.</li><li>⁠Lead the creation, execution and dissemination of media publications, social media contents, policy briefs, researches, op-eds, policy dialogues and other activities aiming to educate policy makers, the media and the general public in relation to the company’s policy initiatives.&nbsp;</li><li>⁠Prepare proactive and reactive communications for policy and regulatory issues.</li><li>⁠Prepare the company’s spokesperson for media and public engagements related to policy and regulatory issues.&nbsp;</li>"},{"text":"Whay You Will Need","content":"<li>Bachelor’s degree in Journalism, Law, Politics, International Relations, Economics or Social Sciences from a reputable university;&nbsp;</li><li>At least eight years in a managerial role within media companies or public policy and government relations, or in sectors such as think tanks, civil society organizations, or government which focus on policy advocacy through public channels.</li><li>Established network among media stakeholders with a proven impact on policy decisions.</li><li>Strong analytical, problem-solving, communication skills, and independent project management capabilities.</li>"}],"text":"Manager of Policy Communication","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.</div>","descriptionBodyPlain":"About The Role\n\nThe individual will spearhead the PPGR team’s advocacy in the media and social media by leveraging his/her strong knowledge and networking among the national media leadership. The individual will also craft the policy advocacy strategy in the public sphere to win the public perception which will lead to higher acceptance of policy initiatives that the PPGR team advocates.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e","applyUrl":"https://jobs.lever.co/GoToGroup/cc9aa398-a822-4b08-8bf9-ba7b8fe6ac9e/apply"},{"additionalPlain":"About The Team\n\nOur Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation & rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.\n\nCurrently, our team has been working on a lot of innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.\n\nGoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food, watching TV shows or sharing our hobbies.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation &amp; rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.</div><div><br></div><div>Currently, our team has been working on a lot of innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.</div><div><br></div><div>GoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food, watching TV shows or sharing our hobbies.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707726960069,"description":"","descriptionPlain":"","id":"8d38e7a3-89eb-4d80-997d-b08404b0e1a0","lists":[{"text":"What You Will Do","content":"<li>Create analytics and insight generation initiatives by understanding the behavior, usage, and attitude of the customer towards the products in order to generate market insight, define opportunities, and drive growth</li><li>Craft and implement all consolidated campaign and business reporting requirements to monitor GoFood's performance through strong collaboration with key stakeholders</li><li>Present a holistic view on market and competitive insights to allow effective and strategic decision-making process</li><li>Discover GoFood consumers’ in-app and transaction behavior, and provide actionable insights and strategies to reach target acquisitions and monthly transacting users</li><li>Conduct GoFood consumer research initiatives, including consumer segmentation and movement tracking</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree from reputable universities or equivalent practical experience</li><li>1-3 years of experience working as a data analyst, business intelligence analyst, or growth analyst in technology, FMCG, start-up, or telecommunication industry</li><li>Must be highly proficient in analytical tools such as Excel, SQL, Google Data Studio. Python is a plus.</li><li>Ability to translate complex ideas into simple and intuitive communication, and balance deep analytical rigor with actionable insights</li><li>Strong understanding of marketing and analytical concepts such as segmentation, customer lifecycle, retargeting, attribution models, prediction, and A/B testing</li><li>Experience preparing and developing a campaign report or various complex business reports</li><li>Experience developing user segmentation and executing user nudging and CRM or Digital Marketing campaigns</li>"}],"text":"Marketing Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/8d38e7a3-89eb-4d80-997d-b08404b0e1a0","applyUrl":"https://jobs.lever.co/GoToGroup/8d38e7a3-89eb-4d80-997d-b08404b0e1a0/apply"},{"additionalPlain":"About The Team\n\nOur Media Intelligence team consists of 4 people handling media analysis and research projects. Our main responsibility is to provide insights that drive our media strategy. How does one achieve this, you may ask? By continuously monitoring conversations of our brands and competitors both in conventional and social media. \n\nAs a team, we’re concerned with the company's growth and each other’s personal growth and well-being, too. We enjoy getting to know each other by talking about everything. For real, our weekly conversations range from social media trends to series worth binge-watching on the weekend. But whether you like movies or not, we’d be stoked to have you join the team!\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Media Intelligence team consists of 4 people handling media analysis and research projects. Our main responsibility is to provide insights that drive our media strategy. How does one achieve this, you may ask? By continuously monitoring conversations of our brands and competitors both in conventional and social media.&nbsp;</div><div><br></div><div>As a team, we’re concerned with the company's growth and each other’s personal growth and well-being, too. We enjoy getting to know each other by talking about everything. For real, our weekly conversations range from social media trends to series worth binge-watching on the weekend. But whether you like movies or not, we’d be stoked to have you join the team!</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Internship","department":"HoldCo - Corporate Affairs","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714309535469,"descriptionPlain":"About The Role\n\nJoin us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.\nTo deliver the tasks, you must be able to work full-time from Monday to Friday.\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>Join us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.</div><div>To deliver the tasks, you must be able to work full-time from Monday to Friday.</div><div><br></div>","id":"7ad0a551-f26b-4eb8-9849-cc04ac5dba4d","lists":[{"text":"What You Will Do","content":"<li>Monitor corporate news and other related information across channels (print, online, and social media).</li><li>Gather and analyze data from media monitoring to gain insights into public perception of the company and its performance.</li><li>Extract data and present interesting information from findings.</li><li>Identify trends and issues relevant to the company’s needs.</li><li>Collaborate to provide data-driven insights for other teams</li>"},{"text":"What You Will Need","content":"<li>Undergraduate students, preferably from Economics, Business, Computer Science, Marketing, Public Relations or Literature.</li><li>High proficiency in English and Bahasa Indonesia, both written and verbal.</li><li>A critical thinker, observant, and detail-oriented with vast knowledge of current issues and trends.</li><li>High willingness to learn.</li><li>Comfortable handling large data sets.</li><li>Knowledge in Ms Excel.</li><li>A collaborative team member as well as an independent self-starter.</li>"}],"text":"Media Intelligence Intern","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>Join us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.</div><div>To deliver the tasks, you must be able to work full-time from Monday to Friday.</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nJoin us to become a part of a collaborative, highly analytical team and an opportunity to dive deep into projects surrounding media analysis. As our Media Intelligence Intern, you’ll execute the daily media monitoring process for GoTo by enriching our database through data collection of corporate news and other related information from various media channels. The folks in Corporate Affairs team will be your companions on this ride. Your efforts will influence the direction of our media strategy.\nTo deliver the tasks, you must be able to work full-time from Monday to Friday.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7ad0a551-f26b-4eb8-9849-cc04ac5dba4d","applyUrl":"https://jobs.lever.co/GoToGroup/7ad0a551-f26b-4eb8-9849-cc04ac5dba4d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713245102772,"descriptionPlain":"As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment\n","description":"<div>As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment</div>","id":"3f4f687f-8599-4d5c-96d5-8af234c3b09d","lists":[{"text":"What You Will Do","content":"<li>Identify and define business opportunities that aligns with the overall merchant services business objectives</li><li>Translate business opportunities into a fit problem statement and able to measure the priority of the problem&nbsp;</li><li>Collaborate with Product Team to develop a merchant focused product in onboarding and support&nbsp;</li><li>Develop Go-To Market plan and oversee the product adoption from funnel conversion rates and merchant experiences during the process.&nbsp;</li><li>Monitoring the product life cycle and continuously improved the product with a data driven decision making process</li><li>Engaged sales and ops team to deliver the best onboarding and support experience for merchants</li>"},{"text":"What You Will Need","content":"<li>At least 5 years of working experience, experience in product and project management is a plus.&nbsp;</li><li>Possess a strong sense of agency in navigating and creating clarity in ambiguous situations.</li><li>Ability to break down complex problems, identify use cases and solutions, and thrive in unstructured environments.</li><li>Comprehensive understanding of data, design, research, and business processes, with the ability to effectively collaborate with diverse teams.</li><li>Strong analytical and quantitative skills, with the capability to utilize data and metrics to support requirements and features.</li><li>Effective communication skills to articulate strategy, insights, priorities, and plans coherently to all levels of management.</li><li>Meticulous attention to detail, with a commitment to upholding high standards and managing multiple, competing priorities concurrently with minimal supervision.</li>"}],"text":"Onboarding & Support Business Lead","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment</div>","descriptionBodyPlain":"As a Business Lead for the Merchant Services Team in GoTo Financial, you will play a pivotal role as the driver for business growth and product go-to-market in Onboarding and Support pod. You will have the playground to deliver the best seamless experiences to onboard our merchants and provide a delightful in-app help experience for them. Throughout this experience, you will build relationships with product, operations, sales, design and research teams. The ideal candidate will have experience in business and product management, project management, excellent communication skills, and the ability to work independently in a fast-paced environment\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3f4f687f-8599-4d5c-96d5-8af234c3b09d","applyUrl":"https://jobs.lever.co/GoToGroup/3f4f687f-8599-4d5c-96d5-8af234c3b09d/apply"},{"additionalPlain":"About The Team\n\nThe Operations team executes and manages the day-to-day requirements of keeping Gojek up and running. We’re responsible for the overall experience of our community, and that everyone gets the utmost “Gojek” experience. In particular, we’re in charge of overseeing our driver-partner growth, retention, regulatory compliance and profitability targets, and ensuring that we offer our driver-partners and riders a delightful and meaningful experience.The Trust & Safety team is responsible for maintaining and improving the integrity of our platform by managing critical cases as well as proactively initiating campaigns to improve public trust. We operate on a 24-hour monitoring rhythm for all of our channels and are the first responders for incidents that may have a major business impact. The team is unwavering in its commitment to ensuring strict compliance with the dynamic regulations that govern the ride-hailing industry. Through ongoing vigilance and proactive measures, we contribute to fostering a secure and trustworthy platform for our users and stakeholders.If you are passionate about maintaining platform integrity, responding to critical incidents, and ensuring regulatory compliance in a dynamic environment, we welcome your application to join our dedicated Trust & Safety team.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">The Operations team executes and manages the day-to-day requirements of keeping Gojek up and running. We’re responsible for the overall experience of our community, and that everyone gets the utmost “Gojek” experience. In particular, we’re in charge of overseeing our driver-partner growth, retention, regulatory compliance and profitability targets, and ensuring that we offer our driver-partners and riders a delightful and meaningful </span><a href=\"http://experience.The\" style=\"font-size: 10pt\" class=\"postings-link\">experience.The</a><span style=\"font-size: 10pt\"> Trust &amp; Safety team is responsible for maintaining and improving the integrity of our platform by managing critical cases as well as proactively initiating campaigns to improve public trust. We operate on a 24-hour monitoring rhythm for all of our channels and are the first responders for incidents that may have a major business impact. The team is unwavering in its commitment to ensuring strict compliance with the dynamic regulations that govern the ride-hailing industry. Through ongoing vigilance and proactive measures, we contribute to fostering a secure and trustworthy platform for our users and </span><a href=\"http://stakeholders.If\" style=\"font-size: 10pt\" class=\"postings-link\">stakeholders.If</a><span style=\"font-size: 10pt\"> you are passionate about maintaining platform integrity, responding to critical incidents, and ensuring regulatory compliance in a dynamic environment, we welcome your application to join our dedicated Trust &amp; Safety team.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1708072107075,"descriptionPlain":"If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust & Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain. \n\nEmploying your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.\n\n","description":"<div><span style=\"font-size: 16px\">If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust &amp; Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">Employing your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.</span></div><div><br></div>","id":"6f3368c9-6e84-489c-add3-4ad1fd4b9519","lists":[{"text":"What You Will Do","content":"<li>Provide regular analysis and reports on operational performance including compliance, escalations, quality, risk, and KPI tracking to guide decision-making and devise proactive solutions</li><li>Collaborate with cross-functional teams to build, automate, and improve on the availability, integrity, accuracy, and reliability of reporting, data logging, and data pipelines to be secure and compliant</li><li>Liaise with internal and external stakeholders for regulatory and compliance reports whenever needed, including issue investigation and report verification</li><li>Create and maintain performance management dashboards, visualizations, and trackers for Operations</li><li>Develop data-driven business insights and work with cross-functional teams to identify opportunities and implement new product features or system enhancements related to Trust &amp; Safety</li><li>Identify operational weaknesses and opportunities to help improve or innovate new processes and projects to drive user and vehicle quality, customer experience, and compliance to regulatory requirements</li><li>Prepare regulatory compliance reports to ensure adherence to relevant data protection, Insurance, earnings and safety regulations</li><li>Implement and maintain a good data management system to ensure the integrity, confidentiality, and availability of trust and safety-related data.</li>"},{"text":"What You Will Need","content":"<li>At least 2 years of experience in analytics and operations/compliance-related role</li><li>A wizard at working on and analyzing large datasets, with the ability to translate quantitative findings into action plan, demonstrated through understanding of&nbsp; statistical methods and modeling techniques.</li><li>Strong stakeholder and project management capabilities, with great attention to detail</li><li>Resilience and ability to take initiative in our constantly-changing fast-paced environment</li><li>Strong knowledge of SQL, Python, Google Suite, and MS Excel (advanced) is required</li><li>Experience in BI tools such as Tableau, Metabase, or Data Studio is a plus</li><li>Prior experience in the tech industry is a plus.</li>"}],"text":"Operations Analyst, Data Operations (Trust & Safety)","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust &amp; Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px;\">Employing your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.</span></div><div><br></div>","descriptionBodyPlain":"If you’re looking to be part of a dynamic, highly-analytical team that works to keep the Gojek platform safe, look no further. As an Operations Analyst (Data Operations) for the Trust & Safety team, you’ll take the wheel in designing and building scalable analytics solutions to support regulatory compliance, drive user and vehicle quality, and improve platform reliability that empower the Singapore business. This role is central in ensuring strict compliance to the regulatory requirements of our operations. Working closely with the business, risk, product, and government relations teams, you'll dive deep into local market insights to provide direction and analytical solutions that are timely, accurate, and actionable to enhance the safety narrative and contribute to the continuous improvement of data pipelines within the business intelligence domain. \n\nEmploying your stellar analytical skills and contextual business acumen, your efforts will bolster the continuous improvement of our platform integrity aimed at further amplifying users’ trust perception of Gojek, ensuring a safe platform they can count on and love to come back to.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6f3368c9-6e84-489c-add3-4ad1fd4b9519","applyUrl":"https://jobs.lever.co/GoToGroup/6f3368c9-6e84-489c-add3-4ad1fd4b9519/apply"},{"additionalPlain":"About The Team\n\nThe Payment Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF regulated entities with Bank Indonesia as the regulator. As a Payment Compliance team, we are obliged to ensure the adherence of internal divisions/units to payments system regulations, and at the same time to help ensure the business units are in a strategic position to execute all the business initiatives. \n\nThe Payment Compliance team itself combines  youthful energy and responsibility as expected from mature individuals. We foster a healthy and conducive environment for the members to share their opinions and thoughts and we promote high responsibility for each task assigned to all team members. All of those are critical aspects for the team to be able to interact, make sound judgment and give advice to many other functions within the GoTo ecosystem. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Payment Compliance team is a critical unit in the GTF ecosystem, it acts as a point of contact between GTF regulated entities with Bank Indonesia as the regulator. As a Payment Compliance team, we are obliged to ensure the adherence of internal divisions/units to payments system regulations, and at the same time to help ensure the business units are in a strategic position to execute all the business initiatives.&nbsp;</div><div><br></div><div>The Payment Compliance team itself combines&nbsp; youthful energy and responsibility as expected from mature individuals. We foster a healthy and conducive environment for the members to share their opinions and thoughts and we promote high responsibility for each task assigned to all team members. All of those are critical aspects for the team to be able to interact, make sound judgment and give advice to many other functions within the GoTo ecosystem.&nbsp;</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Legal & Compliance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713511717571,"descriptionPlain":"About The Role\n\nThe Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of  ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. \n","description":"<div><b>About The Role</b></div><div><br></div><div>The Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of&nbsp; ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. </div>","id":"19489ced-76de-411a-8205-8aebdef22d4c","lists":[{"text":"What You Will Do","content":"<li>Support Compliance and Regulatory Affairs matter in GoTo Financial&nbsp; Payments operations, which includes but not limited to business/product reporting and approval process with the regulators, compliance advisory assistance to business unit, as well as technical regulatory assessment</li><li>Provide Compliance advisory assistance for offline and online payments operations, in both consumer and merchant-facing operation</li><li>Create and maintain the latest update of payments regulations databases and&nbsp; provide/disseminate assessment on such regulations to the internal&nbsp; units in GoTo Financial</li><li>Provide assistance and support to the Head of Compliance and Senior Manager of Payments Compliance in any external engagements with Bank Indonesia, other regulators, industry associations and other external stakeholders</li><li>Give continuous support on the creation, standardization and implementation of Payments Compliance, policies, terms &amp; conditions, internal working procedures and standard operational guidelines;</li><li>Any other ad-hoc duties that may be required.</li>"},{"text":"What You Will Need","content":"<li>Bachelor Degree in Law and Accounting. Having a master’s degree would be an advantage.</li><li>Possess certifications in Risk Management/ IT Audit will be an advantage.</li><li>At least 4 years of mixed experience in the area of payments policy/ regulatory compliance and past working experience in Bank Indonesia/ Otoritas Jasa Keuangan will be an advantage.&nbsp;</li><li>Intermediate level of spoken and written skills both in English and Indonesian language.</li><li>Excellent analytical skills and attention to details with the capacity of identifying risks and proactively choosing the best solutions, and sound judgment.</li><li>Ability to multitask and adapt to work in a fast-paced team environment.&nbsp;</li><li>Well-developed communication skills (including oral, written and interpersonal skills) and the ability to liaise and negotiate in a variety of contexts, include builds credibility and strong relationships with internal and external stakeholders and counterparts</li>"}],"text":"Payments Compliance Manager - #9917","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of&nbsp; ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. </div>","descriptionBodyPlain":"About The Role\n\nThe Compliance Manager is a strategic role within GoTo Financial payments division. As a junior member of the team, she/he will be expected to be the support GTF Head of Compliance and Senior Manager PiC to ensure the alignment of GoTo Financial payments business units to grow sustainably through regulatory adherence. She/he will work across functions in GoTo Financial and GoTo Group to provide compliance advisory assistance to all functions, support technical product compliance risk assessment, reporting and submissions to the regulators with primary objective of  ensuring the implementation of payments regulations, industry standards and good corporate governance principles in the operations of the Company/Group. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/19489ced-76de-411a-8205-8aebdef22d4c","applyUrl":"https://jobs.lever.co/GoToGroup/19489ced-76de-411a-8205-8aebdef22d4c/apply"},{"additionalPlain":"Our data team is part of GoToFinancial Consumer Lending and mainly supports two products: GopayLater and GopayPinjam. The team includes members from offices in Jakarta, Singapore, Bangalore, and Beijing. We collaborate closely with the Risk, Finance, Growth, and Product teams, assisting them with their data requests on a daily basis.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">Our data team is part of GoToFinancial Consumer Lending and mainly supports two products: GopayLater and GopayPinjam. The team includes members from offices in Jakarta, Singapore, Bangalore, and Beijing. We collaborate closely with the Risk, Finance, Growth, and Product teams, assisting them with their data requests on a daily basis.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714372709159,"descriptionPlain":"As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser\n","description":"<div><span style=\"font-size: 10pt\">As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser</span></div>","id":"44117b68-3ece-40ac-91c1-920caadfe5dd","lists":[{"text":"What You Will Do","content":"<li>Design and construct scalable streaming or batch data pipelines to meet various business requirements.</li><li>Establish reliable monitoring and alerting systems to assess data pipeline performance.</li><li>Identify potential bottlenecks in the system and optimize as needed.</li><li>Manage the data science infrastructure to streamline model development and deployment.</li><li>Mentor team members by conducting code reviews and sharing knowledge.</li>"},{"text":"What You Will Need","content":"<li>Experience with streaming processing and Change Data Capture (CDC) tools such as Debezium, Flink, Kafka, etc. is necessary.</li><li>Good experience with infrastructure, including Cloud Computing, Linux OS, Networks, Docker, RDBMS, and NoSQL Databases is desirable.</li><li>Proficiency in Python and SQL is expected.</li><li>Must be self-driven, with a strong sense of ownership, and capable of working independently to solve problems and develop solutions.</li><li>Project management skills to successfully drive large-scale projects from initiation to completion are needed.</li><li>Excellent communication skills, including proficiency in English, are required.</li><li>Understanding of machine learning techniques and algorithms is advantageous.</li>"}],"text":"Principal Data Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser</span></div>","descriptionBodyPlain":"As a Principal Data Engineer, you must have a comprehensive data engineer skill set and experience as a data architect. Your job scope includes building streaming and batch pipelines and services, machine learning, and engineering support. You should be able to enhance the team’s tech stack, improving the reliability and efficiency of the data ser\n","hostedUrl":"https://jobs.lever.co/GoToGroup/44117b68-3ece-40ac-91c1-920caadfe5dd","applyUrl":"https://jobs.lever.co/GoToGroup/44117b68-3ece-40ac-91c1-920caadfe5dd/apply"},{"additionalPlain":"About the Team\n\nThe Marketplace Supply Team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace, which deeply impacts the everyday experiences of our customers (riders) and drivers. We are responsible for the pillars of technology, science, and strategy across the supply-and-demand, matching of over two billion global orders in 2019. The gist of our role is to oversee that Gojek's millions of customers are paired with the right drivers at the optimum price at the right time. This supply and demand matching is the core problem that our Product Team tackles every day. \n\nWe are a tight-knit group made up of avid readers, amateur gamers, coffee connoisseurs and (guilty) reality show watchers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company! \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Marketplace Supply Team at Gojek handles the hardest quantitative problems related to improving Gojek's real-time marketplace, which deeply impacts the everyday experiences of our customers (riders) and drivers.&nbsp;We are responsible for the pillars of technology, science, and strategy across the supply-and-demand, matching of over two billion global orders in 2019. The gist of our role is to oversee that Gojek's millions of customers are paired with the right drivers at the optimum price at the right time. This supply and demand matching is the core problem that our Product Team tackles every day.&nbsp;</div><div><br></div><div>We are a tight-knit group made up of avid readers, amateur gamers, coffee connoisseurs and (guilty) reality show watchers. We work hard and play hard, and believe it or not, we actually enjoy each other’s company!&nbsp;</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1698659054507,"descriptionPlain":"About the Role\n\nRoll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity. In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity.&nbsp;In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.</div><div><br></div><div><br></div>","id":"a54f9d2d-4b2d-43c3-bb82-c6705beefbcf","lists":[{"text":"What You Will Do ","content":"<li>Be solely responsible for the entire life-cycle of high complexity projects or features including engineering design, development, and deployment within their stream</li><li>Ensure the planning &amp; timely delivery of work within their stream, under the guidance from more experienced engineers</li><li>Improve code structure and architecture in service of test ability and maintainability, and; write, co-write, and review design documentation. Participate in the design review process, seeking and providing constructive criticism</li><li>Be accountable for the operationalization of the tracking and reporting of at least one execution metric (like code coverage, velocity)</li><li>Split complex engineering task into smaller components which can be developed by other engineers on the team</li><li>Mentor other engineers on an individual basis and participate in the hiring process</li>"},{"text":"What You Will Need","content":"<li>At least 8 years of relevant, hands-on experience with Clojure, Golang, or Java</li><li>Able to go into depth across tech stack used in the product</li><li>Experience working on large-scale event-driven micro-services architecture with an active use of Kafka and can architect solutions based on this pattern</li><li>Familiarity with basic programming principles such as SOLID and TDD</li><li>Intermediate experience with Linux OS and is able to troubleshoot issues</li><li>Understands why we need to test code and has implemented tests</li><li>Able to understand/discuss design and performance trade offs in complex systems</li>"}],"text":"Principal Software Engineer - Marketplace","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>Roll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity.&nbsp;In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nRoll up your sleeves and climb on board if you’re ready to be our next Principal Software Engineer. In this role, you will be an integral player in the Marketplace team based in Bangalore, India. With knowledge of building scalable applications, current user trends and preferences, and emerging technologies in the field, you will get to design, manage, and improve various applications. You will also get to enhance the engineering platform and cloud infrastructure used by all engineers, thereby improving the team's overall productivity. In our humble opinion, the coolest part is your ability to own the future of these products, ensuring its quality and longevity, and seeing the results of your efforts in people's everyday lives.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a54f9d2d-4b2d-43c3-bb82-c6705beefbcf","applyUrl":"https://jobs.lever.co/GoToGroup/a54f9d2d-4b2d-43c3-bb82-c6705beefbcf/apply"},{"additionalPlain":"About the Team\n\nOur Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.\nWe, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 16px\"><b>About the Team</b></span></div><div><br></div><div><span style=\"font-size: 16px\">Our Transport PDG team is part of GoJek GoTo family that includes engineers, product managers, designers etc spread out across Bangalore, Gurgaon, Jakarta and Singapore. We run Southeast Asia’s leading ride-hailing business and oversee all things related to our riders and driver-partner's needs. We touch millions of lives on a daily basis through our ride-hailing experience and continuously work towards trying to improve the experience for our customers and driver partners. It’s our job to ensure that our Transport services run seamlessly from inside out.</span></div><div><span style=\"font-size: 16px\">We, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing games or catching up with each other and discussing varied topics. We work as a team to get our job done well, and genuinely enjoy each other's company.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1715060912791,"descriptionPlain":"About the Role\n\nWe are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","description":"<div><span style=\"font-size: 16px\"><b>About the Role</b></span></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","id":"426f18b4-739e-4da0-a74b-446c349c0a31","lists":[{"text":"What You Will Do","content":"<li>Design and develop highly scalable, highly available, reliable, secure and fault tolerant systems with minimal guidance for one of the world's fastest growing company in the transportation industry</li><li>Translate business requirements into scalable and extensible design</li><li>Pair with team members on functional and nonfunctional requirements and spread design philosophy, goals and improve the code quality across the team</li><li>Collaborate with cross functional teams (Mobile, DevOps, UX, QA etc.) on execution and delivery</li><li>Partner with the team to define and execute the feature roadmap</li><li>Provide technology leadership to the team and foster engineering excellence</li><li>Research new technologies and tools that enable building simplistic architecture for the next generation of Gojek services</li>"},{"text":"What You Will Need","content":"<li>Should have at least 7 years of hands-on experience in designing, developing, testing and deploying applications at scale</li><li>Proficient in System Design, Design patterns, database structure, Linux/Unix. Experience with functional programming and infrastructure management is a plus</li><li>Well versed with Agile methodologies, TDD and Test Engineering and Automation</li><li>Excellent understanding of interactive application development paradigm, memory management, performance/resource optimizations, database interactions, network programming, concurrency and multithreading, fault tolerance, monitoring, security and operability of systems</li><li>Ability to pick up new technologies and independently navigate obstacles and find innovative solutions</li><li>Ability to seamlessly switch focus between tasks and enthusiasm for seeking out learning opportunities</li><li>Ability to build strong relationships within and beyond the team, enhancing knowledge expansion and problem-solving efforts, while also nurturing the same through the exchange of constructive feedback</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Principal Software Engineer (Backend) - Transport","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\"><b>About the Role</b></span></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.</span></div>","descriptionBodyPlain":"About the Role\n\nWe are looking for Principal Software Engineers for the Transport team. As part of this role you will be responsible to raise the bar for engineering excellence and set up practices that would enable the next evolution of the products. You will need to be hands-on with the technology and curious to learn and unlearn. Your primary focus will be to technically lead design, develop and deploy some of the most critical and technically complex offerings at Gojek. You should be someone who is passionate about maintaining a clean and maintainable codebase. In this role you would also be forthcoming to mentor and guide peers towards technical know-hows and help in ideating towards a simple but more scalable approach for complex workflows. Your ownership, drive and passion would help provide for a world class user experience and stability of our products.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/426f18b4-739e-4da0-a74b-446c349c0a31","applyUrl":"https://jobs.lever.co/GoToGroup/426f18b4-739e-4da0-a74b-446c349c0a31/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1698941092552,"descriptionPlain":"About the Role:\n\nAs a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem. By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.\n","description":"<div><b>About the Role:</b></div><div><br></div><div>As a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem.&nbsp;By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.</div>","id":"35da9d16-f619-4a14-a715-9033bb36eb7f","lists":[{"text":"What You Will Do","content":"<li>Solve problems for the customers to help them get financial inclusion and help customers increase their balance sheet with the best experience in Indonesia</li><li>Collaborate closely with customers and stakeholders, utilizing data-driven insights to meet their evolving needs</li><li>Drive product decisions using data analytics, A/B testing, and user insights to achieve measurable outcomes</li><li>Take full ownership of our product portfolio, using data to guide strategic direction and improvements</li><li>Develop and execute data-informed product roadmaps, setting clear, data-backed objectives</li><li>Stay at the forefront of industry trends, competitor analysis, and regulatory changes through data-driven research</li><li>Work in tandem with engineering, design, and marketing teams to ensure data-backed product launches</li><li>Prioritize user experience enhancements based on data analysis, boosting customer satisfaction and retention</li><li>Use data-driven decision-making to prioritize features, enhancements, and optimizations that make an impact</li>"},{"text":"What You Will Need","content":"<li>At least 4 years of experience as a Product Manager, preferably in a consumer-facing product</li><li>Ability to set your own targets, ask for help when you need it, and are always looking to learn something new</li><li>Strong communication skills: Ability to summarize complex and technical topics to a wide range of audiences</li><li>You are a self-starter, you love to understand systems inside out and make it your mission to deliver quality products</li><li>Fast &amp; Agile: Ability to excel in a constantly changing and rapidly growing workplace</li><li>Data-Driven: When making decisions you leverage technical resources and data to support hypotheses. You are skilled at SQL and understand basic statistics, but you also know when to step back from the rabbit hole of ‘too many metrics’</li><li>Domain Knowledge: Experience in Fintech and Lending is a plus</li>"}],"text":"Product Manager 2 - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role:</b></div><div><br></div><div>As a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem.&nbsp;By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.</div>","descriptionBodyPlain":"About the Role:\n\nAs a Product Manager, you will be taking the wheel in building lending products for consumers across the GoTo ecosystem. By working closely with the engineering and the design team, you’ll shape the nature of our lending products to ensure our customers are able to meet their short-term and long-term financial needs responsibly.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/35da9d16-f619-4a14-a715-9033bb36eb7f","applyUrl":"https://jobs.lever.co/GoToGroup/35da9d16-f619-4a14-a715-9033bb36eb7f/apply"},{"additionalPlain":"About The Team\n\nOur Product Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation & rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.\nCurrently, our team has been working on a lot of product innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.\n\nGoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food and sharing our hobbies.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our Product Marketing team is a part of the GoFood Business team based in Jakarta. The team consists of growth marketing, brand managers, brand executives, marketing analytics, and more. They are the magicians who combine logic and magic to create a brand that people love. Our main responsibility is to develop GoFood’s marketing campaign that ensures GoFood continuous growth. Making sure everyone knows, always thinks about GoFood and we also want everyone to stick with GoFood. More importantly, we want to deliver joy in the life of our consumer through the assortment, recommendation &amp; rewards in our platform. We are also a data-driven team who strive to continuously improve our efficiency.</div><div>Currently, our team has been working on a lot of product innovation, branding and promotional campaigns, which will help GoFood maintain our leadership in the market.</div><div><br></div><div>GoFood Marketing team believes the growth of the business is driven by the growth of the talents. Of course we care about the business number, yet we also care about each other’s well-being and growth journey. Other than enjoying finding that “a-ha!” moments when swimming through the sea of data, our family also enjoys bonding over food and sharing our hobbies.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707306211878,"descriptionPlain":"About The Role\n\nFasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.\n","description":"<div><b>About The Role</b></div><div><br></div><div>Fasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.</div>","id":"68d7d220-1f05-49ea-9f34-fffe0ef75aea","lists":[{"text":"What You Will Do","content":"<li>Develop and execute integrated campaign plans that include activations across many formats and channels (e.g. video, interactive, social).&nbsp;</li><li>Collaborate with the GoFood business team in conceptualizing, designing and building strategies and campaigns to reach GoFood business goals and visions.</li><li>Partner with the creative and media team to develop robust and relevant communication for our different segments, using various drivers to impact growth according to the different personas.</li><li>Collaborate with the Product team to not only develop and execute strong GTMs for new product launches, but also become an integral partner in sharing input and consumer insights for product development.</li><li>Creating engaging and informative contents for digital marketing, website, blog, social media, and any other content marketing channels that the business might leverage to improve the conversion funnel particularly for the non active or dormant users, supported by branding, copywriter and creative teams.&nbsp;</li><li>Identifying improvement areas for the incumbent marketing process or user journey and implementing the changes required for it. Including but not limited to CRM user journey, performance marketing, and social media engagement.</li><li><br></li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree from reputable universities or equivalent practical experience.</li><li>5-6 years of experience working as a product marketing manager, analytics manager, or strategy &amp; planning manager in technology, start-up or FMCG.</li><li>Experience in crafting marketing, communication and business strategy.</li><li>Experience in end-to-end campaign development, from planning, executing and reporting.</li><li>Experience working with cross-functional/cross-discipline stakeholders, and drafting and leading communication plans for internal stakeholders.</li><li>Experience with solving problems and thinking strategically in order to translate user tension into business opportunities for company growth.</li><li>Experience in brand health tracking on the reporting, trend monitoring and developing an improvement plan.</li>"}],"text":"Product Marketing Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>Fasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.</div>","descriptionBodyPlain":"About The Role\n\nFasten your helmet and climb aboard, if you’re ready to be our Marketing Manager for GoFood. In this role, you will be part of the GoFood Marketing team based in Jakarta, Indonesia. Managing marketing strategy and executing go-to-market strategy for GoFood products, delivering the joy of food and culinary to new and loyal customers alike. This role is crucial in planning, implementing campaign plan such as communication strategy, channels, and promo based on the given budget.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/68d7d220-1f05-49ea-9f34-fffe0ef75aea","applyUrl":"https://jobs.lever.co/GoToGroup/68d7d220-1f05-49ea-9f34-fffe0ef75aea/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713779183047,"descriptionPlain":"You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","id":"a062b588-6d29-4628-aa01-2e9e4a6da8f0","lists":[{"text":"What You Will Do","content":"<li>To support Region CE Manager to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver District target completed orders and active users.</li><li>Managing all day to day marketing executional activities from all districts &amp; branches&nbsp; needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in districts &amp; branches are delivered with given standard of accuracy, completeness, timeliness as per the standard package and local initiatives.&nbsp;</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis.</li><li>Internally work with direct responsibility to deliver district executions and targets with close coordination with Region CE Manager in executing events, exhibits, and other activities.</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results.</li><li>Be responsible for setting the integrated communications plan and ensure consistency of messaging and brand communications. Working closely with the sales, government relations, and operations team.</li>"},{"text":"What You Will Need","content":"<li>Bachelor degree, with GPA &gt; 3.2 or equivalent</li><li>Preferably majoring in Marketing Management or Business</li><li>At least 3-4 years of working experience in marketing</li><li>Solid experience in partnership and digital marketing</li><li>Strong analytical and planning skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</li><li>Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</li>"},{"text":"About the Team","content":"<li>Our Regional Consumer Engagement team is a family of 17 people based in Indonesia, specifically in Jabodetabek region. We oversee all things and act as a center of excellence for partnerships and increasing potential visibility in respective region POI or malls and work to create (consumer engagement and brand awareness. It’s our job to ensure that all engagement activities run seamlessly. One of the biggest challenges we had to face is to ensure gojek domination is consistent across Jabodetabek region. We eventually resolved it by doing close coordination with HQ and the regional team. Currently, we’re busy at work on various projects, including one about POI domination, merchants branding.</li>"}],"text":"Region Consumer Engagement Associate (Marketing) - Jabodetabek","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</div>","descriptionBodyPlain":"You will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a062b588-6d29-4628-aa01-2e9e4a6da8f0","applyUrl":"https://jobs.lever.co/GoToGroup/a062b588-6d29-4628-aa01-2e9e4a6da8f0/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705298233347,"descriptionPlain":"As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","description":"<div><span style=\"font-size: 9pt\">As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","id":"63b9af16-d876-43e2-8f29-3abb844379e9","lists":[{"text":"What Will You Do","content":"<li>To support Region CE Senior Manager to drive consumer engagement focus areas in terms of Visibility &amp; Partnership which will deliver POI domination, POS merchants branding, standard package that will deliver District target completed orders and active users</li><li>Managing all day to day marketing executional activities from all districts &amp; branches&nbsp; needed to deliver the consumer engagement plans. e.g. contract, PO, invoice, etc.</li><li>Ensure all consumer engagement activities in districts &amp; branches are delivered with given standard of accuracy, completeness, timeliness as per the standard package and local initiatives</li><li>Externally supervise vendors/daily workers in executing merchant branding and POI domination on a regular basis</li><li>Internally work with direct responsibility to deliver district executions and targets with close coordination with Region CE Manager in executing events, exhibits, and other activities</li><li>Good with data to develop and execute clear integrated strategies of digital marketing with clear metrics and excellent results</li><li>Be responsible for setting the integrated communications plan and ensure consistency of messaging and brand communications Working closely with the sales, government relations, and operations team</li>"},{"text":"What Will You Need","content":"<li>Bachelor degree from top university or&nbsp; any well-known universities from each region or abroad with GPA &gt; 3.2 or equivalent</li><li>Preferably majoring in Marketing Management or Business</li><li>At least 5-7 years of working experience in marketing</li><li>Solid experience in partnership and digital marketing</li><li>Strong analytical and planning skills</li><li>Excellent problem-solving skill with the ability to play it well independently and in a team</li><li>Easily adapt to change, shows flexibility, prioritisation, organisation and time management skills</li><li>Excellent communication skills with demonstrated interpersonal flexibility and strong team management skills</li>"}],"text":"Region Consumer Engagement Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.</span></div>","descriptionBodyPlain":"As a Region Consumer Engagement Manager, you will be responsible for developing Gojek products by creating and implementing strategic marketing plans across various touch points namely visibility, partnership, and digital to name a few. You will also be responsible for the marketing funnel of Gojek products across the Jabodetabek region aligned with the headquarter initiatives. You will work closely with the CE, Marketing, and cross functional team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/63b9af16-d876-43e2-8f29-3abb844379e9","applyUrl":"https://jobs.lever.co/GoToGroup/63b9af16-d876-43e2-8f29-3abb844379e9/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715919574159,"descriptionPlain":"About The Role\n\nRegional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">Regional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.</span></div>","id":"ea0f2d5a-c9d5-4202-ac91-a671b128bfb4","lists":[{"text":"What You Will Do:","content":"<li>Develop tailored-local plan to educate and engage merchants in his/her territory based on their lifecycle stages, i.e: create partnerships, weekly gatherings, collaborate with marketing team for local programs</li><li>Ensure the local plan to be executed by district, branch &amp; satellite teams for both managed &amp; unmanaged merchants</li><li>Liaise with HQ Merchant Engagement Team to develop and execute nationwide/main local key program and initiatives</li><li>Liaise with product team in HQ (GoFood, GoPay, etc.) for the execution of region-centric projects</li><li>Gather and develop key insights to continuously improve practices and standard of merchant engagement activities</li><div><br></div>"},{"text":"What You Will Need","content":"<li>Bachelor's degree in any field (Top tier University is preferable) </li><li>5-7 years of experience within mid-to-senior management function (FMCG, and Telecommunication company)</li><li>Strong network and knowledge about the city</li><li>Excellence to bridge, develop and maintain good relationships with key partners such as but not limited to local/regional government stakeholders, 3rd party partners, merchant associations, communities</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Excellent communication skills and proficiency in English</li><li>Experienced in managing a big team, as well as strong in people development and mentoring / coaching would be a plus point</li><li>Fact-based/number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Region Merchant Development Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">Regional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.</span></div>","descriptionBodyPlain":"About The Role\n\nRegional Merchant Engagement Manager has the responsibility to develop the assigned regional market by creating strategies to keep merchants within the region actively engaged and have their revenue grown. This role reports to Regional Sales Senior Manager.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ea0f2d5a-c9d5-4202-ac91-a671b128bfb4","applyUrl":"https://jobs.lever.co/GoToGroup/ea0f2d5a-c9d5-4202-ac91-a671b128bfb4/apply"},{"additionalPlain":"You will spend 50%-60% of your working hours on analysis and dashboard creation. The remaining is for presentation, coordination, team development and others. You will join a large team (over 50 members) with many moving parts. You are here to help simplify the complexity.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 16px\">You will spend 50%-60% of your working hours on analysis and dashboard creation. The remaining is for presentation, coordination, team development and others. You will join a large team (over 50 members) with many moving parts. You are here to help simplify the complexity.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714965919146,"descriptionPlain":"About The Role\n\nRegion Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.\n\nIn this role you will answer and create data dashboards for various questions such as: \n1. “How should we define driver service quality and how to measure it?”\n2. “How to detect if there is any anomaly in the dataset?”\n3. “Which city has been underperforming, why, and how can we address it?”\n\n\n\n","description":"<div><b style=\"font-size: 16px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Region Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.</span></div><div><br></div><div><span style=\"font-size: 16px\">In this role you will answer and create data dashboards for various questions such as:&nbsp;</span></div><div><span style=\"font-size: 16px\">1. “How should we define driver service quality and how to measure it?”</span></div><div><span style=\"font-size: 16px\">2. “How to detect if there is any anomaly in the dataset?”</span></div><div><span style=\"font-size: 16px\">3. “Which city has been underperforming, why, and how can we address it?”</span></div><div><br></div><div><br></div><div><br></div>","id":"29c083cb-0dda-4ce1-9513-788f00e8f482","lists":[{"text":"What You Will Do:","content":"<li>Answer consultant-level questions such as “how can we increase adoption rate of a driver apps feature from x% to y% within 3 months?” and “how can we create profiling segments for millions of Gojek accounts”</li><li>Build fairly complex quantitative model to help predict business outcome</li><li>Write fairly complex SQL query on daily basis</li><li>Create user-friendly dashboards with softwares such as Metabase or Tableau</li><li>Assist the Regional Operations Manager to coordinate implementation of initiatives across cities</li><li>Teach and coach the city-level team members on how to do business analytics</li>"},{"text":"What You Will Need:","content":"<li>At least 2-5 years of relevant analytics role, preferably from consulting firms and technology companies or any institutions with complex and large database</li><li>Quantitative academic degrees e.g. engineering, mathematics, economics with&nbsp;strong academic record (GPA &gt;3.5)</li><li>Strong in SQL query, dashboard creation, and structured problem-solving</li><li>Experience in using data analytic tools like BigQuery, Tableau, Metabase</li><li>Proficient English (you will read a lot of technical documentation written in English)</li><li>Go getter personality (when there is blocker you must find your way around it, including having to do ground visit and interviewing drivers when necessary)</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Region Operations Associate","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Region Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.</span></div><div><br></div><div><span style=\"font-size: 16px;\">In this role you will answer and create data dashboards for various questions such as:&nbsp;</span></div><div><span style=\"font-size: 16px;\">1. “How should we define driver service quality and how to measure it?”</span></div><div><span style=\"font-size: 16px;\">2. “How to detect if there is any anomaly in the dataset?”</span></div><div><span style=\"font-size: 16px;\">3. “Which city has been underperforming, why, and how can we address it?”</span></div><div><br></div><div><br></div><div><br></div>","descriptionBodyPlain":"About The Role\n\nRegion Operations Associate is an in-house consultant within our regional operations team. You will gain wide access to Gojek’s gigantic database in order to generate various types of analysis, proposals and business dashboards. Everyday can be different in this role. This role seeks individuals who are comfortable facing different issues everyday.\n\nIn this role you will answer and create data dashboards for various questions such as: \n1. “How should we define driver service quality and how to measure it?”\n2. “How to detect if there is any anomaly in the dataset?”\n3. “Which city has been underperforming, why, and how can we address it?”\n\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/29c083cb-0dda-4ce1-9513-788f00e8f482","applyUrl":"https://jobs.lever.co/GoToGroup/29c083cb-0dda-4ce1-9513-788f00e8f482/apply"},{"additionalPlain":"About The Team\n\nAs an Region Operations Manager, he/she will work as a center of excellence for Operations stream in the Regions. He/she will work very intensively and collaborate with HQ Driver Core, other Region Operations Managers across regions as well as Area Operations Managers from each Area. He/she also will work closely with the Analytics team to analyze Operations data to get valuable insight and recommendation for business.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">As an Region Operations Manager, he/she will work as a center of excellence for Operations stream in the Regions. He/she will work very intensively and collaborate with HQ Driver Core, other Region Operations Managers across regions as well as Area Operations Managers from each Area. He/she also will work closely with the Analytics team to analyze Operations data to get valuable insight and recommendation for business.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713428751727,"descriptionPlain":"About the Role \n\nRegion Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.\n","description":"<div><b><span style=\"font-size: 10pt\">About the Role </span></b></div><div><br></div><div><span style=\"font-size: 10pt\">Region Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.</span></div>","id":"0489939a-c571-4d5f-adaa-95ceac8912c5","lists":[{"text":"What You Will Do: ","content":"<li>Responsible for completed orders and profit and loss target achievement</li><li>Provide analytics to support operations team such as Supply Reliability, Fraud rules, Driver’s Engagement etc. at the regional level</li><li>Deploy defined strategies from operations perspective during the process of establishing the new area of service as well as optimizing existing area</li><li>Ensure SOP and legal compliances in the region</li><li>Support Regional Operation Head to oversee all districts and branches operations</li><li>Analyze driver states &amp; measure efficiency of various driver badges to generate more high quality drivers in the region</li><li>Support Regional Operation Head in product changes roll out in the region</li>"},{"text":"What You Will Need:","content":"<li>Having at least 5 years experience in supply chain, preferably at the managerial level and from Multi National Company or similar experience in the Ride Hailing/ On Demand Service Industry</li><li>Strong analytical thinking and problem solving skills using various improvement tools and methods (preferably have prior exposure to SQL)</li><li>Having good understanding about supply and demand planning</li><li>Able to create creative solutions toward operation issues and empower relevant team to execute properly</li><li>Lead team / project as well as persuade stakeholders to ensure speed &amp; quality of project / initiative</li><li>Proficiency in to converse in English</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Region Operations Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b><span style=\"font-size: 10pt;\">About the Role </span></b></div><div><br></div><div><span style=\"font-size: 10pt;\">Region Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.</span></div>","descriptionBodyPlain":"About the Role \n\nRegion Operations Manager play a pivotal role in curating and deploying strategies as well as doing analytics at the region and finding local insights to support the overall Operation strategies. He/she will work collaboratively with all Areas to oversee overall operations and ensure strategic implementation including product changes.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/0489939a-c571-4d5f-adaa-95ceac8912c5","applyUrl":"https://jobs.lever.co/GoToGroup/0489939a-c571-4d5f-adaa-95ceac8912c5/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709635110438,"description":"","descriptionPlain":"","id":"fc862fb7-6833-49c3-96c7-c8ee71cd0fe4","lists":[{"text":"What You Will Do","content":"<li>Understand problems reported to stakeholders or knowledge gaps in their understanding of our merchants</li><li>Assist your manager/lead by grooming research requests by asking questions that help uncover the scope and complexity</li><li>Collaboratively creating and socializing the research plan with all the related stakeholders</li><li>Build discussion guides for generative interviews and evaluative interviews with participants. Such as in-depth interviews, concept tests, focus group discussions, usability tests</li><li>Organize effective data collection by collaborating with partners and vendors in the field</li><li>Conduct and participate in data analysis and synthesis sessions with peers</li><li>Build research reports to convey findings</li><li>Present the research report to stakeholders</li><li>Keep the research repository and insights banks updated for our relevant topics</li>"},{"text":"What You Will Need","content":"<li>At least 3 years of experience or more in any field of Research, knowledge in Market research, Brand Research, and User Experience (UX) Research is a plus</li><li>Experience in hybrid research methods; with experience in qualitative and quantitative research methods (more exposure in qualitative projects is preferable, but quant exposure is welcome)</li><li>Project management skills in designing, executing, and delivering research independently from start to finish</li><li>Understanding the various functions that enable tech companies to be more successful</li><li>Comfortable with the culture that empowers autonomy and fluency in navigating uncertainty</li><li>Good communication, storytelling, and influencing skills to work with different levels of stakeholders and users in English and Bahasa Indonesia (written and verbal)</li><li>Empathy to connect with stakeholders and users with various backgrounds and openness to learning from and sharing your skill set with others</li><li>Exposure to payment gateways, e-commerce, point-of-sales products, and industries related to merchant products is a big plus.</li>"}],"text":"Researcher - Merchant Services","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/fc862fb7-6833-49c3-96c7-c8ee71cd0fe4","applyUrl":"https://jobs.lever.co/GoToGroup/fc862fb7-6833-49c3-96c7-c8ee71cd0fe4/apply"},{"additionalPlain":"About The Team\n\nThe team is split across 2 locations supporting different business activities that GTF operates in.  Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The team is split across 2 locations supporting different business activities that GTF operates in.&nbsp; Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710738954272,"descriptionPlain":"About The Role\n\nWe are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","description":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","id":"60d37414-287e-4552-a0d0-accf1737d0ce","lists":[{"text":"What You Will Do","content":"<li>Key fraud analyst to the business teams for the assigned product lines - conducting deep dives and analysis on risk related issues.</li><li>Close monitoring of risk metrics, underlying drivers - and the overall business metrics</li><li>Assess, validate and optimize risk rules - to ensure best outcome of risk/reward and to meet stated risk target metrics</li><li>Develop risk platform solutions that will balance the various requirements from the product lines but yet maintain a holistic view of the customer experience</li>"},{"text":"What You Will Need","content":"<li>3-4 years of related payment risk experience, preferably on the acquiring side and e-wallets</li><li>Able to assess issues and recommend solutions both at the strategic and tactical levels - balancing the business vision and practical implementation considerations.</li><li>Intermediate proficiency in using GSuite and other data skills (SQL, BigQuery etc)</li><li>Proactively builds trust-based relationships with stakeholders while maintaining the ability to remain objective</li><li>Strong understanding of risk solutions, product implementation - on the business side</li>"}],"text":"Risk Analyst - Payments #9746","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","descriptionBodyPlain":"About The Role\n\nWe are looking for exceptional fraud risk analyst to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","hostedUrl":"https://jobs.lever.co/GoToGroup/60d37414-287e-4552-a0d0-accf1737d0ce","applyUrl":"https://jobs.lever.co/GoToGroup/60d37414-287e-4552-a0d0-accf1737d0ce/apply"},{"additionalPlain":"In this role, you will get the opportunity to work together with other teams (risk analyst, GTM and Collection) to find the best solutions to our business problems leveraging big data and machine learning tools.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">In this role, you will get the opportunity to work together with other teams (risk analyst, GTM and Collection) to find the best solutions to our business problems leveraging big data and machine learning tools.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1704856901936,"description":"","descriptionPlain":"","id":"5611e062-e094-4da3-ab1c-75c85cf62194","lists":[{"text":"What You Will Do","content":"<li>Combine technical and business knowledge to develop innovative data science solutions</li><li>Rapidly prototype solutions and contribute to product and feature discussions</li><li>Analyze large volumes of data and generate actionable insights</li><li>Experiment with different ML techniques and research the latest technologies (e.g. LLM) to determine the best approach</li><li>Own end-to-end solutions, from formulating the technical problem to deployment of the solution as part of a cross-functional team of scientists, analysts, product managers, and engineers&nbsp;</li>"},{"text":"What you will need","content":"<li>3+ years of experience developing ML solutions</li><li>Strong quantitative and problem-solving skills</li><li>Solid understanding of Statistics/ML fundamentals and experience in Python, R</li><li>Communication skills to engage with business stakeholders to understand their needs and effectively communicate the results of the analytical solutions</li><li>Ability to write clear and concise technical documentation</li><li>Masters in a quantitative discipline (good to have - Experienced - Bachelor)</li>"}],"text":"Risk Data Scientist","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/5611e062-e094-4da3-ab1c-75c85cf62194","applyUrl":"https://jobs.lever.co/GoToGroup/5611e062-e094-4da3-ab1c-75c85cf62194/apply"},{"additionalPlain":"About The Team\n\nThe team is split across 2 locations supporting different business activities that GTF operates in.  Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The team is split across 2 locations supporting different business activities that GTF operates in.&nbsp; Highly dynamic culture, with independent team members - interacting and influencing business and other functional stakeholders to achieve risk KRs</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713334327811,"descriptionPlain":"About The Role\n\nWe are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","description":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","id":"a61cda6c-82fd-4daf-aabf-3db91e01684f","lists":[{"text":"What You Will Do","content":"<li>Key fraud analyst to the business teams for the assigned product lines - conducting deep dives and analysis on risk related issues.</li><li>Close monitoring of risk metrics, underlying drivers - and the overall business metrics</li><li>Assess, validate and optimize risk rules - to ensure best outcome of risk/reward and to meet stated risk target metrics</li><li>Develop risk platform solutions that will balance the various requirements from the product lines but yet maintain a holistic view of the customer experience</li>"},{"text":"What You Will Need","content":"<li>5-8 years of related payment risk experience, preferably on the mobile apps and e-wallets</li><li>Able to assess issues and recommend solutions both at the strategic and tactical levels - balancing the business vision and practical implementation considerations.</li><li>Intermediate proficiency in using GSuite and other data skills (SQL, BigQuery etc)</li><li>Proactively builds trust-based relationships with stakeholders while maintaining the ability to remain objective</li><li>Strong understanding of risk solutions, product implementation - on the business sid</li>"}],"text":"Risk Manager - Payments #9868","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp;&nbsp;</div>","descriptionBodyPlain":"About The Role\n\nWe are looking for exceptional fraud risk manager to identify potential fraud risk, develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","hostedUrl":"https://jobs.lever.co/GoToGroup/a61cda6c-82fd-4daf-aabf-3db91e01684f","applyUrl":"https://jobs.lever.co/GoToGroup/a61cda6c-82fd-4daf-aabf-3db91e01684f/apply"},{"additionalPlain":"About The Team\n\n- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management\n- Team members are from diverse background and cultures, providing a open and inclusive environment to develop\n- The working style in the team is productive and outcome-driven\n- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management</div><div>- Team members are from diverse background and cultures, providing a open and inclusive environment to develop</div><div>- The working style in the team is productive and outcome-driven</div><div>- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713511923769,"description":"","descriptionPlain":"","id":"e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59","lists":[{"text":"What You Will Do","content":"<li>Perform underwriting and post-loan management data analysis, output policy decisions based on it, actively monitor results, and effectively iterate the policies</li><li>Conduct user segmentation, pricing sensitivity check &amp; risk-based pricing on consumer lending products</li><li>Analyze user behaviors in the ecosystem, do problem-solving, and provide proposals to the management on risk control, UX improvement, and onboarding channel management&nbsp;</li><li>Prepare Risk reporting, position reporting, monitoring dashboards, and present recommendations</li><li>Support credit business growth by defining &amp; analyzing possible risks and consequences, and designing processes to eliminate and mitigate</li><li>Work closely with other business stakeholders and share insights of risk management</li>"},{"text":"What You Will Need","content":"<li>Have experience in lending business at least 2 years</li><li>Have experience in conducted detailed risk assessments&nbsp;</li><li>Have experience in analyzing documents, statistics, reports and trends of both internal &amp; external data</li><li>Have good communication and adaptive skills, be responsible and discipline in data providing</li><li>Have knowledge and experience of working with SQL, if proficient will be a big advantage. Python is a bonus item</li><li>Independent, organized, highly analytical and proactive</li>"}],"text":"Risk Strategy - Consumer Lending #9919","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59","applyUrl":"https://jobs.lever.co/GoToGroup/e318ec15-ebfb-44d7-a6f0-c1d1b3cc9e59/apply"},{"additionalPlain":"About The Team\n\n- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management\n- Team members are from diverse background and cultures, providing a open and inclusive environment to develop\n- The working style in the team is productive and outcome-driven\n- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process\n","additional":"<div><b>About The Team</b></div><div><br></div><div>- The Risk Strategy Team already attracts talents with in-depth experience in consumer lending risk management</div><div>- Team members are from diverse background and cultures, providing a open and inclusive environment to develop</div><div>- The working style in the team is productive and outcome-driven</div><div>- The business is now in the expansion stage, and all the team members will enjoy great exposure to the credit business and ToB life-cycle risk management process</div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1715764385486,"description":"","descriptionPlain":"","id":"e33b73ae-63e2-4e9c-aff9-03e9127e4e4e","lists":[{"text":"What You Will Do","content":"<li>Perform underwriting and post-loan management data analysis, output policy decisions based on it, actively monitor results, and effectively iterate the policies</li><li>Conduct user segmentation, pricing sensitivity check &amp; risk-based pricing on consumer lending products</li><li>Analyze user behaviors in the ecosystem, do problem-solving, and provide proposals to the management on risk control, UX improvement, and onboarding channel management&nbsp;</li><li>Prepare Risk reporting, position reporting, monitoring dashboards, and present recommendations</li><li>Support credit business growth by defining &amp; analyzing possible risks and consequences, and designing processes to eliminate and mitigate</li><li>Work closely with other business stakeholders and share insights of risk management</li>"},{"text":"What You Will Need","content":"<li>Have experience in lending business at least 2 years</li><li>Have experience in conducted detailed risk assessments&nbsp;</li><li>Have experience in analyzing documents, statistics, reports and trends of both internal &amp; external data</li><li>Have good communication and adaptive skills, be responsible and discipline in data providing</li><li>Have knowledge and experience of working with SQL, if proficient will be a big advantage. Python is a bonus item</li><li>Independent, organized, highly analytical and proactive</li>"}],"text":"Risk Strategy - Consumer Lending #9919","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/e33b73ae-63e2-4e9c-aff9-03e9127e4e4e","applyUrl":"https://jobs.lever.co/GoToGroup/e33b73ae-63e2-4e9c-aff9-03e9127e4e4e/apply"},{"additionalPlain":"About The Team\n\nStep into our dynamic team– a powerhouse of talent, crafting strategies that drive impact at scale in the nation's booming digital economy. Imagine: each of us is like a unique puzzle piece, coming together to form a cohesive vision for success. From strategy to execution, we're a well-oiled machine, working seamlessly to empower Gojek’s nationwide sales team.\nBut it's not just about work. We believe in fostering joy and connection, whether over a meal or through shared laughter. Working with us means guidance and support, while maintaining your independence and flexibility. Together, we'll navigate challenges and seize opportunities, all while empowering Indonesians to face the digital revolution forward.\nReady to join a team shaping the future of sales strategy and be the drivers of change in Indonesia's digital landscape? Join us and be part of something extraordinary!\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Step into our dynamic team– a powerhouse of talent, crafting strategies that drive impact at scale in the nation's booming digital economy. Imagine: each of us is like a unique puzzle piece, coming together to form a cohesive vision for success. From strategy to execution, we're a well-oiled machine, working seamlessly to empower Gojek’s nationwide sales team.</span></div><div><span style=\"font-size: 10pt\">But it's not just about work. We believe in fostering joy and connection, whether over a meal or through shared laughter. Working with us means guidance and support, while maintaining your independence and flexibility. Together, we'll navigate challenges and seize opportunities, all while empowering Indonesians to face the digital revolution forward.</span></div><div><span style=\"font-size: 10pt\">Ready to join a team shaping the future of sales strategy and be the drivers of change in Indonesia's digital landscape? Join us and be part of something extraordinary!</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710312757111,"descriptionPlain":"About The Role\n\nJoin our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","description":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">Join our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","id":"a5f5f567-0e95-4763-8c50-c4dcfb0b757e","lists":[{"text":"What You Will Do","content":"<li>Develop comprehensive sales strategies and oversee the end-to-end planning process to ensure optimal results while maintaining efficiency levels.</li><li>Define Objectives and Key Results (OKRs), metrics, and targets for the sales team to drive performance and success.</li><li>Design and implement incentive schemes, conduct end-to-end calculations, and perform industry benchmarking to enhance sales effectiveness.</li><li>Lead the go-to-market sales strategy for special projects and new products, aligning with partner needs and market demands.</li><li>Utilize data-driven analysis to derive actionable insights, fostering accelerated growth and increased operational efficiency.</li><li>Collaborate cross-functionally with product, marketing, sales, and other stakeholders to align strategies derived from data-driven analysis and execute plans effectively.</li><li>Represent the Sales Strategy team in industry events, trainings, and workshops as necessary&nbsp;Provide regular and ad-hoc impact reports and analyses to senior management, offering insights into performance and growth opportunities for the business.</li>"},{"text":"What You Will Need","content":"<li>4 years+ relevant working experience in strategy,&nbsp; business development, management consulting or other related roles that require strong analytical skills, problem-solving, and business acumen</li><li>A structured and analytical thinking process to develop frameworks, project charters and prioritization</li><li>Strong business sense and ability to articulate complex analysis results to a wide range of audiences and translate the results to actionable business insights</li><li>Proficiency in basic modeling - market sizing, business projection, scenario analysis.</li><li>Have good presentation skills - esp. the ability to present during problem solving session with other stakeholders (working-level or leadership)&nbsp;</li><li>Solid track record of stakeholder management</li><li>Proficiency in SQL/query is preferred, but not mandatory (still essential in executing the role, and will need to learn basic SQL on-the-job)</li>"}],"text":"Sales Strategy Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">Join our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.</span></div>","descriptionBodyPlain":"About The Role\n\nJoin our team and make a real impact. As the Sales Strategy and Planning Manager, you'll play a pivotal role in shaping the foundation and strategy of our sales team. Collaborating closely with sales, business, product, and marketing teams, you'll devise winning strategies that drive maximum value for the company. Your efforts will directly contribute to scaling up our business and propelling it to new heights. From structuring a high-performing sales team to crafting sharp, effective strategies, you'll have the opportunity to lead transformative initiatives and drive tangible results.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a5f5f567-0e95-4763-8c50-c4dcfb0b757e","applyUrl":"https://jobs.lever.co/GoToGroup/a5f5f567-0e95-4763-8c50-c4dcfb0b757e/apply"},{"additionalPlain":"The Sales Excellence team is an integral part of the Greater Sales Team, and based in HQ Office Jakarta, Indonesia. We work closely with both the Sales Strategy, product, function teams as well as the Sales team in the regions. Our primary focus is to ensure that the company’s KRs are achieved by providing the support to the sales and sales support teams needed to excel in their job, which could vary from solving merchant’s onboarding issues, improving business processes, to supporting GoFood campaigns.\n\nIn the past, our team has created the automated consolidated performance monitoring dashboard from scratch that became the compass of the sales team.When our scope is broadened to include Enterprise sales team, we not only replicate the performance dashboard but also revamped the data structure to make consistent with the rest of the sales team. Going forward, we expect to do more analytical projects that could help guide the sales team and improve their efficiency.\n\nIn our spare time, you can find us binge watching all kinds of shows on Netflix (from Documentaries all the way to K Dramas!). On top of that, we are a tight-knit, fun-loving, collaborative and hardworking individuals who enjoy each other's company, especially over good food and good conversation :) (because who doesn’t?)\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">The Sales Excellence team is an integral part of the Greater Sales Team, and based in HQ Office Jakarta, Indonesia. We work closely with both the Sales Strategy, product, function teams as well as the Sales team in the regions. Our primary focus is to ensure that the company’s KRs are achieved by providing the support to the sales and sales support teams needed to excel in their job, which could vary from solving merchant’s onboarding issues, improving business processes, to supporting GoFood <a href=\"http://campaigns.In\">campaigns.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://campaigns.In\">In</a> the past, our team has created the automated consolidated performance monitoring dashboard from scratch that became the compass of the sales <a href=\"http://team.When\">team.When</a> our scope is broadened to include Enterprise sales team, we not only replicate the performance dashboard but also revamped the data structure to make consistent with the rest of the sales team. Going forward, we expect to do more analytical projects that could help guide the sales team and improve their <a href=\"http://efficiency.In\">efficiency.</a></span></div><div><br></div><div><span style=\"font-size: 10pt\"><a href=\"http://efficiency.In\">In</a> our spare time, you can find us binge watching all kinds of shows on Netflix (from Documentaries all the way to K Dramas!). On top of that, we are a tight-knit, fun-loving, collaborative and hardworking individuals who enjoy each other's company, especially over good food and good conversation :) (because who doesn’t?)</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714365620212,"descriptionPlain":"As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team \n","description":"<div><span style=\"font-size: 10pt\">As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team </span></div>","id":"f39be622-e287-41df-bcb2-7389478a1be4","lists":[{"text":"What you will do","content":"<li>Oversee the performance tracking and monitoring of the whole Enterprise Sales Team</li><li>Ensure that the Enterprise Sales team has all the data they need to achieve their target for all KRs</li><li>Act as a consultant and discuss with the EKAMs on the business needs/challenges that their merchants are facing</li><li>Provide data and data driven insights to EKAMs to help address said challenges</li><li>Assist in performing periodical business analysis, tailored to each merchant based on their business needs</li><li>Assist in the daily tasks and smooth operations of Enterprise Sales Support</li><li>Liaise with HO team for merchant x sales account management, target, tracker, etc</li><li>Liaise with other teams (e.g. BI, Salestech) when there is new KRs / data point that needs to be analysed</li><div><br></div>"},{"text":"What you will need","content":"<li>At least 2 years of relevant experience in data analytics&nbsp;</li><li>Good business acumen, able to develop analysis with good storyline and flow</li><li>Proficient in SQL, Google BigQuery and the reporting thereof is an advantage</li><li>Proficient in handling large amount of data using tools/softwares such as google sheet, metabase and datastudio</li><li>Great communication and understanding skill, able to explain technical terms in simple, understandable manner</li><li>Experienced in working with multiple stakeholders from different backgrounds with good level of empathy</li><li>High interest and eagerness to analyse different parts of businesses to help achieve growth</li><li>Clear understanding of Gojek services and the tech industry</li><div><br></div>"}],"text":"Sales Support Senior Associate, Enterprise","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team </span></div>","descriptionBodyPlain":"As our Enterprise Sales Senior Associate, you will be the brainstorming partner for our Enterprise Key Account Managers (EKAM), collating data, producing insights while helping to formulate the next action steps for the Enterprise merchants so they can devise the best strategy to win the market all the while growing their business even better with us. You will also be working with data completeness, timeliness and accuracy, ensuring data integrity between Enterprise Sales Team and HQ Sales Team \n","hostedUrl":"https://jobs.lever.co/GoToGroup/f39be622-e287-41df-bcb2-7389478a1be4","applyUrl":"https://jobs.lever.co/GoToGroup/f39be622-e287-41df-bcb2-7389478a1be4/apply"},{"additionalPlain":"About Us\n\n Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About Us</b></div><div><br></div><div><span style=\"font-size: 16px\">&nbsp;Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.</span></div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1698657930091,"descriptionPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","id":"376aefd9-6d6c-4e57-8040-a3b0dd416d26","lists":[{"text":"What You Will Do","content":"<li>Conduct feature and exploratory tests on Mobile apps (Android, iOS)and API. Engage in continuous automation throughout agile development iterations to ensure zero defects</li><li>Work closely with the cross-functional product team, including PMs, Designers, Developers, and QA managers right from the inception of features</li><li>Create and execute the test cases for features with minimum guidance and maintain and add new cases in automation frameworks on either UI/API test level and reduce manual efforts during regression testing&nbsp;</li><li>Participate in iteration planning, providing input on required testing tasks, processes, and associated effort for the selected user stories</li><li>Design, develop and execute test automation for relevant areas of ownership independently</li><li>Contribute to automation framework development (Libraries / new features / extensions)</li><li>Provide automated test coverage for corner cases, revenue, impact, usability, backend services, and exploratory testing</li><li>As a fast learner and team player, you’re comfortable teaching yourself new skills quickly and can thrive in a complex and fast-paced environment while making strong technical individual contributions</li>"},{"text":"What You Will Need","content":"<li>2 to 4 years of experience in the field of professional testing</li><li>Good prior experience in Manual &amp; Automation test methodologies</li><li>Sound knowledge of testing/automating the tests at different layers of the application</li><li>Comfortable writing clean code in one programming language (Java/Kotlin is a plus)</li><li>Good Understanding of Tools like Selenium, Appium, Cucumber BDD, TestNG Maven/Gradle, and CI/CD tools like Jenkins, GitLab, etc</li><li>Should have exposure to tools like Postman, Charles Proxy/MITM&nbsp;</li><li>Working knowledge of Git</li><li>Experience in developing test automation framework from scratch is a big plus</li>"}],"text":"SDET - Automation Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/376aefd9-6d6c-4e57-8040-a3b0dd416d26","applyUrl":"https://jobs.lever.co/GoToGroup/376aefd9-6d6c-4e57-8040-a3b0dd416d26/apply"},{"additionalPlain":"About our Team\n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About our Team</b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1700733541559,"descriptionPlain":"About the Role:\n\nWe are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,  you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.\n\n\n","description":"<div><b>About the Role:</b></div><div><br></div><div>We are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,&nbsp; you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.</div><div><br></div><div><br></div>","id":"472ae629-87cb-4f8c-bb69-eae35cf3751e","lists":[{"text":"What you’ll do","content":"<li>Develop and implement test automation tools and frameworks to ensure continuous testing of product features</li><li>Collaborate with product managers and engineers to understand requirements, document test cases, and define rollout/release strategies</li><li>Perform performance, load, and scalability testing for new features and product releases.</li><li>Debug and diagnose defects uncovered during testing to determine root causes. Log bugs accurately and communicate issues clearly to engineering teams</li><li>Monitor systems in production to identify and troubleshoot defects or anomalous behavior.</li><li>Stay up-to-date with new testing methodologies and tools</li><div><br></div><div><br></div>"},{"text":"What you’ll need","content":"<li>5+ years experience in a QA, SDET or DevX role, with expertise in test automation</li><li>Proficiency with one or more programming languages like Java, Go, Kotlin, Python</li><li>Experience testing complex distributed systems and microservices architectures</li><li>Understanding of SQL and NoSQL databases</li><li>Familiarity with technologies like Kafka, Docker, Kubernetes</li><li>Knowledge of financial systems, mobile apps, or SaaS products is a plus</li><li>Excellent verbal and written communication skills</li>"}],"text":"SDET - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role:</b></div><div><br></div><div>We are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,&nbsp; you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role:\n\nWe are looking for an experienced Senior SDET Engineer to join our engineering team at GoTo Financial. You will be responsible for establishing testing standards and strategies to ensure product quality and performance. As a senior engineer,  you will work on our flagship products across GoTo, including Tokopedia and Gojek, ensuring our millions of users get the best experience.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/472ae629-87cb-4f8c-bb69-eae35cf3751e","applyUrl":"https://jobs.lever.co/GoToGroup/472ae629-87cb-4f8c-bb69-eae35cf3751e/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1716277072995,"descriptionPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"0169bd4d-f352-4162-8e8e-2c09df5b8db4","lists":[{"text":"What Will You Do","content":"<li>Attend daily standup meetings, do sprint planning/backlog reviews, and communicate project/development status to internal and external teams in a timely fashion;</li><li>Analyze and estimate product features defined by the Product Manager/Product Owner from a testing point of view;</li><li>Build, contribute, and maintain automated test suites and frameworks on Apps and API utilizing Java/JavaScript or similar.</li><li>Ability to understand product feature requirements and test them effectively.</li><li>Ability to work on Functional, automation testing for Web, APIs, and mobile apps both Android and iOS.</li><li>Work with Business, Product, and Dev teams in close coordination.</li><li>Well-versed with Agile methodology, SDLC, and STLC.</li>"},{"text":"What You Will Need","content":"<li>Preferably 2-5 years of experience in professional testing in /API/Web using RestAssured with Java, Appium (Android &amp; iOS) Selenium, or similar frameworks where the experience in service virtualization / WebServices-API testing through POSTMAN or any similar tool.</li><li>Basic knowledge of Java, test Parallelisation (API and App), cross-browser coverage, Selenium with Java, and Reporting Plugins i.e. Allure, and Extent.</li><li>Hands-on experience with Rest Assured, Selenium/Appium, IntelliJ, and TestNG or similar frameworks.</li><li>Agile / Scrum / Kanban experience Soft Skills and ability to work and communicate with cross-functional teams.</li><li>Experience in CI/CT using Jenkins or similar continuous integration, release, and change management tools i.e. GIT or similar GitLab.</li><li>Good analytical, problem solving and debugging skills</li>"}],"text":"SDET Engineer - Consumer Experience (Bangalore)","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/0169bd4d-f352-4162-8e8e-2c09df5b8db4","applyUrl":"https://jobs.lever.co/GoToGroup/0169bd4d-f352-4162-8e8e-2c09df5b8db4/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716293425375,"descriptionPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"7b320e00-3745-4478-8097-93405566819d","lists":[{"text":"What Will You Do","content":"<li>Attend daily standup meetings, do sprint planning/backlog reviews, and communicate project/development status to internal and external teams in a timely fashion;</li><li>Analyze and estimate product features defined by the Product Manager/Product Owner from a testing point of view;</li><li>Build, contribute, and maintain automated test suites and frameworks on Apps and API utilizing Java/JavaScript or similar.</li><li>Ability to understand product feature requirements and test them effectively.</li><li>Ability to work on Functional, automation testing for Web, APIs, and mobile apps both Android and iOS.</li><li>Work with Business, Product, and Dev teams in close coordination.</li><li>Well-versed with Agile methodology, SDLC, and STLC.</li>"},{"text":"What You Will Need","content":"<li>Preferably 2-5 years of experience in professional testing in /API/Web using RestAssured with Java, Appium (Android &amp; iOS) Selenium, or similar frameworks where the experience in service virtualization / WebServices-API testing through POSTMAN or any similar tool.</li><li>Basic knowledge of Java, test Parallelisation (API and App), cross-browser coverage, Selenium with Java, and Reporting Plugins i.e. Allure, and Extent.</li><li>Hands-on experience with Rest Assured, Selenium/Appium, IntelliJ, and TestNG or similar frameworks.</li><li>Agile / Scrum / Kanban experience Soft Skills and ability to work and communicate with cross-functional teams.</li><li>Experience in CI/CT using Jenkins or similar continuous integration, release, and change management tools i.e. GIT or similar GitLab.</li><li>Good analytical, problem solving and debugging skills</li>"}],"text":"SDET Engineer - Consumer Experience (Jakarta)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"About the Role\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology. We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7b320e00-3745-4478-8097-93405566819d","applyUrl":"https://jobs.lever.co/GoToGroup/7b320e00-3745-4478-8097-93405566819d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716279174071,"descriptionPlain":"\nJoin our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.\n","description":"<div><br></div><div><span style=\"font-size: 16px\">Join our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.</span></div>","id":"f1204bec-20bc-447e-b01c-74ac912b16da","lists":[{"text":"What You Will Do","content":"<li>Be the expert in using data to measure and analyze business performance.</li><li>Explore business issues/opportunities, uncover insights and/or identify targeted areas for business growth.</li><li>Lead new data analytics capability rollouts and/or data-led initiatives throughout organization.</li><li>Monitor key metrics and alert the business on potential issues.</li><li>Analyze operational efficiency and build business models to guide decision-making.</li><li>Design market/business intelligence reports and performance measurement dashboards to share with senior management.</li><li>Able to analyze business performance following the analysis framework.</li><li>Able to create reports/ dashboards individually.</li><li>Collaborates with business stakeholders to gather requirements and deliver actionable insights.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's or Master's degree in Computer Science, Statistics, Business Administration, or a related field.</li><li>2-5 years of experience in a BI or analytics role.</li><li>Proficiency in SQL and database management systems like MySQL, SQL Server, or Oracle.</li><li>Advanced knowledge of data modeling and data warehousing concepts.</li><li>Strong understanding of business processes and the ability to translate business requirements into technical solutions.</li><li>Familiarity with cloud platforms such as AWS, Azure, or Google Cloud Platform.</li><li>Experience with BI reporting tools and dashboard development.</li><li>Proven ability to work with cross-functional teams and manage stakeholders.</li><li>Familiarity with business operations in the field.</li>"}],"text":"Senior Business Intelligence","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><br></div><div><span style=\"font-size: 16px;\">Join our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.</span></div>","descriptionBodyPlain":"\nJoin our team as a Senior Business Intelligence and be at the forefront of driving business success through data-driven insights. You'll lead the rollout of new analytics capabilities, monitor key metrics, and collaborate with stakeholders to uncover growth opportunities. Analyze operational efficiency, build business models, and design market intelligence reports and dashboards for senior management. With proficiency in analysis frameworks, create individual reports and dashboards to deliver actionable insights.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f1204bec-20bc-447e-b01c-74ac912b16da","applyUrl":"https://jobs.lever.co/GoToGroup/f1204bec-20bc-447e-b01c-74ac912b16da/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1704858182467,"description":"","descriptionPlain":"","id":"acc8cca4-0f98-4c31-8d24-76446d0ce0c5","lists":[{"text":"What You Will Do?","content":"<li>Create business impact by working on strategic initiatives in Gojek focussed on analysis and experimentation.&nbsp;</li><li>Build &amp; maintain dashboards for tracking business performance and product adoption.</li><li>Deliver insight, analysis using statistical tools, data visualization, and business use case to product and business team.</li><li>Partner closely with Product Managers and Business teams to help them make decisions.</li><li>Handle Gojek Product and Business team in identifying product or business opportunities and support in product delivery such as experimentation.</li><li>Automate data extraction by creating denormalized tables or data mart based on business or product requirement.</li>"},{"text":"What You Will Need?","content":"<li>At least 3 years of working experience with basic statistics or product analytics. Furthermore with a strong business sense and data-driven role background</li><li>Expert in SQL , data visualization and dashboarding .&nbsp;</li><li>Comfortable working both independently with minimal guidance and in a team setting</li><li>Ability to use critical thinking daily to manage daily tasks while being goal-oriented</li><li>Ability to transform an ambiguous business or product problem into a well-scoped and impactful analysis; able to design simple experiments</li><li>Exposure to visualization and dashboarding tools like&nbsp; &nbsp;Tableau, Metabase, Google Data Studio, Clevertap, Python, etc is a plus.</li>"},{"text":"About The Team","content":"<li>Our Data Analyst team currently consists of 40+ people based in India and Indonesia who run Southeast Asia’s leading Gojek business. We oversee all things data and work to become a thought partner for our Business Users, Product Team, and Decision Makers. It’s our job to ensure that they have a structural approach to data-driven problem-solving. Right now, our focus revolves: how to make customers, drivers, and merchants happy and delighted. We have so far created millions of dollar impact across different journeys of customers, drivers and merchants</li><div><br></div><li>We work with the PMs hand-in-glove - be it constructing a new machine learning solution or brainstorming on a problem like how do we reduce the wait time for the drive, how do we improve assortment, should we treat convenience seeking customer differently from value seeking customer etc</li><div><br></div><li>As a team, we’re concerned not only with the growth of the company, but each other’s personal and professional growths, too. Along with us coming from diverse backgrounds, we often have fun sessions to talk about everything and anything from data information to our current movie list.</li><div><br></div>"}],"text":"Senior Data Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/acc8cca4-0f98-4c31-8d24-76446d0ce0c5","applyUrl":"https://jobs.lever.co/GoToGroup/acc8cca4-0f98-4c31-8d24-76446d0ce0c5/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1707296213776,"description":"","descriptionPlain":"","id":"f680021a-b5cc-43ea-a048-255827353a92","lists":[{"text":"What You Will Do?","content":"<li>Create business impact by working on strategic initiatives in Gojek focussed on analysis and experimentation.&nbsp;</li><li>Build &amp; maintain dashboards for tracking business performance and product adoption.</li><li>Deliver insight, analysis using statistical tools, data visualization, and business use case to product and business team.</li><li>Partner closely with Product Managers and Business teams to help them make decisions.</li><li>Handle Gojek Product and Business team in identifying product or business opportunities and support in product delivery such as experimentation.</li><li>Automate data extraction by creating denormalized tables or data mart based on business or product requirement.</li>"},{"text":"What You Will Need?","content":"<li>At least 3 years of working experience with basic statistics or product analytics. Furthermore with a strong business sense and data-driven role background</li><li>Expert in SQL , data visualization and dashboarding .&nbsp;</li><li>Comfortable working both independently with minimal guidance and in a team setting</li><li>Ability to use critical thinking daily to manage daily tasks while being goal-oriented</li><li>Ability to transform an ambiguous business or product problem into a well-scoped and impactful analysis; able to design simple experiments</li><li>Exposure to visualization and dashboarding tools like&nbsp; &nbsp;Tableau, Metabase, Google Data Studio, Clevertap, Python, etc is a plus.</li>"},{"text":"About The Team","content":"<li>Our Data Analyst team currently consists of 40+ people based in India and Indonesia who run Southeast Asia’s leading Gojek business. We oversee all things data and work to become a thought partner for our Business Users, Product Team, and Decision Makers. It’s our job to ensure that they have a structural approach to data-driven problem-solving. Right now, our focus revolves: how to make customers, drivers, and merchants happy and delighted. We have so far created millions of dollar impact across different journeys of customers, drivers and merchants</li><div><br></div><li>We work with the PMs hand-in-glove - be it constructing a new machine learning solution or brainstorming on a problem like how do we reduce the wait time for the drive, how do we improve assortment, should we treat convenience seeking customer differently from value seeking customer etc</li><div><br></div><li>As a team, we’re concerned not only with the growth of the company, but each other’s personal and professional growths, too. Along with us coming from diverse backgrounds, we often have fun sessions to talk about everything and anything from data information to our current movie list.</li><div><br></div>"}],"text":"Senior Data Analyst - India","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/f680021a-b5cc-43ea-a048-255827353a92","applyUrl":"https://jobs.lever.co/GoToGroup/f680021a-b5cc-43ea-a048-255827353a92/apply"},{"additional":"","additionalPlain":"","categories":{"commitment":"Permanent","department":"HoldCo - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716264950378,"description":"","descriptionPlain":"","id":"73e71b86-d53f-4841-92ec-4bd09a0ef479","lists":[{"text":"What You Will Do","content":"<li>explore existing and new data sources and facilitate the integration to the Data Warehouse.</li><li>Design and develop Data Quality Framework across Data Platform.</li><li>Design, implement Data Model for enterprise data warehouse.</li><li>Classifying data based Data Governance policy and Data Access Framework.</li><li>Develop data definition and metrics and maintain the consistency across the Data team.</li><li>Modify existing structured and unstructured data integration solutions for rapidly evolving business needs..</li><li>Collaborate with a cross-functional team to resolve data quality and operational issues, as&nbsp; well as delivering solutions to meet business needs.</li><li>Create conceptual models and data flow diagrams.</li><li>Participate with end users to gather requirements and consult on data integration solutions.</li><li>Receive and adhere to project delivery deadlines.&nbsp;&nbsp;</li><li>Migrate code across environments and leverage a source code management system.</li><li>Design, build, and optimize data pipelines, ETL processes, and data infrastructure in the field.</li><li>Develop and maintain proper documentation for data pipeline and service.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's or Master's degree in Computer Science, Engineering, Information Systems, or related fields.</li><li>2-5 years of experience in data engineering, software engineering, or a similar role.</li><li>Proficiency in programming languages such as Python, Java, or Scala.</li><li>Solid understanding of SQL, database management systems, and data modeling concepts.</li><li>Experience with big data technologies such as Hadoop, Spark, or Kafka.</li><li>Hands-on experience with cloud platforms such as AWS, Azure, or Google Cloud Platform.</li><li>Strong problem-solving skills and attention to detail.</li><li>Ability to design and implement scalable data pipelines and ETL processes.</li><li>Excellent communication and collaboration skills to work effectively with cross-functional teams.</li><li>Deeper understanding of data engineering concept, programming language, and big data technology.</li>"}],"text":"Senior Data Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/73e71b86-d53f-4841-92ec-4bd09a0ef479","applyUrl":"https://jobs.lever.co/GoToGroup/73e71b86-d53f-4841-92ec-4bd09a0ef479/apply"},{"additionalPlain":"About The Team\n\nOur GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. \n\nOur service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.\n\nAs a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Our service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.</span></div><div><br></div><div><span style=\"font-size: 10pt\">As a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710229562529,"descriptionPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nAs a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.\n","description":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div><span style=\"font-size: 10pt\">As a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.</span></div>","id":"10dbc666-80f8-4250-85ee-59fa92d056aa","lists":[{"text":"What You Will Do","content":"<li>Build and maintain data products for the data engineering platform for the data infrastructure and streaming services.</li><li>Write code that is clear, concise, performant, tested and easily understood by others</li><li>Containerization and deployment of microservices on Kubernetes</li><li>Design and deploy the data products on the Google Cloud Platform</li><li>Collaborate with the data team and business teams to understand their requirements</li><li>Auto-scaling and monitoring performance of the streaming Infrastructure and applications by using Prometheus and Grafana or similar tools</li>"},{"text":"What You Will Need","content":"<li>A minimum of 4+ years of experience in a software engineer role, coupled with a graduate degree in a relevant field such as Computer Science.</li><li>Hands-on experience in writing code in either Java or Golang.</li><li>Basic understanding of containerization, including Docker or Kubernetes.</li><li>Good understanding of database structures and data warehousing principles.</li><li>Strong analytical skills, the ability to work effectively in cross-functional teams, meticulous attention to detail, self-motivation, adaptability, and a strong sense of ownership</li><li>Strong interpersonal and communication skills</li>"}],"text":"Senior Data Engineer (Data Platform) - Payments Data Products & Infra","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div><span style=\"font-size: 10pt;\">As a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.</span></div>","descriptionBodyPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As a Backend Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nAs a member of the Data Platform team, you will be at the epicenter of an amazing company, experiencing extreme growth and solving the challenges that come with scaling rapidly. You will work closely with the business teams and other Data teams to make data better accessible and reliable while leveraging the largest-scale data processing technologies in the world. In order to succeed in this role, you should have a product mindset along with a strong vision of building data products for a massively scalable data engineering platform.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/10dbc666-80f8-4250-85ee-59fa92d056aa","applyUrl":"https://jobs.lever.co/GoToGroup/10dbc666-80f8-4250-85ee-59fa92d056aa/apply"},{"additionalPlain":"About The Team\nThe GTF Data Science team builds critical data science/ML models to make GoPay a safe, trusted and fun way to do payments. Our team members come from diverse backgrounds, and use mathematics, statistics, machine learning, deep learning to solve some of the toughest business problems in GoPay. We are passionate about data science, innovation, and their impacts to the business\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><span style=\"font-size: 10pt\">The GTF Data Science team builds critical data science/ML models to make GoPay a safe, trusted and fun way to do payments. Our team members come from diverse backgrounds, and use mathematics, statistics, machine learning, deep learning to solve some of the toughest business problems in GoPay. We are passionate about data science, innovation, and their impacts to the business</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1684915963454,"descriptionPlain":"About the Role\nAs a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.\n","description":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt\">As a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.</span></div>","id":"a539cdc1-109f-48e8-9b24-1a831b735f01","lists":[{"text":"What Will You Do","content":"<li>Combine technical and business knowledge to develop innovative data science solutions</li><li>Rapidly prototype solutions and contribute to product and feature discussions</li><li>Analyze large volume of data and generate actionable insights</li><li>Experiment with different ML techniques and research the latest technologies (e.g. LLM) to determine the best approach</li><li>Own end-to-end solutioning, from formulating the technical problem to deployment of the solution as part of a cross-functional team of scientists, analysts, product managers, and engineers</li>"},{"text":"What You Will Need","content":"<li>6+ years of experience developing ML solutions, 2-3 years of <b>fraud risk experience in account takeover, scam, and abuse</b></li><li>Strong quantitative and problem-solving skills</li><li>Solid understanding of Statistics/ML fundamentals and experience in Python, R</li><li>Communication skills to engage with business stakeholders to understand their needs and effectively communicate the results of the analytical solutions</li><li>Ability to write clear and concise technical documentation</li><li>Ph.D. or Masters in a quantitative discipline (good to have - Experienced - Bachelor)</li>"}],"text":"Senior Data Scientist","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><span style=\"font-size: 10pt;\">As a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.</span></div>","descriptionBodyPlain":"About the Role\nAs a senior data scientist in the GTF Risk Data team, you will develop data science models to protect GoPay and its customers. You will have the opportunity to work with large-scale data to derive new intelligence and use cutting-edge data science techniques. You will partner with Risk, product, and engineering stakeholders to identify and solve some of the most impactful and stimulating business problems in the payments space. You will work in a fast-paced environment with direct impacts to the business.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a539cdc1-109f-48e8-9b24-1a831b735f01","applyUrl":"https://jobs.lever.co/GoToGroup/a539cdc1-109f-48e8-9b24-1a831b735f01/apply"},{"additionalPlain":"About The Team:\nThe GoPay Data Science team builds critical ML components/models that go into the engineering systems, making GoPay a safe, trusted, and fun way to make payments. Our team members come from varied backgrounds and bring with them a wide set of skills (mathematics, statistics, machine learning, deep learning, etc.), which we apply to some of the toughest business problems at GoPay. We are enthusiastic about both data science techniques and methods, as well as the business impact of our models, and have numerous internal forums where sharing, discussions, and presentations by team members occur.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div>About The Team:</div><div>The GoPay Data Science team builds critical ML components/models that go into the engineering systems, making GoPay a safe, trusted, and fun way to make payments. Our team members come from varied backgrounds and bring with them a wide set of skills (mathematics, statistics, machine learning, deep learning, etc.), which we apply to some of the toughest business problems at GoPay. We are enthusiastic about both data science techniques and methods, as well as the business impact of our models, and have numerous internal forums where sharing, discussions, and presentations by team members occur.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Data, Research & Insights","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1713498936579,"descriptionPlain":"As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.\n","description":"<div><span style=\"font-size: 10pt\">As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.</span></div>","id":"cc1c5265-723f-48c1-a04d-b07cc49b3e42","lists":[{"text":"What you will do?","content":"<li>Work with data like images, videos, speech and real-time sensor data, etc.</li><li>Design, train, optimize, and deploy deep learning/computer vision models.</li><li>Develop unit tests, documentation for features, and evaluate and benchmark model performance and quality.</li><li>Communicate effectively between the business team and the engineering team to gather and implement project requirements.</li><li>Own the end-to-end process, from defining the technical problem to deploying the solution in collaboration with engineers.</li><li>Participate in internal and external conferences and workshops.</li>"},{"text":"What you will need?","content":"<li>5+ years of experience in developing Deep Learning/Computer Vision and classic ML models for practical applications.</li><li>Familiar with deep learning frameworks, such as PyTorch, Python, C++, NCNN, etc.</li><li>Have practical knowledge of image/video processing techniques and deep learning in the computer vision domain.</li><li>Proven track record in top-tier open data science/deep learning competitions and/or contributions to deep learning/data science frameworks.</li><li>Familiarity with working knowledge in Android/iOS or GCP.</li><li>Strong communication skills to understand business stakeholders' needs and to effectively convey the results of analytical solutions.</li><li>Ability to write clear and concise technical documentation.</li>"}],"text":"Senior Data Scientist - Computer Vision - KYC","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.</span></div>","descriptionBodyPlain":"As a Data Scientist specializing in Computer Vision, you will be solving a variety of practical deep learning and computer vision tasks arising from various business units within GoTo Financial. You should be able to bring a new level of Deep Learning/Computer Vision capabilities to the GoPay data science cloud and mobile platform.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/cc1c5265-723f-48c1-a04d-b07cc49b3e42","applyUrl":"https://jobs.lever.co/GoToGroup/cc1c5265-723f-48c1-a04d-b07cc49b3e42/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705919854389,"descriptionPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","description":"<div><span style=\"font-size: 10pt\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","id":"33ecd052-8ff7-45aa-b712-d1060cef1c8d","lists":[{"text":"What You Will Do","content":"<li>Understand business concerns and formulate them as technical problems that can be solved using data and math/stats/ML</li><li>Work with Product managers, Machine Learning Engineers, and Business Users to build, deploy, and scale Data Science solutions on Driver Experience and Earning related initiatives at Gojek that impact the driver’s livelihood</li><li>Use your experience in Data Science, Machine Learning, Software Engineering, distributed systems to rapidly prototype and deploy the systems to production</li><li>Work with Business teams to continuously refine, improve the systems to cater to ever-changing Gojek need</li><li>sAnalyze large volume data and generate insights that will be actionable</li><li>Design and conduct experiments to measure the impact of ML solutions or product features launched by Gojek Marketplace Team (Pricing and Matchmaking) </li>"},{"text":"What You Will Need","content":"<li>Bachelor's/Master’s Degree in Computer Science, Statistics, Operation research or other quantitative fields, with 3-5 years of relevant experience</li><li>Hands-on experience in Statistics/ML fundamentals and demonstrated experience in <b>Python</b>, SQL, and basic visualization tools</li><li>Solid knowledge of Data Science and Machine Learning fundamentals, with proven experience to formulate Data Science solutions to business problems</li><li>Ability to write clear and concise technical documentation</li><li>Experience in taking Data Science models to production&nbsp;</li><li>Expertise to conduct analysis independently for a business problem through data manipulation, formulation of hypotheses, design and statistical analysis of experiments to test them</li>"},{"text":"Knowing the Following Would be a Bonus","content":"<li>Preferably, has domain experience in Machine Learning Engineering&nbsp;</li><li>Experience in Operation Research&nbsp;Experience in remote development using cloud platforms (GCS, AWS, Azure) and data processing frameworks/ schedulers (Flink, Airflow)&nbsp;</li><li>Experience in software engineering workflow (version control using Git, CI/CD)</li><li>Prior experience with dbt is a plus</li>"}],"text":"Senior Data Scientist - Marketplace","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","descriptionBodyPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/33ecd052-8ff7-45aa-b712-d1060cef1c8d","applyUrl":"https://jobs.lever.co/GoToGroup/33ecd052-8ff7-45aa-b712-d1060cef1c8d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1705993404249,"descriptionPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","description":"<div><span style=\"font-size: 10pt\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","id":"86673189-b5e2-4ace-b1a3-5ab20f14d84d","lists":[{"text":"What You Will Do","content":"<li>Understand business concerns and formulate them as technical problems that can be solved using data and math/stats/ML</li><li>Work with Product managers, Machine Learning Engineers, and Business Users to build, deploy, and scale Data Science solutions on Driver Experience and Earning related initiatives at Gojek that impact the driver’s livelihood</li><li>Use your experience in Data Science, Machine Learning, Software Engineering, distributed systems to rapidly prototype and deploy the systems to production</li><li>Work with Business teams to continuously refine, improve the systems to cater to ever-changing Gojek need</li><li>sAnalyze large volume data and generate insights that will be actionable</li><li>Design and conduct experiments to measure the impact of ML solutions or product features launched by Gojek Marketplace Team (Pricing and Matchmaking) </li>"},{"text":"What You Will Need","content":"<li>Bachelor's/Master’s Degree in Computer Science, Statistics, Operation research or other quantitative fields, with 3-5 years of relevant experience</li><li>Hands-on experience in Statistics/ML fundamentals and demonstrated experience in <b>Python</b>, SQL, and basic visualization tools</li><li>Solid knowledge of Data Science and Machine Learning fundamentals, with proven experience to formulate Data Science solutions to business problems</li><li>Ability to write clear and concise technical documentation</li><li>Experience in taking Data Science models to production&nbsp;</li><li>Expertise to conduct analysis independently for a business problem through data manipulation, formulation of hypotheses, design and statistical analysis of experiments to test them</li>"},{"text":"Knowing the Following Would be a Bonus","content":"<li>Preferably, has domain experience in Machine Learning Engineering&nbsp;</li><li>Experience in Operation Research&nbsp;Experience in remote development using cloud platforms (GCS, AWS, Azure) and data processing frameworks/ schedulers (Flink, Airflow)&nbsp;</li><li>Experience in software engineering workflow (version control using Git, CI/CD)</li><li>Prior experience with dbt is a plus</li>"}],"text":"Senior Data Scientist - Marketplace (India)","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","descriptionBodyPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/86673189-b5e2-4ace-b1a3-5ab20f14d84d","applyUrl":"https://jobs.lever.co/GoToGroup/86673189-b5e2-4ace-b1a3-5ab20f14d84d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1713852044349,"descriptionPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","description":"<div><span style=\"font-size: 10pt\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","id":"34f6146a-c482-407c-a31c-72ac9bb90a7c","lists":[{"text":"What You Will Do","content":"<li>Understand business concerns and formulate them as technical problems that can be solved using data and math/stats/ML</li><li>Work with Product managers, Machine Learning Engineers, and Business Users to build, deploy, and scale Data Science solutions on Driver Experience and Earning related initiatives at Gojek that impact the driver’s livelihood</li><li>Use your experience in Data Science, Machine Learning, Software Engineering, distributed systems to rapidly prototype and deploy the systems to production</li><li>Work with Business teams to continuously refine, improve the systems to cater to ever-changing Gojek need</li><li>Analyze large volume data and generate insights that will be actionable</li><li>Design and conduct experiments to measure the impact of ML solutions or product features launched by Gojek Marketplace Team (Pricing and Matchmaking) </li>"},{"text":"What You Will Need","content":"<li>Bachelor's/Master’s Degree in Computer Science, Statistics, Operation research or other quantitative fields, with 3-5 years of relevant experience</li><li>Hands-on experience in Statistics/ML fundamentals and demonstrated experience in <b>Python</b>, SQL, and basic visualization tools</li><li>Solid knowledge of Data Science and Machine Learning fundamentals, with proven experience to formulate Data Science solutions to business problems</li><li>Ability to write clear and concise technical documentation</li><li>Experience in taking Data Science models to production&nbsp;</li><li>Expertise to conduct analysis independently for a business problem through data manipulation, formulation of hypotheses, design and statistical analysis of experiments to test them</li>"},{"text":"Knowing the Following Would be a Bonus","content":"<li>Preferably, has domain experience in Machine Learning Engineering&nbsp;</li><li>Experience in Operation Research&nbsp;Experience in remote development using cloud platforms (GCS, AWS, Azure) and data processing frameworks/ schedulers (Flink, Airflow)&nbsp;</li><li>Experience in software engineering workflow (version control using Git, CI/CD)</li><li>Prior experience with dbt is a plus</li>"}],"text":"Senior Data Scientist - Marketplace (Singapore)","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.</span></div>","descriptionBodyPlain":"If you’re a data scientist at heart, this role is for you! because you’ll be mining insights from the sea of data, building data products, and designing experiments with the ability to see the real-time impact of your contribution. You’ll get to work with a talented troop of business leads, product managers and fellow data folks, and spend a majority of your time diving deep into some of the most challenging analytical problems in the Gojek Marketplace - the brain that powers all of Gojek’s services - including Matchmaking, and Pricing streams.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/34f6146a-c482-407c-a31c-72ac9bb90a7c","applyUrl":"https://jobs.lever.co/GoToGroup/34f6146a-c482-407c-a31c-72ac9bb90a7c/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707210044551,"descriptionPlain":"Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment.\n","description":"<div><span style=\"font-size: 10pt\">Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment.</span></div>","id":"c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69","lists":[{"text":"What You Will Do","content":"<li>Handle end-to-end data pipelines from heterogeneous input and output for analytical purposes</li><li>Become data architect by implementing appropriate data modeling concepts depending on data type and use cases</li><li>Responsible for managing a single version of truth and turning data into critical information and knowledge that can be used to make sound business decisions</li><li>Define clear and well-scoped requirements documents, including specs and workflows, that are easily understood by technical and non-technical audiences</li><li>Work with data stakeholders (Product Managers, Product/Business Analysts and Product Engineers) to ship data warehouse features and data product improvements</li><li>Contribute to the product strategy and execute on the prioritized roadmap</li><li>Mentoring &amp; develop junior team members in the team</li>"},{"text":"What You Will Need","content":"<li>Have at least 4 years experience in data environment as Data Warehouse Developer</li><li>Advanced in SQL and data warehouse concepts</li><li>Advanced in more than one programming language, especially Python or Go or Java</li><li>Have experiences working with batch / real-time data processing, data modeling concepts, and implementation</li><li>Have experiences working in GCP data environment such as GCS &amp; Bigquery</li><li>Analytical and data-driven, you love digging into the data to understand what’s happening and define &amp; measure success on every project</li><li>Good communication &amp; interpersonal skills</li>"}],"text":"Senior Data Warehouse Engineer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment.</span></div>","descriptionBodyPlain":"Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69","applyUrl":"https://jobs.lever.co/GoToGroup/c61882d6-edcf-4b1f-bda3-8b3c5e3c3a69/apply"},{"additionalPlain":"About The Team\n\nOur Data Warehouse team is based in Jakarta & Bangalore. Working alongside stakeholders, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions. This includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.\n\nOur team works hard but plays hard, too. We mean the latter in a literal sense, because we're a team full of musicians! We have 2 pianists, 1 guitarist, 1 drummer, more than 2 male singers, 1 female singer, 1 Rockstar, and 1 dangdut singer (yes, you read it right ). So, you best believe that we have several karaoke nights together! Even if you aren't musically inclined, no fear. We love bonding over card games (Werewolf is a team favorite), and even hosting mini talent shows for our own entertainment. Join us and show your hidden skills!\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our Data Warehouse team is based in Jakarta &amp; Bangalore. Working alongside stakeholders, we are predominantly concerned with utilizing and translating data into critical information that can be used to make sound business decisions. This includes gathering any new data points, and working closely with various business teams to capture, connect, and convert any data changes into useful knowledge in guiding our next steps to create a meaningful business impact.</span></div><div><br></div><div><span style=\"font-size: 10pt\">Our team works hard but plays hard, too. We mean the latter in a literal sense, because we're a team full of musicians! We have 2 pianists, 1 guitarist, 1 drummer, more than 2 male singers, 1 female singer, 1 Rockstar, and 1 dangdut singer (yes, you read it right ). So, you best believe that we have several karaoke nights together! Even if you aren't musically inclined, no fear. We love bonding over card games (Werewolf is a team favorite), and even hosting mini talent shows for our own entertainment. Join us and show your hidden skills!</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1713498805305,"descriptionPlain":"Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment. \n\nGrowth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey & it will be good for your career growth forward.\n","description":"<div><span style=\"font-size: 10pt\">Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Growth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey &amp; it will be good for your career growth forward.</span></div>","id":"2b430ba4-210e-4db6-a63e-c11459a0304f","lists":[{"text":"","content":"<li>Handle end-to-end data pipelines from heterogeneous input and output for analytical purposes</li><li>Become data architect by implementing appropriate data modeling concepts depending on data type and use cases</li><li>Responsible for managing a single version of truth and turning data into critical information and knowledge that can be used to make sound business decisions</li><li>Define clear and well-scoped requirements documents, including specs and workflows, that are easily understood by technical and non-technical audiences</li><li>Work with data stakeholders (Product Managers, Product/Business Analysts and Product Engineers) to ship data warehouse features and data product improvements</li><li>Contribute to the product strategy and execute on the prioritized roadmap</li><li>Mentoring &amp; develop junior team members in the team</li>"},{"text":"","content":"<li>Have at least 4 years experience in data environment as Data Warehouse Developer</li><li>Advanced in SQL and data warehouse concepts</li><li>Advanced in more than one programming language, especially Python or Go or Java</li><li>Have experiences working with batch / real-time data processing, data modeling concepts, and implementation</li><li>Have experiences working in GCP data environment such as GCS &amp; Bigquery</li><li>Analytical and data-driven, you love digging into the data to understand what’s happening and define &amp; measure success on every project</li><li>Good communication &amp; interpersonal skills</li><li>You’re passionate about your customers and always bring questions back to what will serve them best</li>"}],"text":"Senior Data Warehouse Engineer - India","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations &amp; service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing &amp; maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, &amp; data engineering in a large scale environment. </span></div><div><br></div><div><span style=\"font-size: 10pt;\">Growth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey &amp; it will be good for your career growth forward.</span></div>","descriptionBodyPlain":"Gojek is a data driven organization. Data has become the most critical part for Gojek to become the market leader through innovations & service excellences. As a Data Warehouse Developer, you’ll take a critical part in developing & maintaining our large scale data environments that will be valuable for our main users to generate business insights, decision making, deep analysis, even data science products. You’ll have the opportunity to work with multiple cross functional teams, such as Product Managers, BI Analyst, Product Engineers, Finance, Marketer, IT Security, etc. You’ll also have the opportunity to flex your Data Warehouse core skills, such as SQL, data modeling, data architecture, data governance, & data engineering in a large scale environment. \n\nGrowth mindset is one of our core values. We’ll make sure that you’ll learn a lot in this journey & it will be good for your career growth forward.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2b430ba4-210e-4db6-a63e-c11459a0304f","applyUrl":"https://jobs.lever.co/GoToGroup/2b430ba4-210e-4db6-a63e-c11459a0304f/apply"},{"additionalPlain":"About the Team\n\nMeet the team that has been instrumental in Gojek's growth! We served more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.\n\nGoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting-pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).\n\nPsst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solution, this is the right place for you!\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Meet the team that has been instrumental in Gojek's growth! We served more than 200 million transactions every month! Also, we strengthen the business group by having deeper knowledge about what are the best recommendations and promotions that are suitable for the customer's needs. From recommending what is the best meal to cheat your diet at 10 pm or offering the latest promotion near your place, we always seek how to extend the product value through our most up-to-date data and marketing solution.</div><div><br></div><div>GoFood Growth pod consists of more than 50 persons that consist of different roles, we seek to improve ourselves by learning from everyone. You will get to meet with almost every team there is in Gojek, from the Product Manager, Data Science, to the Operation team. This team is the melting-pot for the Econ, Marketeers, and Data geeks. While the script running and the campaign launching, we often kill the time by fooling around by imposing ourselves in Among Us or building an alibi as the \"Loyal servant of the Arthur\" in Avalon (hey, I'm not the minion guys 😃).</div><div><br></div><div>Psst, at the moment we are aiming to upgrade our operation through automation and machine learning. If you are interested in solving business problems through the latest cutting-edge data solution, this is the right place for you!</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1706508052225,"descriptionPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","id":"da8d4a37-f5a4-4436-8743-58c787781285","lists":[{"text":"What You Will Do","content":"<li>Take ownership of one of OKR related to demand and growth that leads to revenue and profitability from one of Gojek product’ business; defines the strategy and roadmap for the team to achieve it by combining multiple initiatives (e.g., content/communication, vouchers/promotion, product changes)</li><li>Discover growth opportunities in the business metrics and customer metrics by exploring business data, transaction data, customer activity within apps and actual customer insights</li><li>Build predictive model or clustering model to allocate the promo allocation efficiently</li><li>Run multiple experiments to validate hypothesis in fast pace iteration cycle</li><li>Drives the team for prioritization, strategy, and focus on solutions to solve user problems</li><li>Introduce beneficial business changes through well-written strategy documents and validate the strategy and hypotheses through robust experimentation and statistical approach</li><li>Optimize and automate solutions by leveraging Data Sciences resources</li><li>Perform feedback loop and retroactive analysis of the team performance and operation to evaluate and improve their impact on Gojek’'s North Star Metrics</li><li>Proactively review the operation process in the team and act on how to drive a faster, effective, and efficient execution process</li><li>Present findings to senior management to drive business and strategic decision-making on feature prioritization and impact analysis.</li>"},{"text":"What You Will Need","content":"<li>BS/MS in Engineering, Computer Science, Math, Statistics, or equivalent experience</li><li>Minimum 5 years of working experience with a minimum of 1-2 year of leadership experience</li><li>Proficiency in data analysis tools and programming languages such as Python, R, SQL, and data visualization tools like Tableau or Power BI. Strong analytical skills to interpret complex data sets and extract actionable insights</li><li>High proficiency in Experiment and Hypothesis Testing for multiple scenarios of business</li><li>High proficiency in Descriptive Analytics, Predictive Analytics, Clustering analytics</li><li>Understanding of business operations, strategies, and objectives. The Consumer Analytics Lead should be able to connect analytical insights to business goals and contribute to overall decision-making</li><li>Data Management: Familiarity with data collection, storage, and management best practices</li><li>Strong business acumen with successful experience influencing and leading cross-functional teams</li><li>End to end the problem-solving mindset that can work in increments and exponents</li><li>Radical Candor leadership while also a strong team player; possessing team synergy skills with a high level of enthusiasm in collaborating in a cross-functional team and can also balance attention to detail with swift execution</li><li>Strong project management skills to manage complex projects, also can manage and prioritize multiple internal and external stakeholders</li><li>Experience in a SaaS, Marketplace, Food Delivery, or other technology company is a plus</li>"}],"text":"Senior Growth Manager - Food & Ads","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>Here comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience &amp; behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!</div><div><br></div>","descriptionBodyPlain":"About the Role\n\nHere comes a new challenge for you who is seeking the next leap in your career growth, being our Growth Manager for GoFood! In this role, you will lead problem-solving processes and execute solutions with focus on improving demand and growth metrics for GoFood. Combining business strategy and customer experience & behavior analysis, you will do experiments and campaigns that will encourage our users to experience the product’s core value as quickly as possible which will also improve the product's account spending. In short, you’ll get out of bed every day thinking about new ways to solve exciting problems and grow the business, how cool is that!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/da8d4a37-f5a4-4436-8743-58c787781285","applyUrl":"https://jobs.lever.co/GoToGroup/da8d4a37-f5a4-4436-8743-58c787781285/apply"},{"additionalPlain":"About The Team\n\nOur GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. \n\nOur service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.\n\nAs a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div><span style=\"font-size: 10pt\">Our GoPay team consists of 200+ zealous folk based in Jakarta and Bangalore. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. We run and oversee one of Southeast Asia's largest e-money wallet platforms and Indonesia's leading digital payments provider. </span></div><div><br></div><div><span style=\"font-size: 10pt\">Our service is now accepted by over 300,000 online and offline merchants in Indonesia alone, with our ecosystem processing US$3.6 billion of annualized Gross Transaction Value. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia. It's our job to ensure that this number grows, and more importantly, that anyone utilizing our platform is given the most seamless payment experience possible. How does one achieve this, you may ask? By collaborating diligently with our users to understand the daily obstacles they face in the payment arena, and then crafting our products and services to aid these issues.</span></div><div><br></div><div><span style=\"font-size: 10pt\">As a team, we’re concerned not only with the growth of the company but each other’s personal and professional growth, too. Along with a common drive to jump over technical barriers and provide sustainable solutions, our team bonds over our shared love for tea, movies, and TV shows.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710231191389,"descriptionPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","description":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div>You will take the wheel in building, operating, and maintaining our developer platform called <a href=\"http://GoPay.sh\" class=\"postings-link\">GoPay.sh</a> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</div>","id":"43fa73a0-3946-4921-8dd1-8dbdf5a9726e","lists":[{"text":"What You Will Do","content":"<li>Design, build, and improve the mobile experiences for one of the world's fastest-growing mobile apps</li><li>Partner with the product management team to define and execute the feature roadmap</li><li>Coordinate with cross-functional teams (Backend, DevOps, Design, etc.) on planning and execution</li><li>Proactively manage stakeholders' communication related to deliverables, risks, changes, and dependencies</li><li>Helping out in the onboarding process by sharing contexts and pairing with new members of the team</li><li>Start mentoring or guiding SE1Communicate, collaborate, and work effectively across cross-functional teams in a global environment</li>"},{"text":"What You Will Need","content":"<li>Should have at least 4-5+ years of experience with Android development</li><li>Proficient in Kotlin programming, Java, and Android APIs</li><li>Strong knowledge of Android app architecture and implementation</li><li>Ability to write model code for functional and nonfunctional requirements and help improve the code quality standard across the team</li><li>Working experience with popular libraries for networking, async, image loading, etc</li><li>Well-versed with Agile methodologies, TDD, and Test Engineering and Automation.</li>"}],"text":"Senior Mobile Engineer (Android) - Payments Data Products & Infra","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers.&nbsp;</div><div><br></div><div>You will take the wheel in building, operating, and maintaining our developer platform called <a href=\"http://GoPay.sh\" class=\"postings-link\" target=\"_blank\" rel=\"noopener noreferrer\">GoPay.sh</a> - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.</div>","descriptionBodyPlain":"About The Role\n\nAt GoToFinancial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As Mobile Engineer for the Infrastructure Engineering team, you'll play an integral part in creating the best developer experience for our product engineers. \n\nYou will take the wheel in building, operating, and maintaining our developer platform called GoPay.sh - empowering our entire engineering team with scale and extensibility in mind. With this team, you will be presented with ample opportunities to tackle challenging problems. Your efforts will directly improve the productivity of our engineers, and contribute to redefining the payments ecosystem in Indonesia, bringing wider and more inclusive financial services to the region and beyond.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/43fa73a0-3946-4921-8dd1-8dbdf5a9726e","applyUrl":"https://jobs.lever.co/GoToGroup/43fa73a0-3946-4921-8dd1-8dbdf5a9726e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Data, Research & Insights","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1713853876174,"descriptionPlain":"As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.\n","description":"<div><span style=\"font-size: 11pt\">As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.</span></div>","id":"c54483cb-dd68-43c3-9fe5-623dbb6db56f","lists":[{"text":"What you will do","content":"<li>Design large-scale AI/ML products/systems impacting millions of customers</li><li>Establish best practices for data science methodologies, tools, and technologies to ensure high-quality deliverables and efficient workflows.</li><li>Mentored and coach junior data scientists, providing guidance on technical skills, project management, and career development.</li><li>Led the design, development, and execution of Proof of Concepts (POCs) using emerging data technologies to solve complex business problems.</li><li>Drive and ensure that MLOps practices are being followed in solutions</li><li>Collaborate with cross-functional teams across data and engineering to come up with solutions to complex problem statements.</li><li>Stay current on industry trends and advancements in data science, machine learning, and artificial intelligence, and assess their potential impact on our projects and processes.</li><li>Contribute to thought leadership initiatives such as white papers, conference presentations, and blog posts to showcase our expertise and drive industry recognition.</li><li>Act as a subject matter expert on data science topics, providing guidance and support to internal teams.</li>"},{"text":"What You Will Need","content":"<li>Advanced degree (Master’s or PhD) in Data science.</li><li>Proven track record of success in a data science role, with at least 12 years of experience in applied machine learning, predictive modeling, and data analysis.</li><li>Expertise in programming languages such as Python, R, or Scala, as well as proficiency with data manipulation and visualization libraries (e.g., pandas, NumPy, matplotlib, seaborn).</li><li>Strong understanding of statistical concepts and techniques, with experience applying them to real-world problems.</li><li>Experience with big data technologies such as Hadoop, Spark, or Flink, and proficiency in SQL and/or NoSQL databases.</li><li>Excellent communication and interpersonal skills, with the ability to effectively convey complex technical concepts to both technical and non-technical audiences.</li><li>Leadership experience, including the ability to mentor and coach junior team members and drive cross-functional collaboration.</li><li>A passion for learning and innovation, with a desire to stay ahead of the curve in the rapidly evolving field of data science and technology.</li>"},{"text":"Plus Point","content":"<li>Experience with ride-hailing, quick commerce or food delivery domain.</li><li>Experience working with unstructured or semi-structured data and human-in-the-loop data operations.</li><li>Experience with distributed systems</li>"},{"text":"About the team","content":"<li>Our Data Science team currently consists of 40+ people based in India, Indonesia and Singapore who run Southeast Asia’s leading Gojek business. We oversee all things data and work to become a thought partner for our Business Users, Product Team, and Decision Makers. It’s our job to ensure that they have a structural approach to data-driven problem-solving. Right now, our focus revolves: how to make customers, drivers, and merchants happy and delighted. We have so far created millions of dollar impact across different journeys of customers, drivers and merchants</li><div><br></div><li>We work with the Engineering, PMs and strategy functions hand-in-glove - be it constructing a new product or brainstorming on a problem like how do we reduce the wait time for the drive, how do we improve assortment, should we treat convenience seeking customer differently from value seeking customer etc</li><div><br></div><li>As a team, we’re concerned not only with the growth of the company, but each other’s personal and professional growths, too. Along with us coming from diverse backgrounds, we often have fun sessions to talk about everything and anything from data information to our current movie list.</li>"}],"text":"Senior Principal Data Scientist","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 11pt;\">As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.</span></div>","descriptionBodyPlain":"As a Senior Principal Data Scientist, you will be responsible to work across multiple DS teams and influence the technical roadmap to drive best possible solutions to the problem statement. This role will require a combination of a strong data science background and a passion for innovation.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/c54483cb-dd68-43c3-9fe5-623dbb6db56f","applyUrl":"https://jobs.lever.co/GoToGroup/c54483cb-dd68-43c3-9fe5-623dbb6db56f/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714984631446,"description":"","descriptionPlain":"","id":"a535c249-cf27-41cf-b92d-df1235864fee","lists":[{"text":"What You Will Do","content":"<li>Work closely and under the supervision of a Product Design Lead, and follow the predefined process set forth by the team</li><li>Able to comprehend the product briefs and be able to present the ideas/solutions to the team under the supervision of the product design lead</li><li>Effectively deliver features and improvements in a well-defined scopeDefine end-to-end wireframe and wireflow for features using standard wireframing tools</li><li>Document the design process for each feature, such as research findings, ideations, usability tests, release, and monitor the impact after the product release</li><li>Contribute to the team cadence discussion and make occasional short presentations to the team, as well as present team’s updates if neededProactively seek/give feedback from other stakeholders to make sure concepts are meeting the intended project goal</li>"},{"text":"What You Will Need","content":"<li>Should have at least 5 years of relevant experience in the product design industry</li><li>Familiar data and can identify problem areas, furtherly map out the user journey, and break the problems into smaller chunks</li><li>Use basic analytics tools to gather customer data (funnel)&nbsp;Possess a good knowledge of design fundamentals, such as design thinking framework and other frameworks in order to develop products</li><li>Able to sketch the ideas into a wireframe, learn how to make wireflow, and do wireframing for well-defined features</li><li>Have a good knowledge of the tools, such as Overflow, Miro, Sketch, Figma, or similar ones that are widely used by Product DesignersKnowledge of design validation, either through quantitative or qualitative research</li><li>Preferably some knowledge of service design and experience with working on mobile app design</li>"}],"text":"Senior Product Designer","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/a535c249-cf27-41cf-b92d-df1235864fee","applyUrl":"https://jobs.lever.co/GoToGroup/a535c249-cf27-41cf-b92d-df1235864fee/apply"},{"additionalPlain":"About The Team\n\nThe Payments team in Gojek spans both customer payments (GoPay e-money and wallet) and merchant payments (online payments via Midtrans). Midtrans is one of the largest payment gateways in Indonesia. Spots is the largest offline network for payments in Indonesia.\n\nWe have helped simplify payments for over 750,000 merchant partners, over  1,000,000 driver partners, and millions of customers - from the bike drivers down your street to your favorite Gorengan and Martabak stalls. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia.\n\nThe Productivity & Money Management team is a stream within Midtrans that aims to solve our merchants’ and partners’ pain points over managing their funds - be it for their own businesses or for their clients - to help them streamline their operations and grow their business. Our success depends on the success of our merchant partners who rely on us for their payment needs. This team will focus on the merchant’s and partner’s money management domain, along with partner infrastructure, which will include creating, owning, and executing a product roadmap aligned with product strategy.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Payments team in Gojek spans both customer payments (GoPay e-money and wallet) and merchant payments (online payments via Midtrans). Midtrans is one of the largest payment gateways in Indonesia. Spots is the largest offline network for payments in Indonesia.</div><div><br></div><div>We have helped simplify payments for over 750,000 merchant partners, over&nbsp; 1,000,000 driver partners, and millions of customers - from the bike drivers down your street to your favorite Gorengan and Martabak stalls. But, the growth of Payments does not stop here. We are hungry for more. We intend to become the largest payment and financial services group in Southeast Asia.</div><div><br></div><div>The Productivity &amp; Money Management team is a stream within Midtrans that aims to solve our merchants’ and partners’ pain points over managing their funds - be it for their own businesses or for their clients - to help them streamline their operations and grow their business. Our success depends on the success of our merchant partners who rely on us for their payment needs. This team will focus on the merchant’s and partner’s money management domain, along with partner infrastructure, which will include creating, owning, and executing a product roadmap aligned with product strategy.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Product Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709528793675,"descriptionPlain":"About The Role\n\nAt GoTo Financial, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a Senior Product Manager for Merchant Productivity, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position Midtrans as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>At&nbsp;<b>GoTo Financial</b>, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a&nbsp;<b>Senior Product Manager for Merchant Productivity</b>, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position&nbsp;<b>Midtrans</b>&nbsp;as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!</div><div><br></div>","id":"312d1b95-21ea-4c90-93e8-20724b6208e7","lists":[{"text":"What You Will Do","content":"<li><b>Collaborate with Leadership:</b> Work closely with company leadership to create, own, and execute a product roadmap, vision, and strategy that aligns with our organizational goals</li><li><b>Influence Peers and Stakeholders:</b> Leverage data, logic, and user empathy to influence your peers, stakeholders, and key executives</li><li><b>Own Key Results:</b> Take ownership of critical metrics, including customer satisfaction, usability, on-time releases, and overall product impact</li><li><b>Build Trusted Relationships:</b> Develop strong relationships with engineering and business leaders. Collaborate seamlessly to ensure optimized product delivery and foster a culture of excellence</li><li><b>Effective Communication:</b> Convey important messages clearly and compellingly to cross-functional stakeholders</li><li><b>Prioritization and Execution:</b> Manage prioritization, product definition, execution, rollout, and impact analysis for initiatives within your problem area</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least&nbsp;5 years of experience in product management, demonstrating a track record of success in delivering innovative B2B/B2C products with a keen eye for design and strong product instincts. Experience in payments and transfers will be an advantage.</li><li>Demonstrated ability to collaborate with leadership to develop product strategy and vision.</li><li>Possess a strong sense of agency in navigating and creating clarity in ambiguous situations.</li><li>Ability to break down complex problems, identify use cases and solutions, and thrive in unstructured environments.</li><li>Comprehensive understanding of data, design, research, software engineering, and business processes, with the ability to effectively collaborate with diverse teams.</li><li>Strong analytical and quantitative skills, with the capability to utilize data and metrics to support requirements and features.</li><li>Effective communication skills to articulate strategy, insights, priorities, and plans coherently to all levels of management.</li><li>Meticulous attention to detail, with a commitment to upholding high standards and managing multiple, competing priorities concurrently with minimal supervision.</li>"}],"text":"Senior Product Manager - Merchant Productivity","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>At&nbsp;<b>GoTo Financial</b>, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a&nbsp;<b>Senior Product Manager for Merchant Productivity</b>, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position&nbsp;<b>Midtrans</b>&nbsp;as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nAt GoTo Financial, we recognize that thousands of merchant-partners rely on us for their payment infrastructure needs. As a Senior Product Manager for Merchant Productivity, you’ll play a pivotal role in creating tools and interfaces that streamline our merchant and partner’s money management processes. Whether it’s managing funds received from payments, streamlining payment disbursement, or empowering our partners through infrastructure products, your contributions will be instrumental. Collaborating with a talented team of leaders across engineering and business, you’ll break down complex issues into actionable steps, optimizing our product. Your efforts will further position Midtrans as the hub for all digital payments and transfers made by businesses in Indonesia, solidifying our position as the leading payment gateway in the country. Join us in shaping the future of financial technology!\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/312d1b95-21ea-4c90-93e8-20724b6208e7","applyUrl":"https://jobs.lever.co/GoToGroup/312d1b95-21ea-4c90-93e8-20724b6208e7/apply"},{"additionalPlain":"About The Team\n\nOur objective as Gojek’s Risk Team is to ensure a safe and trusted platform that our users can trust, rely on, and love to come back to. Our team consists of multinational and multi-background individuals, working together to anticipate and predict potential threats to our platform and our users, design and build tools to fight against and mitigate these threats, and implement and enforce these systems at scale. We partner closely with several cross-functional teams to ensure safe and secure transactions for our users, our Gojek businesses, and our extended ecosystem. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our objective as Gojek’s Risk Team is to ensure a safe and trusted platform that our users can trust, rely on, and love to come back to. Our team consists of multinational and multi-background individuals, working together to anticipate and predict potential threats to our platform and our users, design and build tools to fight against and mitigate these threats, and implement and enforce these systems at scale. We partner closely with several cross-functional teams to ensure safe and secure transactions for our users, our Gojek businesses, and our extended ecosystem.&nbsp;</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705909732063,"descriptionPlain":"About The Role\n\nAs the Senior Risk Analyst for Food & Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations & Finance.\n","description":"<div><b>About The Role</b></div><div><br></div><div>As the Senior Risk Analyst for Food &amp; Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations &amp; Finance.</div>","id":"419ca012-7459-4d3e-acfc-381d32c8ae7e","lists":[{"text":"What You Will Do","content":"<li>Identify new fraud emerging trends/patterns and recommend solutions both at the strategic and tactical levels, balancing the business vision and the practicality of implementations.</li><li>Assess, validate, and optimize risk rules to ensure best outcomes and to meet stipulated risk target metrics.&nbsp;</li><li>Identify risk assessment from products, systems, processes and recommend possible preventive measures</li><li>Influence roadmaps of partner teams, including the wider Risk organization, Data Science, Engineering, Product Management, Mobility business, Operations and Finance</li><li>Identify and predict blockers, conflicts and risks to projects across multiple teams and seek solutions to drive timely execution</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 4 years of experience in analytical, problem-solving roles in a fast-paced environment (prior experience in fraud/risk domain is preferred).</li><li>Strong project management skills on collaborating with multiple stakeholders and product managers to improve processes and products to reduce the overall risk of departments.</li><li>Strong analytical skills with the ability to collect, organize, analyze and disseminate significant amounts of information with attention to detail and accuracy and present them clearly and coherently to various stakeholders.</li><li>Ability to work independently, take quick decisions &amp; recommend effective solutions on a day-to-day basis - always backed by strong data points.</li><li>Skills of extracting insights from large data sets with the help of SQL, BigQuery, Python, R, etc., and experience with visualization tools like Tableau, DataStudio, <a href=\"http://etc.Excellent\" class=\"postings-link\">etc.</a></li><li><a href=\"http://etc.Excellent\" class=\"postings-link\">Excellent</a> written &amp; verbal communication skills focused on improving collaboration, knowledge, and information exchange across various <a href=\"http://stakeholders.Being\" class=\"postings-link\">stakeholders.</a></li><li><a href=\"http://stakeholders.Being\" class=\"postings-link\">Being</a> exposed to building statistical models using both unsupervised &amp; supervised learning algorithms is a plus.</li><li>Fluency in English is a must.</li><div><br></div>"}],"text":"Senior Risk Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>As the Senior Risk Analyst for Food &amp; Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations &amp; Finance.</div>","descriptionBodyPlain":"About The Role\n\nAs the Senior Risk Analyst for Food & Consumer Risk you will be part of a team that identifies Risk problems and leads end-to-end solutions for all Gojek’s operating countries. You will be protecting Gojek from fraud losses, while at the same time protecting Gojek’s Consumers’ experience and safety at the platform. You will have the opportunity to work in a fast-paced environment in a highly cross-functional organization that includes wider Risk management, Data Science, Engineering, Product Management, Business, Operations & Finance.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/419ca012-7459-4d3e-acfc-381d32c8ae7e","applyUrl":"https://jobs.lever.co/GoToGroup/419ca012-7459-4d3e-acfc-381d32c8ae7e/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1683274859211,"descriptionPlain":"About the Role -\nWe are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","description":"<div><b style=\"font-size: 9pt\">About the Role</b><span style=\"font-size: 9pt\"> -</span></div><div><span style=\"font-size: 9pt\">We are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp; </span></div>","id":"ce3ba8fb-6d8e-4634-ac8e-76a10646bfea","lists":[{"text":"What You Will Do ","content":"<li>Key fraud analyst to the business teams for the assigned product lines - conducting deep dives and analysis on risk-related issues. </li><li>Close monitoring of risk metrics, underlying drivers - and the overall business metrics</li><li>Assess, validate and optimize risk rules - to ensure the best outcome of risk/reward and to meet stated risk target metrics</li><li>Develop risk platform solutions that will balance the various requirements from the product lines yet maintain a holistic view of the customer experience</li>"},{"text":"What You Will Need","content":"<li>Able to assess issues and recommend solutions both at the strategic and tactical levels - balancing the business vision and practical implementation considerations.</li><li>Intermediate proficiency in using GSuite and other data skills (SQL, BigQuery etc)</li><li>Proactively builds trust-based relationships with stakeholders while maintaining the ability to remain objective</li><li>Strong understanding of risk solutions, and product implementation - on the business side5-10 years of related payment risk experience, preferably on the acquiring side and e-wallets</li>"}],"text":"Senior Risk Manager","country":"ID","workplaceType":"hybrid","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 9pt;\">About the Role</b><span style=\"font-size: 9pt;\"> -</span></div><div><span style=\"font-size: 9pt;\">We are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.&nbsp; The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.&nbsp; </span></div>","descriptionBodyPlain":"About the Role -\nWe are looking for exceptional risk manager to identify potential fraud risk, and develop mitigating strategies in our expanding business.  The role holder will be responsible for delivering on target risk metrics - by analyzing data and implementing risk rules and recommending mitigation plans.  \n","hostedUrl":"https://jobs.lever.co/GoToGroup/ce3ba8fb-6d8e-4634-ac8e-76a10646bfea","applyUrl":"https://jobs.lever.co/GoToGroup/ce3ba8fb-6d8e-4634-ac8e-76a10646bfea/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707979859438,"descriptionPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","description":"<div><b style=\"font-size: 16px\">About the team:</b></div><div><span style=\"font-size: 16px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","id":"18bd3c46-648a-4204-8c39-9a3a8c3803e2","lists":[{"text":"What you will do:","content":"<li>Act as the lead point of contact for all account matters, anticipate the client’s needs, work within the company to ensure deadlines for the client are met, and help the client succeed,</li><li>Resolve account issues and complaints,</li><li>Plan and present reports on account progress, goals, and periodic initiatives to share with team leaders and peers on a regular basis,</li><li>Provide full visibility into the sales pipeline at every stage of engagement, and take the account into the next level by increasing Midtrans’ share in online payments,</li><li>Develop a strong understanding of the e-commerce and digital commerce market and be the first person that a client calls for escalation,</li><li>Work closely with the Partnership and Banking teams to ensure rapport and collaboration between partners and clients,</li><li>Responsible for administrative duties, such as preparing reports, preparing price quotes, maintaining and approving the entire agreements and forms.</li>"},{"text":"What you will need:","content":"<li>Bachelor’s degree in Business Management, Sales, Communication or related academic area,</li><li>A minimum of 3 years of experience in business management, sales, or project management is mandatory. </li><li>Prior experience in e-commerce and managing key accounts will be a plus point,</li><li>Fluency in both Bahasa and English is required,Able to multitask, prioritize, and manage time efficiently,</li><li>Ability to negotiate, persuade and influence others,</li><li>Excellent interpersonal, communication, presentation and analytical skills,</li><li>Proficient computer skills, and experience with CRM software and the Microsoft Office Suite, with emphasis on superior Excel skills,</li><li>Proven ability to maintain projects and maintain effective relations with accounts or partners.</li>"}],"text":"Senior Sales Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the team:</b></div><div><span style=\"font-size: 16px;\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. </span></div>","descriptionBodyPlain":"About the team:\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/18bd3c46-648a-4204-8c39-9a3a8c3803e2","applyUrl":"https://jobs.lever.co/GoToGroup/18bd3c46-648a-4204-8c39-9a3a8c3803e2/apply"},{"additionalPlain":"About The Team\n\nOnline Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About The Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Online Merchants Sales team consists of experienced sales managers and account managers who handle Midtrans’ most strategic accounts on a day-to-day basis. The team is filled with energetic individuals who are solid team players, who support each other, who celebrate each other with peer-to-peer recognition initiatives.&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1707805477238,"descriptionPlain":"About The Role\n\nSales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.\n","description":"<div><b style=\"font-size: 18px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Sales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.</span></div>","id":"60b17958-bbef-411b-9024-5cbbabf12fff","lists":[{"text":"What You Will Do","content":"<li>Act as the lead point of contact for all account matters, anticipate the client’s needs, work within the company to ensure deadlines for the client are met, and help the client succeed</li><li>Resolve account issues and complaints</li><li>Plan and present reports on account progress, goals, and periodic initiatives to share with team leaders and peers on a regular basis</li><li>Provide full visibility into the sales pipeline at every stage of engagement, and take the account into the next level by increasing Midtrans’ share in online payments</li><li>Develop a strong understanding of the e-commerce and digital commerce market and be the first person that a client calls for escalation</li><li>Work closely with the Partnership and Banking teams to ensure rapport and collaboration between partners and clients</li><li>Responsible for administrative duties, such as preparing reports, preparing price quotes, maintaining and approving the entire agreements and forms</li>"},{"text":"What This Role Needs","content":"<li>Bachelor’s degree in Business Management, Sales, Communication or related academic area</li><li>At least 6 years of experience in business management, sales, or project management is mandatory. Prior experience in e-commerce and managing key accounts will be a plus point</li><li>Fluency in both Bahasa and English is required</li><li>Able to multitask, prioritize, and manage time efficiently</li><li>Ability to negotiate, persuade and influence others</li><li>Excellent interpersonal, communication, presentation and analytical skills</li><li>Proficient computer skills, and experience with CRM software and the Microsoft Office Suite, with emphasis on superior Excel skills</li><li>Proven ability to maintain projects and maintain effective relations with accounts or partners</li>"}],"text":"Senior Sales Manager - Midtrans - #9679","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 18px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Sales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.</span></div>","descriptionBodyPlain":"About The Role\n\nSales in Midtrans plays an important role to acquire, execute, and maintain partnerships with the most strategic startup and offline-to-online (O2O) businesses in the company’s portfolio. You will assist the Commercial Department in sales functions, including end-to-end management and executing all partnerships' contractual assets that help drive the company's key business goals.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/60b17958-bbef-411b-9024-5cbbabf12fff","applyUrl":"https://jobs.lever.co/GoToGroup/60b17958-bbef-411b-9024-5cbbabf12fff/apply"},{"additionalPlain":"About Us\n\n Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About Us</b></div><div><br></div><div><span style=\"font-size: 16px\">&nbsp;Automation Engineering Platform is a team that is responsible for creating tools, frameworks, and processes for Quality Assurance (QA) teams within GoTo. The primary objective of team is to ensure that the QA team has all the necessary resources to effectively and efficiently carry out their tasks. These resources include automation frameworks, custom-built tools, and process improvements that enable the QA team to work smarter and faster.</span></div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1706837996316,"descriptionPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","id":"93b5e2e0-272f-4091-b7aa-fafc06ca67c4","lists":[{"text":"What You Will Do","content":"<li>Conduct feature and exploratory tests on Mobile apps (Android, iOS)and API. Engage in continuous automation throughout agile development iterations to ensure zero defects</li><li>Work closely with the cross-functional product team, including PMs, Designers, Developers, and QA managers right from the inception of features</li><li>Create and execute the test cases for features with minimum guidance and maintain and add new cases in automation frameworks on either UI/API test level and reduce manual efforts during regression testing&nbsp;</li><li>Participate in iteration planning, providing input on required testing tasks, processes, and associated effort for the selected user stories</li><li>Design, develop and execute test automation for relevant areas of ownership independently</li><li>Contribute to automation framework development (Libraries / new features / extensions)</li><li>Provide automated test coverage for corner cases, revenue, impact, usability, backend services, and exploratory testing</li><li>As a fast learner and team player, you’re comfortable teaching yourself new skills quickly and can thrive in a complex and fast-paced environment while making strong technical individual contributions</li>"},{"text":"What You Will Need","content":"<li>4-6+ years of experience in the field of professional testing</li><li>Good prior experience in Manual &amp; Automation test methodologies</li><li>Sound knowledge of testing/automating the tests at different layers of the application</li><li>Comfortable writing clean code in one programming language (Java/Kotlin is a plus)</li><li>Good Understanding of Tools like Selenium, Appium, Cucumber BDD, TestNG Maven/Gradle, and CI/CD tools like Jenkins, GitLab, etc</li><li>Should have exposure to tools like Postman, Charles Proxy/MITM&nbsp;</li><li>Working knowledge of Git</li><li>Experience in developing test automation framework from scratch is a big plus</li>"}],"text":"Senior SDET - Automation Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">As an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.</span></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAs an engineer in Automation Engineering platform you will be responsible to lead and implement the test strategy for automation by working closely with the product engineering group, design and develop tools and frameworks that help smoother development and testing process. You will also work on the latest cutting-edge internet/software technology.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/93b5e2e0-272f-4091-b7aa-fafc06ca67c4","applyUrl":"https://jobs.lever.co/GoToGroup/93b5e2e0-272f-4091-b7aa-fafc06ca67c4/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1709540624021,"descriptionPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><span style=\"font-size: 10pt\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"d846246a-bcb3-42c4-af55-cb9c5df9fd8b","lists":[{"text":"What You Will Do","content":"<li>Work closely with the Product team (i.e. PMs, Designers, Developers, and QA) right from the inception of features;&nbsp;</li><li>Participate in product &amp; tech discussions, and refine the acceptance criteria and testing estimation;&nbsp;</li><li>Understand business and product requirements as related to payments and the existing service architecture;&nbsp;</li><li>Write concise, comprehensive, detailed test plans based on business and product feature requirements;&nbsp;</li><li>Improve the test automation experience by enhancing tools/scripts, test coverage, and/or code structure, and automate repeated manual tasks to improve self/stream's productivity;&nbsp;</li><li>Take responsibility for the quality of features and the delivery of the entire feature;&nbsp;</li><li>Debug and analyze the bugs in the application/service, aiding developers in arriving at the root cause</li>"},{"text":"What You Will Need","content":"<li>At least 5 years of experience in professional testing in Microservices/API/App/Web;&nbsp;</li><li>Hands-on in test automation using any language (preferably Java &amp; Kotlin);</li><li>Hands-on in Flutter automation is a plus;</li><li>Experience with open-source automation libraries like Rest Assured, Appium, and Selenium;</li><li>Familiarity with CI/CD tools like Gitlab, and Jenkins;</li><li>Deep knowledge in manual &amp; automation test methodologies and principles; 60+40 (&nbsp; auto + manual)</li><li>Excellent analytical, debugging skills and problem-solving with attention to detail;</li><li>Well-versed with Agile methodology, SDLC and STLC;</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Senior SDET - Consumer Payments","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt;\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d846246a-bcb3-42c4-af55-cb9c5df9fd8b","applyUrl":"https://jobs.lever.co/GoToGroup/d846246a-bcb3-42c4-af55-cb9c5df9fd8b/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709178511449,"descriptionPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","description":"<div><span style=\"font-size: 10pt\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","id":"e83c2567-28a4-411c-adff-7306422a0482","lists":[{"text":"What You Will Do","content":"<li>Work closely with the Product team (i.e. PMs, Designers, Developers, and QA) right from the inception of features;&nbsp;</li><li>Participate in product &amp; tech discussions, and refine the acceptance criteria and testing estimation;&nbsp;</li><li>Understand business and product requirements as related to payments and the existing service architecture;&nbsp;</li><li>Write concise, comprehensive, detailed test plans based on business and product feature requirements;&nbsp;</li><li>Improve the test automation experience by enhancing tools/scripts, test coverage, and/or code structure, and automate repeated manual tasks to improve self/stream's productivity;&nbsp;</li><li>Take responsibility for the quality of features and the delivery of the entire feature;&nbsp;</li><li>Debug and analyze the bugs in the application/service, aiding developers in arriving at the root cause</li>"},{"text":"What You Will Need","content":"<li>At least 4 years of experience in professional testing in Microservices/API/App/Web;&nbsp;</li><li>Hands-on in test automation using any language (preferably Java &amp; Kotlin);</li><li>Hands-on in Flutter automation is a plus;</li><li>Experience with open-source automation libraries like Rest Assured, Appium, and Selenium;</li><li>Familiarity with CI/CD tools like Gitlab, and Jenkins;</li><li>Deep knowledge in manual &amp; automation test methodologies and principles; 60+40 (&nbsp; auto + manual)</li><li>Excellent analytical, debugging skills and problem-solving with attention to detail;</li><li>Well-versed with Agile methodology, SDLC and STLC;</li>"}],"salaryDescription":"<div><br></div>","salaryDescriptionPlain":"\n","text":"Senior SDET - Consumer Payments","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 10pt;\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.</span></div>","descriptionBodyPlain":"As a Senior QA engineer —you would need to be able to lead and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion for building the best products using amazing technology while having great fun doing it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e83c2567-28a4-411c-adff-7306422a0482","applyUrl":"https://jobs.lever.co/GoToGroup/e83c2567-28a4-411c-adff-7306422a0482/apply"},{"additionalPlain":"About our Team\n\nConsumer Payments is part of GoTo’s financial services arm. Our team works to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.\n\nWe are responsible for building and growing the customers and payments made through  GoPay . GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia. \n\nAs part of the Money Management team, you will be responsible for delivering essential financial solutions to help grow GoPay users. Beside the fully homemade features, the team is also working in-depth integration with bank partners.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About our Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Consumer Payments is part of GoTo’s financial services arm. Our team works to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.</span></div><div><br></div><div><span style=\"font-size: 16px\">We are responsible for building and growing the customers and payments made through&nbsp; GoPay . GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">As part of the Money Management team, you will be responsible for delivering essential financial solutions to help grow GoPay users. Beside the fully homemade features, the team is also working in-depth integration with bank partners.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1704763287586,"descriptionPlain":"About the Role:\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.\n\n","description":"<div><b style=\"font-size: 16px\">About the Role:</b></div><div><br></div><div><span style=\"font-size: 16px\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.</span></div><div><br></div>","id":"5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70","lists":[{"text":"What you’ll do","content":"<li>Attend daily standup meetings, do sprint planning/backlog reviews, communicate project/development status to internal and external teams in a timely fashion</li><li>Analyze and estimate product features defined by Product Manager/Product Owner from testing point of view</li><li>Build, contribute and maintain automated test suites and frameworks on App and API utilizing Java/JavaScript or similar</li><li>Ability to understand product feature requirements and test them effectively</li><li>Ability to work on Functional, automation testing for Web, API’s, and mobile apps both Android and iOS</li><li>Work with Business, Product, and Dev teams in close coordination</li><li>Well-versed with Agile methodology, SDLC and STLC</li><div><br></div><div><br></div>"},{"text":"What you’ll need","content":"<li>Preferably 4-6+ years of experience in professional testing in /API/Web using RestAssured with Java, Appium (Android &amp; iOS) or Selenium or similar frameworks where the experience in service virtualization / WebServices-API testing through POSTMAN or any similar tool</li><li>Basic knowledge of Java, test Parallelisation (API and App), CrossBrowser coverage, Selenium with Java, Reporting Plugin i.e. Allure, Extent.</li><li>Hands-on experience with Selenium, Intellij and TestNG</li><li>Agile / Scrum / Kanban experience Soft Skills and able to work and communicate with cross-functional teams</li><li>Experience in CI/CT using Jenkins or similar continuous integration, release and change management tools i.e GIT or similar GitLab</li><li>Good analytical, problem solving and debugging skills</li>"}],"text":"Senior SDET - Money Management","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role:</b></div><div><br></div><div><span style=\"font-size: 16px;\">As a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.</span></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.</span></div><div><br></div>","descriptionBodyPlain":"About the Role:\n\nAs a QA engineer —you would need to be able to execute and implement the test strategy for manual as well as automation by working closely with the product engineering group. They would also work on the latest cutting-edge internet/software technology.\n\nWe are looking for passionate individuals who want to make a difference in the world, have a strong will of constant learning and development, are open and collaborative, and never stop striving to improve and develop both themselves and the products they are responsible for. Here at GTF, we want to share our passion in building the best products using amazing technology while having great fun doing it.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70","applyUrl":"https://jobs.lever.co/GoToGroup/5fee91fb-35a5-4eb4-99fa-f0ef8bb35b70/apply"},{"additionalPlain":"About the Team\n\nGojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Gojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1711358848361,"descriptionPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","id":"68f907a3-329f-411b-af2d-a66b38243919","lists":[{"text":"What You Will Do","content":"<li>Design and build our Machine Learning Platform to help Data Scientists productionize their models and features faster</li><li>Engineer high-reliability, high-performance services for sophisticated ML-driven functionality</li><li>Collaborate with Data Scientists to optimize ML models for high-throughput, low-latency use cases</li><li>Build internal tools and interfaces to improve the productivity of the team and improve the accessibility of our products</li>"},{"text":"What You Will Need","content":"<li>At least 5 years as a Software Engineer, with fluency and experience in either Go, Python, or Java</li><li>Proven track-record building large-scale, high-throughput, low-latency production systems</li><li>Prior experience developing for and debugging Big Data and stream processing frameworks such as Spark, Kafka, and Flink</li><li>Good understanding of algorithms and data structures/ design patterns</li><li>Passion for Agile software development practices such as test-driven development, pair programming, etc.</li><li>Experience with relational databases, non-relational databases, cloud environments and cloud deployment technology (Terraform, Kubernetes, Helm)</li><div><br></div>"},{"text":"Bonus Points If","content":"<li>You have working knowledge of ML frameworks such as TFX, Kubeflow, and MLflow</li><li>You have Data Science knowledge and familiarity with ML libraries such as Pandas, Scikit, Tensorflow, XGBoost, Keras</li>"}],"text":"Senior Software Engineer - Data Science Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px;\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px;\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px;\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/68f907a3-329f-411b-af2d-a66b38243919","applyUrl":"https://jobs.lever.co/GoToGroup/68f907a3-329f-411b-af2d-a66b38243919/apply"},{"additionalPlain":"About the Team\n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. At the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company. \n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real time high throughput systems with a wide range of programming stack. At the productivity team, we solve for the happiness of our customers who are Gojek Product Engineers. We do what we do by designing abstractions and automations.You are directly responsible for improving engineering quality and productivity and experience of engineers driving fundamental business KPI for the company.&nbsp;</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1711536111124,"descriptionPlain":"About the Role\n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","id":"0216fdb3-64c6-4e37-ace8-1d9c0c79ca23","lists":[{"text":"What You Will Do","content":"<li>Build and manage a highly scalable, reliable and cost effective application infrastructure at Gojek, forming the backbone of our diverse distributed systems</li><li>Be a role model in technical excellence, helping Gojek engineers deliver top-quality applications without worrying about underlying infrastructure</li><li>Enhance code quality and product performance through continuous improvement and innovation</li><li>Collaborate and communicate effectively with teams across multiple geographies</li><li>Share your knowledge and expertise to strengthen teams knowledge of the platform so they can support themselves</li><li>Regularly refactor your work to maintain high-quality design and architecture following industry best practices</li><div><br></div>"},{"text":"What You Will Need","content":"<li>Atleast 3,5+ years of relevant experience in building applications from scratch, with proficiency in an object oriented or functional programming language (e.g. Java, Golang, Clojure, Python, Ruby etc)</li><li>Solid understanding of distributed systems fundamentals and the ability to troubleshoot issues in a large-scale infrastructure.</li><li>Hands-on experience with container orchestration and cloud native infrastructure technologies such as Kubernetes and Docker</li><li>Strong domain modeling skills and the ability to build RESTFul web services</li><li>Familiarity with CI/CD pipelines and Infrastructure as Code tools, including Terraform and Helm.</li><li>Deep knowledge or Linux as a production environment</li><li>Working knowledge of the TCP/IP stack, internet routing and load balancing</li><li>Prior experience with cloud platforms (e.g. AWS, GCP, Azure) is a plus</li><div><br></div>"}],"text":"Senior Software Engineer - Event Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>At Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAt Engineering Platform, Gojek; we are looking for passionate engineers to join us in building a scalable platform-as-a-service (PaaS) on Kubernetes. The platform you are building is designed to power diverse applications across Gojek’s many business lines. Your expertise will be crucial in delivering a reliable, cost-effective, and enjoyable experience for the developers using our platform. If you enjoy creating tools for fellow developers and are comfortable dealing with high scale and complex distributed systems - this role will be a great fit.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/0216fdb3-64c6-4e37-ace8-1d9c0c79ca23","applyUrl":"https://jobs.lever.co/GoToGroup/0216fdb3-64c6-4e37-ace8-1d9c0c79ca23/apply"},{"additionalPlain":"About the Team\n\nThe Commerce Enablement team is a family of 60+ engineers based in Jakarta, Singapore, and India. We consistently strive to implement solutions that allow our merchant-partners in Indonesia (and the greater Southeast Asian region) to sell their products both online and offline. We also work to improve the merchant-partner experience by product innovation and integration with the rest of the GoTo Group ecosystem.\n\nInternally, we promote a culture of engineering excellence, learning, and guided career growth. We advocate sustainable engineering practices, innovation, and working smart more so than working hard. We aim to be a world-class organization, implementing world-class solutions, with world-class engineers leading the way.\n\nOur portfolio of products include merchant-facing solutions that enable our subscribed merchants to sell their goods and services both online and offline. South-East Asia is a very dynamic market, where products have to react promptly to market trends and shifts, and where product managers and business leads need the flexibility to experiment and iterate fast. With that in mind, from an engineering perspective, our challenges are to evolve a general platform for e-commerce that is sufficiently versatile to support rapid product iterations across multiple products, as well as scaling up to an ever-growing user-base. To tackle these challenges, we have adopted event-driven  architectural patterns in our engineering designs, as well as agile practices across all our day-to-day processes.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>The Commerce Enablement team is a family of 60+ engineers based in Jakarta, Singapore, and India. We consistently strive to implement solutions that allow our merchant-partners in Indonesia (and the greater Southeast Asian region) to sell their products both online and offline. We also work to improve the merchant-partner experience by product innovation and integration with the rest of the GoTo Group ecosystem.</div><div><br></div><div>Internally, we promote a culture of engineering excellence, learning, and guided career growth. We advocate sustainable engineering practices, innovation, and working smart more so than working hard. We aim to be a world-class organization, implementing world-class solutions, with world-class engineers leading the way.</div><div><br></div><div>Our portfolio of products include merchant-facing solutions that enable our subscribed merchants to sell their goods and services both online and offline. South-East Asia is a very dynamic market, where products have to react promptly to market trends and shifts, and where product managers and business leads need the flexibility to experiment and iterate fast. With that in mind, from an engineering perspective, our challenges are to evolve a general platform for e-commerce that is sufficiently versatile to support rapid product iterations across multiple products, as well as scaling up to an ever-growing user-base. To tackle these challenges, we have adopted event-driven&nbsp; architectural patterns in our engineering designs, as well as agile practices across all our day-to-day processes.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716274508099,"descriptionPlain":"About the Role\n\nAt GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners. \n\n\n","description":"<div><b>About the Role</b></div><div><br></div><div>At GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners.&nbsp;</div><div><br></div><div><br></div>","id":"672e0a30-76dc-4a8b-9821-5d702374a593","lists":[{"text":"What You Will Do","content":"<li>Improve the day-to-day lives of developers who need to design, build, test, debug and monitor their work</li><li>Contribute to the engineering efforts from design to implementation, solving complex technical challenges around developer and engineering productivity and velocity</li><li>Develop cutting edge tools and templates to improve the productivity of the developers in the Commerce Enablement organization</li><li>Code, design, prototype, perform reviews and consult in the process of building highly scalable, reliable, and fault-tolerant systems</li><li>Build and manage automated build/test/deployment environments</li><li>Research new technologies and tools, speaking and participating in tech conferences to carry the GoTo Financial brand throughout the community</li><div><br></div><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 4+ years of relevant software development experience with consumer/merchant products; hands-on experience in designing, developing, testing, and deploying large scale applications</li><li>Working with large scale production Kafka clusters</li><li>Experience building real-time streaming applications and concurrent distributed applications using messaging Platforms</li><li>Proven track record building large scale, high throughput, low latency production systems</li><li>Ability to implement Continuous Integration and Continuous Delivery</li><li>Experience with cloud-based solutions (AWS, GCP, etc) and container orchestration tools (Docker, Kubernetes, etc)</li><li>Experience in designing and developing tools and solutions used across teams&nbsp;</li><li>Well-versed with Agile methodologies, TDD, and Test Engineering and Automation</li>"}],"text":"Senior Software Engineer - Online Merchant","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>At GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners.&nbsp;</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nAt GoTo Financial, engineering is central to everything we do: bringing our ideas to life and into the lives of our users. As our Senior Software Engineer for the Commerce Enablement group, you’ll be part of the team building some of the most critical products for GoTo Financial merchant-partners. Working alongside some of the brightest minds in the industry across design, product, and engineering, you’ll focus your efforts on designing and implementing products for a massive network of small, medium and large businesses, improving overall application performance, code structure, and developing robust, well-designed software systems. Your ownership, drive, and passion will help provide for a world-class user experience and heightened stability of our Midtrans products, and directly augment the growth of millions of Southeast Asian merchant-partners. \n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/672e0a30-76dc-4a8b-9821-5d702374a593","applyUrl":"https://jobs.lever.co/GoToGroup/672e0a30-76dc-4a8b-9821-5d702374a593/apply"},{"additionalPlain":"About the Team\n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713939159820,"descriptionPlain":"About the Role\n\nWe're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.\n","description":"<div><b>About the Role</b></div><div><br></div><div>We're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.</div>","id":"d3b7122b-692b-4815-8aa9-f1d0259bccd5","lists":[{"text":"What Will You Do","content":"<li>Develop Java backend applications for the company, including web applications and server-side applications.</li><li>Be responsible for participating in the entire software development process, from requirement analysis to design, development, testing, and deployment, ensuring that our software products run efficiently and stably. The most significant thing is taking responsibility for results.</li><li>Architect and engineer robust, high-performance systems that can effortlessly handle scale, maintain reliability, ensure security, and gracefully handle faults.</li><li>Craft and refine our product vision into iterative Minimum Viable Products (MVPs), refining them as needed for scalability and adaptability.</li><li>Stay at the forefront of technology trends, continuously evaluating and incorporating new tools and methodologies to supercharge our development efforts.</li>"},{"text":"What Will You Need","content":"<li>Bachelor's degree or above in Computer Science or a related major.</li><li>4+ years of Java development experience, those with large-scale project development experience are preferred.</li><li>Be familiar with mainstream frameworks like Spring, Spring Boot, and MyBatis.</li><li>Be familiar with Linux operating systems, understand database principles, and be proficient in using databases like MySQL and Oracle.</li><li>Have good coding style and code specifications, and be able to independently complete project development.</li><li>Have good communication skills and teamwork spirit, and be able to collaborate effectively with other developers.</li><li>Have knowledge of container orchestration technologies like Docker and Kubernetes, and be able to use them for application deployment and management.</li>"}],"text":"Senior Software Engineer (Back End) - Consumer Lending (Funding/Collection)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>We're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.</div>","descriptionBodyPlain":"About the Role\n\nWe're seeking an adept Software Engineer to join our dynamic engineering team at GoTo Financial. Your primary role will involve crafting and developing cutting-edge fintech applications with a focus on performance excellence. As a senior member of the team, you'll be instrumental in enhancing our flagship products spanning Gojek, GoPay, and Tokopedia, all geared towards delivering optimal user experiences to our extensive user base.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d3b7122b-692b-4815-8aa9-f1d0259bccd5","applyUrl":"https://jobs.lever.co/GoToGroup/d3b7122b-692b-4815-8aa9-f1d0259bccd5/apply"},{"additionalPlain":"About The Team\n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713938773235,"descriptionPlain":"About the Role\n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.\n","description":"<div><b>About the Role</b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.</div>","id":"7507f24f-ec5c-464a-822a-96465f56de6b","lists":[{"text":"What You Will Do","content":"<li>Develop Java backend applications for the company, including risk applications and server-side applications.</li><li>Foster a culture of collaboration by working closely with diverse regional teams including Product, DevOps, UX, Data Engineering, and QA throughout the planning and execution phases.</li><li>You need to address the challenges faced in high-concurrency scenarios of risk systems, architects, robust engineers, and high-performance systems that can effortlessly handle scale, maintain reliability, ensure security, and gracefully handle faults.</li><li>You also need to develop different risk control rules and integrate them with different third-party data sources.</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree or above in Computer Science or a related major.</li><li>4+ years of Java development experience, those with large-scale project development experience are preferred.</li><li>Be familiar with mainstream frameworks like Spring, Spring Boot, and MyBatis.</li><li>Be familiar with Linux operating systems, understand database principles, and be proficient in using databases like MySQL MongoDB, and Redis.</li><li>Have good coding style and code specifications, and be able to independently complete project development.</li><li>Have good communication skills and teamwork spirit, and be able to collaborate effectively with other developers.</li><li>Know container orchestration technologies like Docker and Kubernetes, and be able to use them for application deployment and management.</li>"}],"text":"Senior Software Engineer (Back End) - Consumer Lending (Risk)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.</div>","descriptionBodyPlain":"About the Role\n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across the GoTo ecosystem, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience. Apart from that, you can also master more advanced risk control technology.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7507f24f-ec5c-464a-822a-96465f56de6b","applyUrl":"https://jobs.lever.co/GoToGroup/7507f24f-ec5c-464a-822a-96465f56de6b/apply"},{"additionalPlain":"About the Team\n\nConsumer Lending is part of GoFin, Gojek's financial services arm. Our team works to provide responsible and sustainable financial services to Gojek users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term. Our team’s mission is to empower our users to realize their dreams through responsible lending. GoPayLater, our flagship product, currently helps millions of users afford their everyday needs while budgeting for the future - through good times and tough times. We’re planning on growing aggressively in 2021 and beyond by tapping into and expanding our services into new platforms and partners.\n\nThough we’re spread across Indonesia, India, and Singapore, we all enjoy collaborative iterative development with fast feedback cycles and prefer making pragmatic technical decisions despite working under a myriad of business and regulatory constraints. We work in a highly supportive environment where we never hesitate to help each other out, unblock all barriers, and have fun along the way. We love to take advantage of the fact that our members come from such a wide variety of cultures and backgrounds and take time to learn from and about one another on our informal Zoom hangouts.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>Consumer Lending is part of GoFin, Gojek's financial services arm. Our team works to provide responsible and sustainable financial services to Gojek users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term. Our team’s mission is to empower our users to realize their dreams through responsible lending. GoPayLater, our flagship product, currently helps millions of users afford their everyday needs while budgeting for the future - through good times and tough times. We’re planning on growing aggressively in 2021 and beyond by tapping into and expanding our services into new platforms and partners.</div><div><br></div><div>Though we’re spread across Indonesia, India, and Singapore, we all enjoy collaborative iterative development with fast feedback cycles and prefer making pragmatic technical decisions despite working under a myriad of business and regulatory constraints. We work in a highly supportive environment where we never hesitate to help each other out, unblock all barriers, and have fun along the way. We love to take advantage of the fact that our members come from such a wide variety of cultures and backgrounds and take time to learn from and about one another on our informal Zoom hangouts.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta","Singapore"]},"createdAt":1714016329286,"descriptionPlain":"About the Role\n\nIf you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.\n","description":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt\">If you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.</span></div>","id":"88358de8-e37b-4bd6-9afe-359eea3128b9","lists":[{"text":"What You Will Do","content":"<li>Own feature development from end-to-end, constantly pair with junior engineers, and improve them.</li><li>Write code that's clear, concise, performant, tested, and easy to understand by other teams and engineers.</li><li>Contribute to the design and development of highly scalable, available, reliable, secure, and fault-tolerant services.</li><li>Try improving engineering standards, tooling, and processes after understanding our needs without jumping straight into standard practices.</li><li>Deep dive and debug production issues across services and levels of the stack when needed.</li><li>Coordinate and communicate with different internal/external teams daily—stay in close communication with the product manager and team lead to execute the feature roadmap efficiently.</li>"},{"text":"What You Will Need","content":"<li>Passion for software development</li><li>At least 4 years of relevant software development experience with consumer/merchant products; hands-on experience in developing, testing, and deploying applications</li><li>Ability to learn or use Java, Kotlin, and JS, proficiency in at least one of them</li><li>Understanding of concepts like HTTP/GRPC, idempotency, concurrency, database consistency and transactionality, asynchronous programming, fault tolerance and monitoring, performance, feature flags, and backward compatibility&nbsp;</li><li>Understanding of a mobile application’s interaction with the back-end and other systems</li><li>Deep understanding of relational databases; ability to design performant, easy-to-understand architectures, and know-how for applying changes with no downtime to production systems</li><li>Experience with monitoring tools and a good understanding of their concepts</li><li>Have some experience with infrastructure-related tools and concepts such as Kubernetes, Kafka, RDS, AWS, GCP</li>"}],"text":"Senior Software Engineer (Full Stack) - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div><span style=\"font-size: 10pt;\">If you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.</span></div>","descriptionBodyPlain":"About the Role\n\nIf you're looking to hone in on your engineering abilities and work on mission-critical high scalability distributed systems, this may be the job for you. As a Senior Software Engineer, your contributions will be crucial for the development of financial products. You will help shape the future of our Consumer Lending products, and more importantly, help millions of users meet their financial needs responsibly.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/88358de8-e37b-4bd6-9afe-359eea3128b9","applyUrl":"https://jobs.lever.co/GoToGroup/88358de8-e37b-4bd6-9afe-359eea3128b9/apply"},{"additionalPlain":"About The Team\n\nThe Accounting Policy and Complex Accounting Resolution is a specialized accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&A, and group restructuring activities. Our work is project / assignment-based and challenging even for experienced accounting professionals.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The Accounting Policy and Complex Accounting Resolution is a specialized accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&amp;A, and group restructuring activities. Our work is project / assignment-based and challenging even for experienced accounting professionals.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Singapore","team":"-","allLocations":["Singapore","Jakarta"]},"createdAt":1707317049688,"descriptionPlain":"About The Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div><div><br></div><div><br></div>","id":"245a0ec2-e5cf-421e-9646-70b079f115eb","lists":[{"text":"What You Will Do","content":"<li>Partner with the Finance Team of the business segments (On-Demand Services and Financial Technology Services) and the various internal stakeholders to provide technical accounting advice/recommendations on new initiatives, products, and services</li><li>Prepare technical papers regarding the applications of new/complex FRSs, new product launches, M&amp;A, and group restructuring activities</li><li>Liaise with external stakeholders on key accounting assessments</li><li>Implement Group Accounting Policies and align accounting policies across the entities</li><li>In charge of accounting operations such as fair value measurement, share-based compensation calculation, or impairment assessment.</li>"},{"text":"What You Will Need","content":"<li>Degree level qualification in Accounting / ACCAA (<b>Association of Chartered Certified Accountants</b>)</li><li>At  least 8 years of experience in Accounting / Financial Reporting roles</li><li>Passionate about accounting concepts and their applications</li><li>Strong knowledge of IFRS is mandatory</li><li>Able to manage multiple stakeholders across various levels of seniority and work independently with high attention to detail</li><li>Knowledge of US GAAP is a plus</li><li>Fluency in English (both written and spoken)</li><li>Ability to communicate in Bahasa Indonesia (verbal and written) is a plus</li><li>Prior working experience with SAP is a plus</li><li>Proficient in Office (PowerPoint, Excel, Word</li>"}],"text":"Senior Technical Accounting Manager","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About The Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/245a0ec2-e5cf-421e-9646-70b079f115eb","applyUrl":"https://jobs.lever.co/GoToGroup/245a0ec2-e5cf-421e-9646-70b079f115eb/apply"},{"additionalPlain":"About The Team\n\nWe are dedicated to fostering a vibrant culture and value work life balance. Our team thrives on dynamism, comprising individuals who are not only interesting but also exceptionally empathetic. At the heart of our ethos lies a deep appreciation for every aspect of your contribution - not just the tasks you will undertake, but also the unique qualities that make you who you are.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>We are dedicated to fostering a vibrant culture and value work life balance. Our team thrives on dynamism, comprising individuals who are not only interesting but also exceptionally empathetic. At the heart of our ethos lies a deep appreciation for every aspect of your contribution - not just the tasks you will undertake, but also the unique qualities that make you who you are.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1711090944722,"descriptionPlain":"About The Role\n\nWe are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.\n","description":"<div><b>About The Role</b></div><div><br></div><div>We are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.</div>","id":"a209e959-6eaf-4d0e-807a-42dcaffbaf91","lists":[{"text":"What you will do","content":"<li>Collaborate with the Transfer Pricing Manager and Head of Transfer Pricing on external and internal transfer pricing documentation.</li><li>Gain a deep understanding of the company's operations, including cost centers and basic operational processes.</li><li>Assist in the development and implementation of transfer pricing strategies to ensure compliance with local and international regulations.</li><li>Conduct thorough analysis and research to support transfer pricing recommendations.</li><li>Communicate effectively with cross-functional teams to gather necessary information and data for transfer pricing documentation.</li><li>Work independently while also contributing effectively to team projects and initiatives.</li>"},{"text":"What you will need","content":"<li>At least 2 years of transfer pricing experience preferably with a corporation or international accounting firm.</li><li>Bachelor's degree in Accounting, Finance, or related field. Advanced degree or professional certification (e.g., Brevet) is a plus.</li><li>Knowledge in CIT, VAT, and WHT is a plus.</li><li>Solid understanding of transfer pricing principles and methodologies.</li><li>Proficiency in English is essential, with excellent communication skills both written and verbal.</li><li>Ability to work effectively in a fast-paced environment and manage multiple priorities.</li><li>Strong analytical skills and attention to detail.</li><li>A proactive mindset with the ability to work both independently and collaboratively within a team.</li>"}],"text":"Senior Transfer Pricing","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>We are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.</div>","descriptionBodyPlain":"About The Role\n\nWe are seeking a highly skilled and motivated Transfer Pricing Senior Associate to join our team. As a Transfer Pricing Senior Associate, you will work directly with the Transfer Pricing Manager and Transfer Pricing Lead, playing a crucial role in shaping our organization's transfer pricing function.You will be part of a vibrant team who delivers highly tax-efficient transfer pricing planning solutions and ideas. Responsibilities include providing advice to simplify and structure global and cross-border operations to meet local best practices, preparing transfer pricing documentation, ensuring TP operational excellence and TP audit defense.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a209e959-6eaf-4d0e-807a-42dcaffbaf91","applyUrl":"https://jobs.lever.co/GoToGroup/a209e959-6eaf-4d0e-807a-42dcaffbaf91/apply"},{"additionalPlain":"About the Team\n\nAs a vital part of the Consumer Lending product team at GoTo Financial, you'll find yourself at the forefront of pioneering financial solutions. Our team is dedicated to crafting cutting-edge products that cater to the evolving needs of our customers. Joining us means not only being part of a dynamic and collaborative environment but also contributing to the innovation that defines our Consumer Lending offerings.\n\nOur team values collaboration as the driving force behind our success. Open communication channels are not just encouraged but are integral to our work culture, fostering knowledge exchange and problem-solving at every step. As a member of the Consumer Lending product team, you will play a key role in shaping the future of financial technology, delivering solutions that make a meaningful impact on the lives of our users. Join us in creating the next generation of Consumer Lending experiences at GoTo Financial.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team</b></div><div><br></div><div>As a vital part of the Consumer Lending product team at GoTo Financial, you'll find yourself at the forefront of pioneering financial solutions. Our team is dedicated to crafting cutting-edge products that cater to the evolving needs of our customers. Joining us means not only being part of a dynamic and collaborative environment but also contributing to the innovation that defines our Consumer Lending offerings.</div><div><br></div><div>Our team values collaboration as the driving force behind our success. Open communication channels are not just encouraged but are integral to our work culture, fostering knowledge exchange and problem-solving at every step. As a member of the Consumer Lending product team, you will play a key role in shaping the future of financial technology, delivering solutions that make a meaningful impact on the lives of our users. Join us in creating the next generation of Consumer Lending experiences at GoTo Financial.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705293453270,"descriptionPlain":"About the Role\n\nAs a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.\n\nIn this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.\n","description":"<div><b>About the Role</b></div><div><br></div><div>As a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.</div><div><br></div><div>In this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.</div>","id":"9b2d9240-3315-4b28-a7d6-73e2a097c8d7","lists":[{"text":"What You Will Do","content":"<li>Proactively monitor and troubleshoot system performance, identifying and addressing potential issues.</li><li>Collaborate with development teams to design and implement scalable and resilient system architectures.</li><li>Develop and maintain automation tools to streamline processes and enhance overall system efficiency.</li><li>Participate in incident response activities, conducting root cause analysis</li><li>Contribute to the ongoing improvement of reliability, scalability, and performance of critical infrastructure.</li><li>Work closely with cross-functional teams to align SRE efforts with broader organizational goals.</li>"},{"text":"What You Will Need","content":"<li>Solid understanding of cloud platforms such as GCP, and expertise in deploying and managing services within these environments.</li><li>In-depth knowledge of containerization technologies like Docker and orchestration tools such as Kubernetes</li><li>Proficiency in programming languages like Python, Go, or Java, with a strong software engineering foundation</li><li>Able to manage small teams and also can work as an individual contributor</li><li>Familiarity with Linux System, monitoring and logging tools to ensure comprehensive system visibility such as Prometheus, Grafana, and ELK stack</li><li>Proven track record of implementing and maintaining automation for deployment, scaling, and system orchestration.</li>"}],"text":"Site Reliability Engineer - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>As a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.</div><div><br></div><div>In this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.</div>","descriptionBodyPlain":"About the Role\n\nAs a Site Reliability Engineer (SRE) at GoTo Financial, you will assume a crucial role in guaranteeing the smooth operation and dependability of our systems. Your responsibilities will encompass the entire software development lifecycle, with a particular emphasis on the convergence of software engineering and infrastructure operations.\n\nIn this role, you'll be at the forefront of addressing intricate challenges, ranging from optimizing system performance to architecting scalable solutions. Over the initial six months, you will be pivotal in elevating system reliability, minimizing downtime, and implementing resilient monitoring and automation tools. Your influence will extend throughout the organization as you collaborate with cross-functional teams, contributing significantly to the overall stability and performance of our critical infrastructure. Join us in shaping the future of Consumer Lending technology at GoTo Financial.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/9b2d9240-3315-4b28-a7d6-73e2a097c8d7","applyUrl":"https://jobs.lever.co/GoToGroup/9b2d9240-3315-4b28-a7d6-73e2a097c8d7/apply"},{"additionalPlain":"About The Team\n\nConsumer Payments is part of GoTo’s financial services arm. Our team aims to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term.\n\nWe are responsible for building and growing the customers and payments made through GoPay. GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions of registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia. As part of the Consumer Experience team, you will be responsible for delivering essential solutions to help grow active GoPay users.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Consumer Payments is part of GoTo’s financial services arm. Our team aims to provide responsible and sustainable financial services to our users. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality of life, both in the present as well as in the long term.</div><div><br></div><div>We are responsible for building and growing the customers and payments made through&nbsp;GoPay. GoPay is South East Asia’s fastest-growing consumer payments and financial services app and serves tens of millions of registered users on a variety of payment avenues, providing the most convenient payment methods in South East Asia. As part of the Consumer Experience team, you will be responsible for delivering essential solutions to help grow active GoPay users.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1708018181037,"descriptionPlain":"About The Role\n\nThe role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in  Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.  As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>The role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in &nbsp;Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.&nbsp; As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.</div><div><br></div>","id":"a5869e9e-5306-478b-b1e0-1e3966143637","lists":[{"text":"What You Will Do","content":"<li>Attend daily standup meetings, participate in sprint planning, and conduct backlog reviews. During these sessions, you’ll communicate project and development status to internal and external teams in a timely fashion</li><li>Analyze and estimate product features from a testing perspective, collaborating closely with the Product Managers</li><li>Build, contribute, and maintain automated test suites and frameworks for both App and API using Java, JavaScript, or similar technologies</li><li>Effectively test product feature requirements, ensuring quality and functionality across Web, API, and mobile apps (Android and iOS)</li><li>Work closely with Business, Product, and Dev teams, fostering coordination and alignment</li>"},{"text":"What You Will Need","content":"<li>At least 3 years of professional testing experience in API and Web testing using RestAssured with Java, Appium (Android &amp; iOS), or Selenium (or similar frameworks). Additionally, familiarity with service virtualization and WebServices-API testing through tools like POSTMAN is essential.</li><li>Basic knowledge of Java, along with an understanding of test parallelization for APIs and applications, cross-browser coverage, and Selenium with Java. Experience with reporting plugins such as Allure or Extent is a plus.</li><li>Hands-on experience with Rest Assured, Selenium/Appium, Intellij, and TestNG (or similar frameworks).</li><li>Agile, Scrum, or Kanban experience, as you’ll collaborate with cross-functional teams.</li><li>Experience in continuous integration (CI) and continuous testing (CT) using Jenkins or similar tools (e.g., Git or GitLab).</li><li>Strong analytical, problem-solving, and debugging skills to excel in this role.</li>"}],"text":"Software Development Engineer in Test - API Automation","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>The role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in &nbsp;Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.&nbsp; As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nThe role of an SDET is crucial in ensuring the quality and reliability of software applications. If you possess extensive expertise in  Backend Testing, API automation with any of Rest Assured/ HTTP client, or Android/iOS automation testing with Appium, then this is an opportunity you shouldn't miss.  As a QA Engineer, your primary responsibility is to execute comprehensive testing strategies for mobile applications, ensuring seamless functionality, performance, and reliability across diverse platforms.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/a5869e9e-5306-478b-b1e0-1e3966143637","applyUrl":"https://jobs.lever.co/GoToGroup/a5869e9e-5306-478b-b1e0-1e3966143637/apply"},{"additionalPlain":"The GoTo Passport profile team is responsible for the common profile for a person/user which connects all of their GoTo accounts/experiences together. We enable customers to sign up easily across different GoTo applications with the least friction and also empower them to update their personal information via a common profile management experience - cutting across all the apps. For example, gone are the days when users had to update their contact details separately in each of the GoTo Apps. In addition, we are a key enabler for SSO (Single sign-on) login across different GoTo apps, and making the sign-up process easy across apps - further reducing friction in how easily users can enjoy access to different services like shopping, mobility, food delivery, payments etc.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">The GoTo Passport profile team is responsible for the common profile for a person/user which connects all of their GoTo accounts/experiences together. We enable customers to sign up easily across different GoTo applications with the least friction and also empower them to update their personal information via a common profile management experience - cutting across all the apps. For example, gone are the days when users had to update their contact details separately in each of the GoTo Apps. In addition, we are a key enabler for SSO (Single sign-on) login across different GoTo apps, and making the sign-up process easy across apps - further reducing friction in how easily users can enjoy access to different services like shopping, mobility, food delivery, payments etc.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1699518116213,"descriptionPlain":"As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.\n","description":"<div><span style=\"font-size: 10pt\">As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.</span></div>","id":"7b97ddd0-2314-4d1a-8440-fc9a9fc5111c","lists":[{"text":"What will you do ","content":"<li>Develop and execute comprehensive test plans and test cases to ensure software quality and functionality.</li><li>Conduct exploratory testing to identify potential areas of improvement and areas that might not be covered by existing test cases.</li><li>Collaborate with cross-functional teams, including developers, product managers, and business analysts, to understand requirements and design effective testing strategies.</li><li>Perform manual and automated testing, including functional, regression, and performance testing.</li><li>Identify, document, and prioritize software defects and issues, and work closely with developers to facilitate their resolution.</li><li>Collaborate with product owners to ensure user stories and acceptance criteria are well-defined and testable.</li><li>Assist in load testing, scalability testing, and other non-functional testing as required.</li>"},{"text":"What will you need ","content":"<li>Bachelor's degree in Computer Science, Information Technology, or related field preferred.</li><li>Minimum of 3 years of professional experience in quality assurance or software testing roles.</li><li>Demonstrated experience in creating, executing, and managing test cases and test plans.</li><li>Proficiency with automation tools and scripting languages such as Selenium, Python, or Java.</li><li>Familiarity with bug tracking and management systems like JIRA.</li><li>Excellent communication skills to effectively collaborate with cross-functional teams, developers, and stakeholders.</li><li>Familiarity with API testing and tools like Postman or SoapUI.</li><li>Strong attention to detail and a commitment to delivering high-quality software.</li>"}],"text":"Software Development Engineer in Test KYC","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.</span></div>","descriptionBodyPlain":"As a Quality Assurance (QA) professional within the Shared Consumer Platform(SCP) team, responsible for supporting all GoTo Applications(Gojek, Tokopedia, and Gopay), you will collaborate closely with stakeholders such as Developers, Product Managers, and Designers. Your role will involve partnering with these teams to ensure the creation of high-quality user experiences and seamless functionalities for our users.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7b97ddd0-2314-4d1a-8440-fc9a9fc5111c","applyUrl":"https://jobs.lever.co/GoToGroup/7b97ddd0-2314-4d1a-8440-fc9a9fc5111c/apply"},{"additionalPlain":"About the Team\n\nGojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Gojek’s Data Science Platform team helps Data Scientists build production-scale ML applications easily. We are a team of about 10 ML and infrastructure engineers, spread across Indonesia and Singapore. You may know us as the creators of open-source MLops technologies such as Feast, Merlin and Turing. Our products are used in mission-critical parts of Gojek’s product offerings, such as driver allocation, food recommendations, and fraud prevention.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716357496028,"descriptionPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","id":"3c6bca98-cc50-43be-bafd-46ea1ab35594","lists":[{"text":"What You Will Do","content":"<li>Design and build our Machine Learning Platform to help Data Scientists productionize their models and features faster</li><li>Engineer high-reliability, high-performance services for sophisticated ML-driven functionality</li><li>Collaborate with Data Scientists to optimize ML models for high-throughput, low-latency use cases</li><li>Build internal tools and interfaces to improve the productivity of the team and improve the accessibility of our products</li>"},{"text":"What You Will Need","content":"<li>At least 2-3+ years as a Software Engineer, with fluency and experience in either Go, Python, or Java</li><li>Proven track-record building large-scale, high-throughput, low-latency production systems</li><li>Prior experience developing for and debugging Big Data and stream processing frameworks such as Spark, Kafka, and Flink is a plus</li><li>Good understanding of algorithms and data structures/ design patterns</li><li>Passion for Agile software development practices such as test-driven development, pair programming, etc.</li><li>Experience with relational databases, non-relational databases, cloud environments and cloud deployment technology (Terraform, Kubernetes, Helm)</li><div><br></div>"},{"text":"Bonus Points If","content":"<li>You have working knowledge of ML frameworks such as TFX, Kubeflow, and MLflow</li><li>You have Data Science knowledge and familiarity with ML libraries such as Pandas, Scikit, Tensorflow, XGBoost, Keras</li>"}],"text":"Software Engineer - Data Science Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Data Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.</span></div><div><br></div><div><span style=\"font-size: 16px\">Most companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.</span></div><div><br></div><div><span style=\"font-size: 16px\">You will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nData Scientists want to spend their time exploring data, crafting the right features and optimising their models… so far so good. Production requires a lot more though. What about the data pipelines? Scaling up infrastructure based on demand? Running experiments at scale? Feature data consistency? This is where you come in as a Software Engineer for Gojek’s ML platform.\n\nMost companies embed ML engineers in data science teams to solve these problems. We do things a little differently at Gojek. We build self-service products for data scientists so they don’t have to worry about deep engineering problems. Create your model and submit it to us, our platform will scale it up/down for you.\n\nYou will be joining a team that has already built industry-leading open-source tools. Our team invented Feast which companies like Twitter and Shopify now use. MLOps is changing fast, we’re looking for engineers who are keen to build the next big thing in MLOps.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3c6bca98-cc50-43be-bafd-46ea1ab35594","applyUrl":"https://jobs.lever.co/GoToGroup/3c6bca98-cc50-43be-bafd-46ea1ab35594/apply"},{"additionalPlain":"About the Team \n\nGoFood is the Food vertical of Gojek, which enables users to order food from restaurants via it's Android & iOS app. This mission of GoFood is to provide its customer with the best possible selection of food at the most affordable price. GoFood is also the marketplace of restaurants to list their food items and increase their sales. GoFood also has its own fleet of drivers with an app where they can accept the food orders and earn their daily income.So overall it's an ecosystem consisting of consumers, merchants and drivers which GoFood manages with the ultimate aim of providing the best user experience to consumers and growth for merchant and driversOur team oversees GoFood's growth, in particular, which encompasses the growth of our user base and merchant-partner family. Some of the questions we tackle on a daily basis include: \"How do we ease discovery of discounts for users across GoFood touch points?\", \"How do we personalize discounts for users based on their preferences?\", \"How do we integrate ML models into our GoFood business to auto-generate discounts?\" and \"How do we enable merchant-partners to create discounts with minimal steps while increasing their ROI?\"\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b><span style=\"font-size: 16px\">&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">GoFood is the Food vertical of Gojek, which enables users to order food from restaurants via it's Android &amp; iOS app. This mission of GoFood is to provide its customer with the best possible selection of food at the most affordable price. GoFood is also the marketplace of restaurants to list their food items and increase their sales. GoFood also has its own fleet of drivers with an app where they can accept the food orders and earn their daily income.So overall it's an ecosystem consisting of consumers, merchants and drivers which GoFood manages with the ultimate aim of providing the best user experience to consumers and growth for merchant and driversOur team oversees GoFood's growth, in particular, which encompasses the growth of our user base and merchant-partner family. Some of the questions we tackle on a daily basis include: \"How do we ease discovery of discounts for users across GoFood touch points?\", \"How do we personalize discounts for users based on their preferences?\", \"How do we integrate ML models into our GoFood business to auto-generate discounts?\" and \"How do we enable merchant-partners to create discounts with minimal steps while increasing their ROI?\"</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710905657567,"descriptionPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.</span></div>","id":"2db27f2b-d849-41c8-9273-5ba2541dece6","lists":[{"text":"What You Will Do","content":"<li>Be responsible for the end-to-end development and delivery of small to medium size features and services to power core GoFood business</li><li>Communicate, collaborate and work effectively across all the pods in your team.</li><li>Improves the development experience at GOJEK by enhancing development tools, test coverage, and/or code structure.</li><li>Implements code that is clear, concise, performant, tested, and easily understood by others</li><li>You are responsible for the entire lifecycle of stories: development, test, production, and subsequent fixes and improvements</li><div><br></div>"},{"text":"What You Will Need","content":"<li>At least 2 years relevant software development experience through internship stint and/or college projects</li><li>Good skill in design, development, testing and deploying applications on Golang or Erlang or Ruby or Java large-scale applications</li><li>Has an in-depth understanding of at least one programming language and framework</li><li>Proficient in OOP, SQL, Data structures and Algorithms</li><li>Data modeling experience in Relational databases</li><li>Ability to scope, review and refine user stories for technical completeness and to alleviate dependency risk</li><div><br></div>"}],"text":"Software Engineer ( Backend) - GoFood","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px;\">Roll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride.&nbsp;As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.</span></div>","descriptionBodyPlain":"About the Role \n\nRoll up your sleeves and climb on board if you’re ready to be our next Software Engineer. In this role, you will be an integral player for Backend Engineering at Gojek - designing and developing highly scalable, reliable, maintainable and fault tolerant systems for our discounting engines powering GoFood .The Product and Operations team will be your companions on this ride. As a member of the GoFood Growth team, you will be building the best discounting experience for GoFood's Users. You will also contribute to the merchant side by exposing these tools in a self-serve manner.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2db27f2b-d849-41c8-9273-5ba2541dece6","applyUrl":"https://jobs.lever.co/GoToGroup/2db27f2b-d849-41c8-9273-5ba2541dece6/apply"},{"additionalPlain":"About the team \n\nOur team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.\n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team </b></div><div><br></div><div>Our team works to provide responsible and sustainable financial services to millions of Indonesians. Partnering with other teams in Tokopedia and Gojek, we aim to build the best experience for our users looking for a convenient and safe way to access credit. Though we’re spread across Indonesia, India, and Singapore, we enjoy collaborative development with fast feedback cycles and prefer making pragmatic decisions despite working under many business and regulatory constraints. We work in a highly supportive work environment where we never hesitate to help each other out, unblock barriers, and have fun along the way. We love bonding over our catch-up sessions, where we learn about each other's cultures.</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"FinTech - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713777541586,"descriptionPlain":"About the Role \n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.\n","description":"<div><b>About the Role </b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.</div>","id":"ad7a1160-4d07-4f4a-a2d3-c362afac18ac","lists":[{"text":"What You Will Do","content":"<li>Responsible for developing Java backend applications for the company, with proficiency in Java language and expertise in mainstream frameworks such as Spring, Spring Boot, MyBatis and MySQL</li><li>Contribute to the full lifecycle of the Middle Platform's core system construction, including requirement analysis, solution design, and iterative system optimization</li>"},{"text":"What You Will Need","content":"<li>Bachelor's degree or above in Computer Science or a related major</li><li>4+ years of Java development experience, those with large-scale project development experience are preferred</li><li>Familiar with mainstream frameworks like Spring, Spring Boot, and MyBatis</li><li>Familiar with Linux operating systems, understand database principles, and proficient in using databases like MySQL and Oracle</li><li>Good coding style and code specifications, and be able to independently complete project development</li><li>Good communication skills and teamwork spirit, and be able to collaborate effectively with other developers</li><li>knowledge of container orchestration technologies like Docker and Kubernetes, and be able to use them for application deployment and management.</li>"}],"text":"Software Engineer (Backend) - Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>We are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.</div>","descriptionBodyPlain":"About the Role \n\nWe are looking for an experienced Software Engineer to join our engineering team at GoTo Financial. You will be responsible for designing and building high-performance fintech applications. As a senior engineer, you will work on our flagship products across Goto, including Gojek, GoPay, and Tokopedia, ensuring our millions of users get the best experience.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ad7a1160-4d07-4f4a-a2d3-c362afac18ac","applyUrl":"https://jobs.lever.co/GoToGroup/ad7a1160-4d07-4f4a-a2d3-c362afac18ac/apply"},{"additionalPlain":"About the Team \n\nOur Transport team is a big family of 100+ members made up of engineers and product managers spread out across Jakarta, Bangalore, Singapore, and Vietnam. We run Southeast Asia’s leading and fastest-growing ride-hailing business and oversee all things related to our riders and driver-partners' needs in daily transport and work daily to create solutions to these issues. It’s our job to ensure that our Transport services run seamlessly from the inside out.\n\nOur team recently figured out that our existing third-party SDK for in-app live tracking of vehicles was not operating as smoothly as we had expected. So, guess what? We fixed this by building our own live tracking SDK - Navic. Right now, our team has been busy working on projects that aim to effectively grow our user base in the region (and beyond!).\n\nWe, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing online games like Among Us and Sketchful, or catching up with each other on our virtual hangouts. We work as a team to get our job done well, and genuinely enjoy each other's company.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team </b></div><div><br></div><div><span style=\"font-size: 16px\">Our Transport team is a big family of 100+ members made up of engineers and product managers spread out across Jakarta, Bangalore, Singapore, and Vietnam. We run Southeast Asia’s leading and fastest-growing ride-hailing business and oversee all things related to our riders and driver-partners' needs in daily transport and work daily to create solutions to these issues. It’s our job to ensure that our Transport services run seamlessly from the inside out.</span></div><div><br></div><div><span style=\"font-size: 16px\">Our team recently figured out that our existing third-party SDK for in-app live tracking of vehicles was not operating as smoothly as we had expected. So, guess what? We fixed this by building our own live tracking SDK - Navic. Right now, our team has been busy working on projects that aim to effectively grow our user base in the region (and beyond!).</span></div><div><br></div><div><span style=\"font-size: 16px\">We, the Transporters, know how to work hard and play hard. When we aren’t busy working, you’d probably find us playing online games like Among Us and Sketchful, or catching up with each other on our virtual hangouts. We work as a team to get our job done well, and genuinely enjoy each other's company.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713521223842,"descriptionPlain":"About the Role \n\nAt Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.\nThe person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests. \n","description":"<div><b style=\"font-size: 16px\">About the Role&nbsp;</b></div><div><br></div><div><span style=\"font-size: 16px\">At Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.</span></div><div><span style=\"font-size: 16px\">The person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests.&nbsp;</span></div>","id":"331177df-4294-4bc1-93a4-6459ff18ef97","lists":[{"text":"What You Will Do","content":"<li>Own product development on functional and non-functional requirements, OKRs, and improvements to code quality across the team</li><li>Design and develop low latency, high throughput systems with minimal guidance</li><li>Be responsible for ensuring the quality and timeliness of deliverables for the team</li><li>Be a self-learner when it comes to technology and work with the team to collaborate on the engineering initiatives as the products go through the evolution cycle</li><li>Own the entire lifecycle of feature development, test, deployment, fixes and improvements</li><li>Work with tech leads, product managers and other stakeholders to continuously work towards progressing on the group’s and organization’s goals</li><li>Write code that is clear, concise, performant, tested and easily understood by others</li><li>Communicate, collaborate and work effectively across cross-functional teams in a global environment</li>"},{"text":"What You Will Need","content":"<li>At least 2 years of experience in designing, developing, testing and deploying applications with Golang/Java/Ruby. Proficient in OOP, SQL, Design Patterns</li><li>Experience with functional programming, data modeling experience in Relational and/or NoSQL databases is a plus&nbsp;</li><li>Well-versed with agile methodologies</li><li>Hands on knowledge of unit testing methodologies and frameworks</li><li>Experience troubleshooting server performance - memory issues, GC tuning, resource leaks</li><li>Experience working in technologies like Kafka, RabbitMQ, Postgres, MySql, Redis, Aerospike, or similar</li>"}],"text":"Software Engineer (Backend) - Transport","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role&nbsp;</b></div><div><br></div><div><span style=\"font-size: 16px;\">At Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.</span></div><div><span style=\"font-size: 16px;\">The person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests.&nbsp;</span></div>","descriptionBodyPlain":"About the Role \n\nAt Gojek, engineering is central to everything we do to bring cheer to the lives of millions. In this role, you will be part of Gojek’s transport engineering team, building some of the most critical products for our consumers. As a Software Engineer in Gojek, you will be responsible for building systems and products across the various areas of business for Gojek Transport. Your ownership, drive, and passion would help provide for a world-class user experience and stability of Transport products for mobility or people and packages.\nThe person should be passionate about maintaining a clean and maintainable codebase. Your primary focus will be the development of distributed systems and services that are fault-tolerant, highly performant and responsive to high throughput client requests. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/331177df-4294-4bc1-93a4-6459ff18ef97","applyUrl":"https://jobs.lever.co/GoToGroup/331177df-4294-4bc1-93a4-6459ff18ef97/apply"},{"additionalPlain":"About the Team\n\nGojek’s Groceries vertical - GoMart, launched amid Covid to deliver fresh and packaged daily staples to our users through an on demand, instant delivery experience. The groceries product group is working to build the leading online grocery ecosystem in Indonesia. GoMart, the B2C online grocery service, has grown to be the leader in delivering convenience items to our consumers in major cities across Indonesia. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone and everything can move independently. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">Gojek’s Groceries vertical - GoMart, launched amid Covid to deliver fresh and packaged daily staples to our users through an on demand, instant delivery experience. The groceries product group is working to build the leading online grocery ecosystem in Indonesia. GoMart, the B2C online grocery service, has grown to be the leader in delivering convenience items to our consumers in major cities across Indonesia. We welcome people from all backgrounds who seek the opportunity to help build a future where everyone and everything can move independently. If you have the curiosity, passion for technology, and collaborative spirit work with us and let's solve the problems with technology.</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713518609186,"descriptionPlain":"About the Role\n\nAre you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">Are you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.</span></div>","id":"9fa9af02-5e5c-4812-b98f-fba1a5041b25","lists":[{"text":"What You Will Do","content":"<li>Design, build and improve the mobile experiences for one of the world's fastest growing mobile apps</li><li>Partner with the product management team to define and execute the feature roadmap</li><li>Coordinate with cross functional teams (Backend, DevOps, Design etc.) on planning and execution</li><li>Proactively manage stakeholders communication related to deliverables, risks, changes and dependencies</li><li>Communicate, collaborate and work effectively across cross functional teams in a global environment</li>"},{"text":"What You Will Need","content":"<li>1-2+ years of experience with iOS development</li><li>In-depth knowledge of iOS Apps architecture (MVVM/VIPER) and implementation including proficiency in Swift programming, Cocoa, Xcode and the iOS SDK</li><li>A Bachelor’s/Master’s degree in Computer Science</li><li>Ability to write model code for functional and nonfunctional requirements and help improve the code quality standard across the team</li><li>Good to have experience with popular libraries for networking, async, image loading etc</li>"}],"text":"Software Engineer (iOS) - Groceries","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">Are you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.</span></div>","descriptionBodyPlain":"About the Role\n\nAre you interested in solving deep user experience problems? Are you looking to build features which will be used by millions of customers everyday? Do you want to work with an amazing team? Then, this may be the role for you. As a member of the Groceries team, you will be building the best user experience for Gojek's users for iOS App. You would primarily focus on Gomart screen redesign, development, performance, analytics Metrics.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/9fa9af02-5e5c-4812-b98f-fba1a5041b25","applyUrl":"https://jobs.lever.co/GoToGroup/9fa9af02-5e5c-4812-b98f-fba1a5041b25/apply"},{"additionalPlain":"About the team\n\nThe GoTo Procurement Team formed from Gojek & Tokopedia Team. The gist of our role is to contribute to annual cost optimization within GoTo following the GoTo Procurement Policy and build strong relationships both with internal stakeholders and vendors. We collaborate alongside many teams across the organization.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">About the team</span></div><div><br></div><div><span style=\"font-size: 10pt\">The GoTo Procurement Team formed from Gojek &amp; Tokopedia Team. The gist of our role is to contribute to annual cost optimization within GoTo following the GoTo Procurement Policy and build strong relationships both with internal stakeholders and vendors. We collaborate alongside many teams across the organization.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1705996826298,"descriptionPlain":"About the Role\n\nYou will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group. \n","description":"<div><b>About the Role</b></div><div><br></div><div>You will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &amp;, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group.&nbsp;</div>","id":"4ccd018d-cb4e-489d-8b12-b120b364a6ce","lists":[{"text":"What You Will Do","content":"<li>Support Sourcing Procurement Supervisor through value creation of cost reduction and cost avoidance initiatives project</li><li>Execute all incoming sourcing requests and validate financial attributes&nbsp;</li><li>Maintain relationships with country vendors, to support GoTo Group's positioning in the market</li><li>Achieve provided annual saving target, both Cost Avoidance and Cost Reduction</li><li>Prepare procurement documentation for each sourcing activity</li><li>Become the ambassador of Procurement value creation and build relationships with Businesses to ensure Early Procurement Involvement</li>"},{"text":"What You Will Need","content":"<li>Bachelor of business, supply chain management, or any other related field (knowledge of related markets i.e marketing &amp; general office expenditures ), preferably has been working in procurement too (1-2 years)&nbsp;</li><li>Fresh Graduate are welcome</li><li>Strong business and commercial mindset</li><li>Excellent negotiation, organizational, and collaboration skills</li><li>Excellent interpersonal and communication skills and advanced in verbal and written English</li><li>Excellent project management skills</li><li>Have a basic understanding of certain areas (i.e: finance, accounting, tax, and legal)</li>"}],"text":"Sourcing Specialist (Singapore)","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>You will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &amp;, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group.&nbsp;</div>","descriptionBodyPlain":"About the Role\n\nYou will be part of the HoldCo Procurement team based in Singapore overseeing all OpCo under GoTo Group &, focusing on executing projects related to Procurement Operations (maintenance, business process improvement, and technology adoption), while working with cross-functional stakeholders across the Group. \n","hostedUrl":"https://jobs.lever.co/GoToGroup/4ccd018d-cb4e-489d-8b12-b120b364a6ce","applyUrl":"https://jobs.lever.co/GoToGroup/4ccd018d-cb4e-489d-8b12-b120b364a6ce/apply"},{"additionalPlain":"About the Team \n\nMxT(Mobile Excellence and Tooling) is the mobile platform team at Gojek. We build small tools and standardize processes, SDKs so that product engineers can focus on Product Features. The team acts as a Center of Excellence for app performance and mobile security along with improving mobile engineers' developer experience and productivity (working in teams like GoRide, GoFood, Transport, GoPartner, etc).\n\nCore areas that we focus on - \nDeveloper Experience and Tooling: We are a super app consisting of 22 products, each big enough to be a startup on its own. Apart from this, we have equally feature-rich driver and merchant apps. This pod is on a mission to evaluate build systems and migrate to them to get granular control on how we build our apps and the time required for the same. Reliability of CI infra for mobile apps and automated PR feedback are also the responsibilities of this team.\n\nFoundation and Building Blocks: This team works on creating common frameworks, as in NetworkSDK, Clickstream, etc, which internal products use to build upon and code generators for boilerplates. The team also takes care of making sure the Gojek app performance is top-notch and industry-leading!\n\nApp Excellence and Insights Tooling: The purpose of the App Excellence and Insights Team is to drive the success of our mobile applications by enabling teams to better monitor, maintain, and improve performance and providing data-driven insights to inform decision-making. We will identify areas for improvement, and provide recommendations to enhance app performance and ultimately user satisfaction. \n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team </b></div><div><br></div><div><span style=\"font-size: 16px\">MxT(Mobile Excellence and Tooling) is the mobile platform team at Gojek. We build small tools and standardize processes, SDKs so that product engineers can focus on Product Features. The team acts as a Center of Excellence for app performance and mobile security along with improving mobile engineers' developer experience and productivity (working in teams like GoRide, GoFood, Transport, GoPartner, etc).</span></div><div><br></div><div><b style=\"font-size: 16px\">Core areas that we focus on - </b></div><div><b style=\"font-size: 16px\">Developer Experience and Tooling: </b><span style=\"font-size: 16px\">We are a super app consisting of 22 products, each big enough to be a startup on its own. Apart from this, we have equally feature-rich driver and merchant apps. This pod is on a mission to evaluate build systems and migrate to them to get granular control on how we build our apps and the time required for the same. Reliability of CI infra for mobile apps and automated PR feedback are also the responsibilities of this team.</span></div><div><br></div><div><b style=\"font-size: 16px\">Foundation and Building Blocks:</b><span style=\"font-size: 16px\"> This team works on creating common frameworks, as in NetworkSDK, Clickstream, etc, which internal products use to build upon and code generators for boilerplates. The team also takes care of making sure the Gojek app performance is top-notch and industry-leading!</span></div><div><br></div><div><b style=\"font-size: 16px\">App Excellence and Insights Tooling: </b><span style=\"font-size: 16px\">The purpose of the App Excellence and Insights Team is to drive the success of our mobile applications by enabling teams to better monitor, maintain, and improve performance and providing data-driven insights to inform decision-making. We will identify areas for improvement, and provide recommendations to enhance app performance and ultimately user satisfaction.&nbsp;</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1697010103248,"descriptionPlain":"About the Role \n\nWe are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. \n\nInitially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.\n","description":"<div><b style=\"font-size: 16px\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px\">We are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. </span></div><div><br></div><div><span style=\"font-size: 16px\">Initially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.</span></div>","id":"3dd90bbb-893d-4f4e-bcb1-d328a1e3696b","lists":[{"text":"What You Will Do ","content":"<li>Work closely with product engineers across multiple Android apps, to unify the build standards</li><li>Continue pushing the limits to make sure engineers have better experience with Android Studio</li><li>Measure and Identify bottlenecks in the current build system and fix them over time</li><li>Forecast and work towards future-proofing Android platform engineering services</li><li>Resolves disputes and makes tradeoffs keeping a balance between delivery and tech</li><li>Define and drive best engineering practices in alignment with all product groups.</li>"},{"text":"What You Will Need ","content":"<li>3+ years of mobile engineering experience with Android as primary expertise</li><li>Hands-on engineer with a focus on writing easy-to-read code than over-engineering</li><li>Should have worked on projects (preferably Frameworks/SDKs) that involve collaborating with multiple teams&nbsp;</li><li>Well-versed in architectural approaches, testing, and performance when it comes to building mobile apps</li><li>Passion for building scalable and composable systems that would last long</li><li>Participating and ability to make decisions in the architecture design review</li><li>Prioritizes and values work that is underrated but increases the predictability, quality &amp; throughput of delivery</li><li>Escalates challenges that are outside their control but affect the squad’s delivery</li><li>Prioritize work based on understanding the trade-off between quality, tech-debt, and delivery.</li>"}],"text":"Sr. Software Engineer (Android) - Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role </b></div><div><br></div><div><span style=\"font-size: 16px;\">We are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. </span></div><div><br></div><div><span style=\"font-size: 16px;\">Initially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.</span></div>","descriptionBodyPlain":"About the Role \n\nWe are seeking a Senior Android Engineer who has a passion for solving engineering challenges such as enhancing the build system, optimizing app performance, refining platform tools, and creating internal frameworks for reusable code. We are looking for someone with experience in collaborating within distributed teams of at least three Android developers and who enjoys advocating for innovative engineering concepts. This engineer will be part of a mobile platform team responsible for setting engineering direction and developing foundational components for over 100+ Android engineers. \n\nInitially, your focus will be improving the mobile build system currently using Gradle. Your tasks will include enhancing build performance, implementing automation to streamline the development process for product developers, and working on automation for code analysis, various test frameworks, and enhancements to the CI pipeline, among other responsibilities.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/3dd90bbb-893d-4f4e-bcb1-d328a1e3696b","applyUrl":"https://jobs.lever.co/GoToGroup/3dd90bbb-893d-4f4e-bcb1-d328a1e3696b/apply"},{"additionalPlain":"About the Team\n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks\n\nYou get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation. \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks</span></div><div><br></div><div><span style=\"font-size: 16px\">You get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation.&nbsp;</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1698661125170,"descriptionPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","id":"424adaad-e517-4b70-85f6-d23e50955f7f","lists":[{"text":"What You Will Do","content":"<li>Automate mechanism to make sure app performance adheres to the standards set internally</li><li>Building tools that would alleviate mobile engineer's development experience and productivity&nbsp;</li><li>Build dashboard and alerting system around mobile app performance (using tools like Firebase, Instabug, etc)</li><li>Foster a development culture that focuses on the quality of delivery</li><li>Creating and maintaining SDKs like networking, logging, etc. These sdk’s are responsible for providing common solutions to products across all iOS mobile teams</li><li>Continuously discover, evaluate, and implement new technologies to maximize development efficiency</li><li>Create excellent, clear, and insightful documentation ex: guidelines, best practices, how-to, FAQs etc</li>"},{"text":"What You Will Need","content":"<li>Atleast 3+ years of mobile engineering experience with iOS as primary expertise</li><li>Should have worked on projects (preferably Frameworks/SDKs) that involve collaborating with multiple teams&nbsp;</li><li>Ability to can take (or pitch) technical decisions, own it and raise impediments early if needed</li><li>You are very well versed in architectural approaches, testing, and performance when it comes to building mobile apps</li><li>You have a passion for building scalable and composable systems that would last long</li><li>You are a hands-on engineer with a focus on writing easy to read code than over-engineering</li><li>You are a great communicator who can express your ideas clearly and build consensus to push technical agendas</li>"}],"text":"Sr. Software Engineer (iOS) - Engineering Platform","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/424adaad-e517-4b70-85f6-d23e50955f7f","applyUrl":"https://jobs.lever.co/GoToGroup/424adaad-e517-4b70-85f6-d23e50955f7f/apply"},{"additionalPlain":"About the Team\n\nWe are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks\n\nYou get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation. \n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">We are the heart of Gojek, the group that owns, improves, and manages Gojek's engineering productivity, reliability, and observability across the board. We are responsible for the pillars of technology, science, and strategy across engineering, powering over 500+ microservices at Gojek. We leverage cutting edge technology in cloud computing managing real-time high throughput systems with a wide range of programming stacks</span></div><div><br></div><div><span style=\"font-size: 16px\">You get to work with an insanely driven and proud team of engineers who deliver fundamental functionality to enable multiple product groups at Gojek to deal with scenarios at a really interesting combination of scale and complexity. Go-Jek has grown exponentially in the past couple of years, resulting in an explosive growth of tech stack and infrastructure. Our DevOps team is focused on the task of heavy lifting and supporting the engineering platform in terms of scalability, efficiency and automation.&nbsp;</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Technology","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1713436041495,"descriptionPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","id":"e2bbb29c-85ef-4db2-9ea7-93af9101b634","lists":[{"text":"What You Will Do","content":"<li>Automate mechanism to make sure app performance adheres to the standards set internally</li><li>Building tools that would alleviate mobile engineer's development experience and productivity&nbsp;</li><li>Build dashboard and alerting system around mobile app performance (using tools like Firebase, Instabug, etc)</li><li>Foster a development culture that focuses on the quality of delivery</li><li>Creating and maintaining SDKs like networking, logging, etc. These sdk’s are responsible for providing common solutions to products across all iOS mobile teams</li><li>Continuously discover, evaluate, and implement new technologies to maximize development efficiency</li><li>Create excellent, clear, and insightful documentation ex: guidelines, best practices, how-to, FAQs etc</li>"},{"text":"What You Will Need","content":"<li>Atleast 3+ years of mobile engineering experience with iOS as primary expertise</li><li>Should have worked on projects (preferably Frameworks/SDKs) that involve collaborating with multiple teams&nbsp;</li><li>Ability to can take (or pitch) technical decisions, own it and raise impediments early if needed</li><li>You are very well versed in architectural approaches, testing, and performance when it comes to building mobile apps</li><li>You have a passion for building scalable and composable systems that would last long</li><li>You are a hands-on engineer with a focus on writing easy to read code than over-engineering</li><li>You are a great communicator who can express your ideas clearly and build consensus to push technical agendas</li>"}],"text":"Sr. Software Engineer (iOS) - Engineering Platform","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">We are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.</span></div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role\n\nWe are looking for a Senior iOS Engineer who loves to tackle engineering problems like, app performance, platform tooling, and building internal frameworks for code reuse. One who has worked on a large codebase in distributed teams with more than 3 iOS devs and enjoys evangelizing engineering ideas. The engineer would be working on the mobile platform team that is responsible for providing engineering direction and building blocks to more than 80+ iOS engineers.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/e2bbb29c-85ef-4db2-9ea7-93af9101b634","applyUrl":"https://jobs.lever.co/GoToGroup/e2bbb29c-85ef-4db2-9ea7-93af9101b634/apply"},{"additionalPlain":"About the team\n\nThe partnerships team is responsible for building strong relationships with key partners to help Gojek increase brand awareness, attain new customers, and generate new revenue. We work with all business units and functions across Gojek to establish mutually beneficial partnerships that are both product-centric and commercially sound to enhance our consumer’s experience and/or generate additional revenue for the group.\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b></div><div><br></div><div>The partnerships team is responsible for building strong relationships with key partners to help Gojek increase brand awareness, attain new customers, and generate new revenue. We work with all business units and functions across Gojek to establish mutually beneficial partnerships that are both product-centric and commercially sound to enhance our consumer’s experience and/or generate additional revenue for the group.</div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713233450903,"descriptionPlain":"About the Role \n\nAs a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives. \nThis role will be based in Indonesia and will report directly to the Head of Partnerships. Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.\n\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>As a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives.&nbsp;</div><div>This role will be based in Indonesia and will report directly to the Head of Partnerships.&nbsp;Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.</div><div><br></div><div><br></div>","id":"2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2","lists":[{"text":"What you will do","content":"<li>Manage and grow existing partnerships with key strategic partners and key accounts for Gojek within financial institutions, telcos, and retail industries</li><li>Drive the end-to-end strategic business development initiatives - identifying the potential collaboration areas, formulating the partnership strategy, and ensuring the strategic commitments are fully optimized and delivered</li><li>Lead the research, identification, prioritization, and execution of new partnership opportunities to help Gojek achieve increased brand awareness, new customers, and new revenue</li><li>Translate the partnership ideation and objectives into a joint business plan between Gojek's business unit with key strategic partners</li><li>Execute the project implementation &amp; coordination with both internal and external stakeholders by developing an efficient framework for seamless team collaboration, which includes aligning project prioritization, timeline, and problem-solving</li><li>Review and analyze the performance of partnerships after each campaign and advise opportunities for improvements &amp; further developments.</li><li>Be the point of coordination between Gojek product-function groups and key partners</li>"},{"text":"What you will need","content":"<li>At least 6 years of relevant work experience in strategic partnerships/business development with a strong track record of establishing and implementing such partnerships</li><li>Results-oriented and data-driven: Able to make data-informed decisions for a strategic partnership. Proven track record of utilizing data in forming innovative and interesting ideas that are successfully operationalized into impactful partnership campaign execution</li><li>Resourceful and creative problem-solving skills: Knack for identifying great partnership initiatives</li><li>Creative, persistent, and outgoing personality who is eager to learn</li><li>Proactive, positive, and self-motivated with the ability to work without close supervision</li><li>Excellent communication, negotiation, and reporting skills</li><li>Good business network in Indonesia.</li>"}],"text":"Strategic Partnerships Lead","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>As a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives.&nbsp;</div><div>This role will be based in Indonesia and will report directly to the Head of Partnerships.&nbsp;Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.</div><div><br></div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAs a strategic partnership lead, you will maintain and build Gojek’s relationship with key partners to increase brand awareness and attain new customers, and new revenue. You will gain hands-on exposure with external partners and internal stakeholders to drive a significant impact on the group's key objectives. \nThis role will be based in Indonesia and will report directly to the Head of Partnerships. Your market knowledge combined with your experienced commercial and communication skills, together with analytical abilities, will enable you to support building and maintaining impactful long-term partnerships, primarily with new partners.\n\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2","applyUrl":"https://jobs.lever.co/GoToGroup/2df4ac6b-ceba-41e5-a8de-42ebe6d20fa2/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Operations & Strategy","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1713867338946,"description":"","descriptionPlain":"","id":"afb5bc40-aa4f-4837-a2d9-7d38eade2599","lists":[{"text":"What will you do","content":"<li>Assume ownership of key performance indicators (KPIs) driving revenue and profitability for Consumer Lending <a href=\"http://business.Develop\">business.</a></li><li><a href=\"http://business.Develop\">Develop</a> comprehensive strategies and roadmaps to achieve growth objectives through a combination of <a href=\"http://initiatives.Identify\">initiatives.</a></li><li><a href=\"http://initiatives.Identify\">Identify</a> growth opportunities within the consumer lending business by analyzing business data, transactional data, customer activity within platforms, and leveraging customer <a href=\"http://insights.Lead\">insights.</a></li><li><a href=\"http://insights.Lead\">Lead</a> the prioritization process, strategizing, and focusing on solutions aimed at addressing user needs and enhancing user <a href=\"http://experience.Validate\">experience.</a></li><li><a href=\"http://experience.Validate\">Validate</a> business strategies and hypotheses through rigorous experimentation and statistical <a href=\"http://methodologies.Present\">methodologies.</a></li><li><a href=\"http://methodologies.Present\">Present</a> findings and insights to senior management to inform strategic decision-making regarding feature prioritization and impact <a href=\"http://analysis.Cultivate\">analysis. </a></li><li><a href=\"http://analysis.Cultivate\">Cultivate</a> and manage partnerships with external stakeholders.</li>"},{"text":"What will you need","content":"<li>BS/MS in Business, Engineering, Computer Science, Math, Economics, Statistics, or <a href=\"http://equivalent.8-10\">equivalent.</a></li><li><a href=\"http://equivalent.8-10\">8-10</a> years of working experience with strong business <a href=\"http://acumen.End\">acumen.</a></li><li><a href=\"http://acumen.End\">End</a> to end problem-solving mindset that can work in increments and <a href=\"http://exponents.Strong\">exponents.</a></li><li><a href=\"http://exponents.Strong\">Strong</a> project management skills to manage complex projects, also can manage and prioritize multiple internal and external <a href=\"http://stakeholders.Proficiency\">stakeholders.</a></li><li><a href=\"http://stakeholders.Proficiency\">Proficiency</a> in multiple analytic and database tools common within a marketing organization (e.g., Clevertap, Tableau, etc.) with good knowledge of SQL and experimentation processHustle is essential, moving quickly and executing to allow for continual iteration is a core competency of the teamExperience in a financial services and technology companies is preferred.</li>"}],"text":"Strategy Senior Manager, Consumer Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/afb5bc40-aa4f-4837-a2d9-7d38eade2599","applyUrl":"https://jobs.lever.co/GoToGroup/afb5bc40-aa4f-4837-a2d9-7d38eade2599/apply"},{"additionalPlain":"Our GoFood team consists of 100+ zealous folks from various disciplines. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. Our main responsibility is to cater to customers with the best selection of food at the most affordable prices. Our GoFood Ads business team plays a crucial role in helping merchants grow their businesses through ads solutions, and in scaling Gojek’s revenue. On a day-to-day basis, we try to understand various merchants’ needs - from large fast food restaurants to small UMKM merchants,  and then design personalized and impactful ad solutions for them. \n\nOur main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. Along with a common drive to use technology to better our community, given the nature of our department, our team bonds over our shared love for good food and the best spots to eat in town. We’re the literal embodiment of Foodies (who can blame us when we work for one of the largest food delivery platforms in Asia!). We’ve also been having fun with board games! (Avalon and Mafia are team favorites).\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 10pt\">Our GoFood team consists of 100+ zealous folks from various disciplines. As Nasi Goreng is to the people of Indonesia, we are to Gojek: providing the nourishment to sustain our business from the inside out. Our main responsibility is to cater to customers with the best selection of food at the most affordable prices. Our GoFood Ads business team plays a crucial role in helping merchants grow their businesses through ads solutions, and in scaling Gojek’s revenue. On a day-to-day basis, we try to understand various merchants’ needs - from large fast food restaurants to small UMKM merchants,&nbsp; and then design personalized and impactful ad solutions for them.&nbsp;</span></div><div><br></div><div><span style=\"font-size: 10pt\">Our main responsibility is to constantly ensure that GoFood maintains its position as a market leader in a sustainable manner. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. Along with a common drive to use technology to better our community, given the nature of our department, our team bonds over our shared love for good food and the best spots to eat in town. We’re the literal embodiment of Foodies (who can blame us when we work for one of the largest food delivery platforms in Asia!). We’ve also been having fun with board games! (Avalon and Mafia are team favorites).</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1709264557847,"descriptionPlain":"As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.\n","description":"<div><span style=\"font-size: 10pt\">As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.</span></div>","id":"eaab5bee-084d-4cdc-bd08-63230251009c","lists":[{"text":"What you will do","content":"<li>Develop and maintain supply related dashboards to monitor key metrics and compare achievements against targeted <a href=\"http://goals.Analyze\" class=\"postings-link\">goals.</a></li><li><a href=\"http://goals.Analyze\" class=\"postings-link\">Analyze</a> various data points, detect anomalies and spot trends to drive business and strategic decision-making on supply <a href=\"http://initiatives.Collaborate\" class=\"postings-link\">initiatives.</a></li><li><a href=\"http://initiatives.Collaborate\" class=\"postings-link\">Collaborate</a> with the BI, Data Science, Marketing, and Product Management teams to ensure alignment on data analysis, methodologies, insights, and recommendations and proactively escalate issues to relevant <a href=\"http://stakeholders.Analysis\" class=\"postings-link\">stakeholders.</a></li><li><a href=\"http://stakeholders.Analysis\" class=\"postings-link\">Analysis</a> on the competitive intelligence insights and <a href=\"http://findings.Be\" class=\"postings-link\">findings.</a></li><li><a href=\"http://findings.Be\" class=\"postings-link\">Be</a> the go-to person on anything related to the supply health metrics and analysis.</li><div><br></div>"},{"text":"What you will need","content":"<li>A BS/MS in Business, Engineering, Computer Science, Mathematics, Economics or equivalent experience</li><li>3+ years of experience within one or more of the following fields: Business Analytics, Strategy and Planning, Growth or relevant functions</li><li>Comfortable analyzing large amounts of raw data with an obsession to detail and accuracy of data</li><li>Able to uncover the story and relationship behind the numbers and communicate the insights to a wider audience</li><li>A proactive team-player who can work under pressure and tight deadlines</li><li>Proficiency in multiple analytic, database, and visualization tools (e.g., Tableau, Looker Studio, etc.) along with strong knowledge of SQL</li><li>A scientific and hypothesis-driven thinking process with the ability to work in increments and exponents</li><li>Strong project management skills to manage complex projects and to prioritize and effectively collaborate with multiple internal and external stakeholders </li><div><br></div>"}],"text":"Supply Strategy Data Analyst [Ads]","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 10pt;\">As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.</span></div>","descriptionBodyPlain":"As a Supply Strategy Data Analyst, you will be an integral player in the overall Ads supply strategy team. You'll take full ownership of answering the why and the what through data-driven problem solving. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for Gojek Ads. You'll have a direct impact on ensuring the business maintains its market leadership in Indonesia.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/eaab5bee-084d-4cdc-bd08-63230251009c","applyUrl":"https://jobs.lever.co/GoToGroup/eaab5bee-084d-4cdc-bd08-63230251009c/apply"},{"additionalPlain":"About the team\n\nThe Accounting Policy and Complex Accounting Resolution is a specialised accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&A and group restructuring activities. Our work is project / assignment based and challenging even for experienced accounting professionals.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the team</b></div><div><br></div><div>The Accounting Policy and Complex Accounting Resolution is a specialised accounting team within the GoTo Group’s Finance and Accounting Function. We are predominantly concerned with the accounting impact on GoTo Group’s financial statements from product launches, M&amp;A and group restructuring activities. Our work is project / assignment based and challenging even for experienced accounting professionals.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"HoldCo - Finance","location":"Jakarta","team":"-","allLocations":["Jakarta","Singapore"]},"createdAt":1707717344238,"descriptionPlain":"About the Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n","description":"<div><b>About the Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div>","id":"7c53764a-a062-4971-b209-51ae7cfb67e4","lists":[{"text":"What You Will Do","content":"<li>Partner with the Finance Team of the business segments (On-Demand Services and Financial Technology Services) and the various internal stakeholders to provide technical accounting advice/recommendations on new initiatives, products, and services</li><li>Prepare technical papers regarding the applications of new/complex FRSs, new product launches, M&amp;A, and group restructuring activities</li><li>Liaise with external stakeholders on key accounting assessments</li><li>Implement Group Accounting Policies and align accounting policies across the entities</li><li>In charge of accounting operations such as fair value measurement, share-based compensation calculation, or impairment assessment.</li>"},{"text":"What You Will Need","content":"<li>Degree-level qualification in Accounting / ACCA</li><li>At least 5 years experience in Accounting / Financial Reporting related roles</li><li>Passionate about accounting concepts and their applications</li><li>Strong knowledge of IFRS is mandatory</li><li>Able to manage multiple stakeholders across various levels of seniority</li><li>Able to work independently with high attention to detail</li><li>Knowledge of US GAAP is a plus</li><li>Fluency in English (both written and spoken)</li><li>The ability to communicate in Bahasa Indonesia (verbal and written) is a plus</li><li>Prior working experience with SAP is a plus</li><li>Proficient in Office (PowerPoint, Excel, Word</li>"}],"text":"Technical Accounting Manager","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role</b></div><div><br></div><div>In this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.</div>","descriptionBodyPlain":"About the Role\n\nIn this role, you will be supporting group-wide accounting issues, ranging from revenue recognition to advising on business combination transactions. You will be based in Indonesia or Singapore (required to have the necessary documents to work in either country) and will be an integral player in the GoTo Group’s Finance and Accounting Team.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/7c53764a-a062-4971-b209-51ae7cfb67e4","applyUrl":"https://jobs.lever.co/GoToGroup/7c53764a-a062-4971-b209-51ae7cfb67e4/apply"},{"additionalPlain":"Our Transport Strategy & Planning team is a family of 18 folks based across Indonesia, Singapore, and Vietnam. As fuel is to our Gojek drivers, we are to Gojek: driving the Transport business from the inside out. The gist of our team’s responsibility is to develop business strategies to encourage continuous growth in a sustainable manner to become the leader in the market. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. \n\nOur team is particularly driven by our shared passion to always deliver the best we possibly can. We are working on several projects now, including one about developing a machine learning model to provide the best booking experience for our customers and drivers from end-to-end so that we can reach a wider customer base profitably.\n\nWe're a team that's equally concerned with the growth of our product as with each other's personal growth and well-being, as well. When our laptops are shut, you'd probably find us binge-watching Friends on Netflix (yes, probably for the eighth time), hovering around the city with GoCar to try out new good spots in town (what can we say… we are loyal!). We work hard and play hard and take pride in what we do!\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><span style=\"font-size: 9pt\">Our Transport Strategy &amp; Planning team is a family of 18 folks based across Indonesia, Singapore, and Vietnam. As fuel is to our Gojek drivers, we are to Gojek: driving the Transport business from the inside out. The gist of our team’s responsibility is to develop business strategies to encourage continuous growth in a sustainable manner to become the leader in the market. How does one achieve this, you may ask? By becoming strategic, data-driven, yet pragmatic in everything that we do. </span></div><div><br></div><div><span style=\"font-size: 9pt\">Our team is particularly driven by our shared passion to always deliver the best we possibly can. We are working on several projects now, including one about developing a machine learning model to provide the best booking experience for our customers and drivers from end-to-end so that we can reach a wider customer base profitably.</span></div><div><br></div><div><span style=\"font-size: 9pt\">We're a team that's equally concerned with the growth of our product as with each other's personal growth and well-being, as well. When our laptops are shut, you'd probably find us binge-watching Friends on Netflix (yes, probably for the eighth time), hovering around the city with GoCar to try out new good spots in town (what can we say… we are loyal!). We work hard and play hard and take pride in what we do!</span></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1710930916955,"descriptionPlain":"As a Supply Intelligence, you will be an integral player in the overall 2W Strategy & Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.\n","description":"<div><span style=\"font-size: 9pt\">As a Supply Intelligence, you will be an integral player in the overall 2W Strategy &amp; Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.</span></div>","id":"ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87","lists":[{"text":"What you will do","content":"<li>Own supply related <a href=\"http://dashboard.Analyze\">dashboard.</a></li><li><a href=\"http://dashboard.Analyze\">Analyze</a> various data points, design experiments and test scalable solutions to drive business and strategic decision-making on supply <a href=\"http://initiatives.Collaborate\">initiatives.</a></li><li><a href=\"http://initiatives.Collaborate\">Collaborate</a> with the BI, Data Science, Product Management, Region, Finance, and Legal teams to ensure seamless implementation of all supply <a href=\"http://initiatives.Analysis\">initiatives.</a></li><li><a href=\"http://initiatives.Analysis\">Analysis</a> on the competitive intelligence insights and <a href=\"http://findings.Be\">findings.</a></li><li><a href=\"http://findings.Be\">Be</a> the go-to person on anything related to the supply of health metrics and analysis.</li><div><br></div>"},{"text":"What you will need","content":"<li>A BS/MS in Business, Engineering, Computer Science, Mathematics, Economics, Statistics, or equivalent experience</li><li>3+ years of experience within one or more of the following fields: Strategy Consulting, Investment Banking, Accounting, or relevant industries</li><li>Comfortable manipulating large amounts of raw data with an obsession to detail and accuracy of data</li><li>Able to uncover the story and relationship behind the numbers and communicate the insights to a wider audience</li><li>A proactive and team-player attitude</li><li>Proficiency in multiple analytic and database tools common within a marketing organization (e.g.,, Tableau, etc.) along with strong knowledge of SQL and experimentation process</li><li>A scientific and hypothesis-driven thinking process with the ability to work in increments and exponents</li><li>Strong project management skills to manage complex projects and to prioritize and effectively collaborate with multiple internal and external stakeholders</li><div><br></div>"}],"text":"Transport Strategic Insight","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 9pt;\">As a Supply Intelligence, you will be an integral player in the overall 2W Strategy &amp; Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.</span></div>","descriptionBodyPlain":"As a Supply Intelligence, you will be an integral player in the overall 2W Strategy & Planning team for the supply stream across Indonesia, Singapore, and Vietnam. You'll take full ownership of various supply analysis and experimentation. If you are passionate about transforming data into actionable intelligence and thrive in a collaborative environment, this role offers an exciting opportunity to shape the supply growth for 4W across countries. You'll have a direct impact on the trajectory of Goride and Gosend growth and profitability, ensuring the business maintains its market leadership in Indonesia, Singapore and Vietnam.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87","applyUrl":"https://jobs.lever.co/GoToGroup/ecc91c3e-82a1-4c3f-813f-5d5f2d68fd87/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1705901801143,"descriptionPlain":"As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.\n","description":"<div>As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.</div>","id":"17408b81-f5a0-4f15-afae-cc04ed7e43b6","lists":[{"text":"What You Will Do","content":"<li>Prepare Risk reporting and position reporting</li><li>Conduct assessments to define and analyze possible risks</li><li>Evaluate the gravity of each risk by considering its consequences</li><li>Design processes to eliminate or mitigate potential risks</li><li>Evaluate existing policies and procedures to find weaknesses</li><li>Prepare reports and present recommendations</li><li>Ensure risk exposures of the company is within stipulated limits</li><li>Work closely with other business stakeholders</li>"},{"text":"What You Will Need","content":"<li>Have experience in lending business at least 2 years&nbsp;</li><li>Have experience in conducted detailed risk assessments&nbsp;</li><li>Have experience in analyzing documents, statistics, reports and trends of both internal and external data</li><li>Have good communication and adaptive skills, be responsible and discipline in data providing</li><li>Have knowledge and experience of working with SQL will be an advantage</li><li>Independent, organized, highly analytical and proactive</li>"}],"text":"Underwriting and Credit Analyst","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div>As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.</div>","descriptionBodyPlain":"As an Underwriting and Credit Risk Analyst, you will be involved in preparing and presenting comprehensive risk and position reports, conducting assessments to analyze potential risks, and designing processes to mitigate and eliminate identified risks. You will collaborate with business stakeholders to evaluate existing policies, identify weaknesses, and make recommendations to ensure the company's risk exposure remains within established limits.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/17408b81-f5a0-4f15-afae-cc04ed7e43b6","applyUrl":"https://jobs.lever.co/GoToGroup/17408b81-f5a0-4f15-afae-cc04ed7e43b6/apply"},{"additionalPlain":"About the Team\n\nYou will be part of international team with heads-on experience in all Credit Risk areas, where you will be able to learn best practices in Lending Risk Management overall and data analysis approaches from credit risk perspectives particularly\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About the Team</b></div><div><br></div><div>You will be part of international team with heads-on experience in all Credit Risk areas, where you will be able to learn best practices in Lending Risk Management overall and data analysis approaches from credit risk perspectives particularly</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1714470756952,"descriptionPlain":"About The Role\n\nTo perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.\n","description":"<div><b style=\"font-size: 18px\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px\">To perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.</span></div>","id":"6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f","lists":[{"text":"What You Will Do ","content":"<li>Conduct analysis, segmentation of new potential and existing clients</li><li>Review performance of existing clients</li><li>Design and drive implementation of credit strategies and policies</li><li>Monitor portfolio performance</li><li>Collaborate with other functions like Scoring GTM, Product team</li>"},{"text":"What You Will Need","content":"<li>You must have experience as risk analysts for at least 3 years&nbsp;</li><li>You must have experience in analyzing data and risk assessment</li><li>You must have knowledge and experience of working with SQL</li><li>You must have good communication and adaptive skills</li><li>Responsible and discipline in data providing</li>"}],"text":"Underwriting Lead - Merchant Lending - #9990","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 18px;\">About The Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">To perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.</span></div>","descriptionBodyPlain":"About The Role\n\nTo perform as an underwriting and portfolio management Lead of lending business: conduct analysis and set up risk Underwriting and Credit Limit assignment strategies, monitoring and review portfolio performance and improve policies to better evaluate the performances of accounts.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f","applyUrl":"https://jobs.lever.co/GoToGroup/6ace5f12-e3d0-4d54-bc19-c56f12f4fc2f/apply"},{"additionalPlain":"About the Team\n\nAll team members with 3+ years experience in credit risk management, having analytical skill set, on regular basis we are practicing share of experiences, brainstorming on any kind of credit risk challenges. Trying to build friendly and supportive atmosphere, with dedicative approach for any single employee.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b style=\"font-size: 18px\">About the Team</b></div><div><br></div><div><span style=\"font-size: 16px\">All team members with 3+ years experience in credit risk management, having analytical skill set, on regular basis we are practicing share of experiences, brainstorming on any kind of credit risk challenges. Trying to build friendly and supportive atmosphere, with dedicative approach for any single employee.</span></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - Risk Management","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1716286440746,"descriptionPlain":"The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). \n\nAs the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. \n\nAs a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.\n","description":"<div><span style=\"font-size: 16px\">The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). </span></div><div><br></div><div><span style=\"font-size: 16px\">As the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. </span></div><div><br></div><div><span style=\"font-size: 16px\">As a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.</span></div>","id":"ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee","lists":[{"text":"What You Will Do ","content":"<li>Create &amp; Supervise Whitelist strategy for main Merchant lending subtypes (GoModal, ModalToko)</li><li>Setting up and monitoring UW real-time strategies (Credit Bureau and Scoring checks)</li><li>Related Credit Risk Analysis to calibrate risk Policies as per company’s risk appetite&nbsp;</li><li>Present Credit Risk Status to stakeholders on regular Lending Committee&nbsp;</li>"},{"text":"What You Will Need","content":"<li>At least 5 years of experience on the related field</li><li>Analytical mindset and data driven approach in decision making</li><li>Technical skills to run analytics - SQL (big query)</li><li>Experience in leading of team (at least 2-3 persons)</li>"}],"text":"Underwriting Strategy & Policy Senior Lead - Merchant Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><span style=\"font-size: 16px;\">The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). </span></div><div><br></div><div><span style=\"font-size: 16px;\">As the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. </span></div><div><br></div><div><span style=\"font-size: 16px;\">As a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.</span></div>","descriptionBodyPlain":"The Role will support Credit Risk Management for Merchant lending in GoTo (all types - GoModal, ModalToko, GMA). This is a Manager role and will have 2 subordinates (as per current Org structure). \n\nAs the first layer, need to support a whitelist process for lending offers (according to business and risk appetite), which will require alignment with external stakeholders and internal business team (GTM).  Second layer, to check potential Borrower through a set of real-time checks (credit bureau, scoring) as a risk mitigation step, hence need to have related experience with credit bureau analysis and policy compilation. \n\nAs a Manager, need to organize proper task delegation within the team and maintain good collaboration with business and finance stakeholders. Be mindful of Company strategy and OKR achievement.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee","applyUrl":"https://jobs.lever.co/GoToGroup/ceee2079-d47d-4f7e-9ac8-8f0467f1e7ee/apply"},{"additionalPlain":"About The Team\n\nThe design team consists of Motion designers, Creative designers, Product designers, Interaction Designers, UX Writers, and DesignOps.The motion designers bring the UI to life by creating intuitive and smooth screen transitions, micro interactions, and animating static illustrations, icons and logos when needed.\n\nEvery member of the team blends in and works together as a family to support and nurture the growth of our team, and the organization as a whole.\n\nAs motion designers, we work with the Design system team, illustrators, graphic designers, UX writers, engineers and product designers to combine the principles of usability, accessibility, consistency and aesthetics to craft an experience that our users can call delightful.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>The design team consists of Motion designers, Creative designers, Product designers, Interaction Designers, UX Writers, and DesignOps.The motion designers bring the UI to life by creating intuitive and smooth screen transitions, micro interactions, and animating static illustrations, icons and logos when needed.</div><div><br></div><div>Every member of the team blends in and works together as a family to support and nurture the growth of our team, and the organization as a whole.</div><div><br></div><div>As motion designers, we work with the Design system team, illustrators, graphic designers, UX writers, engineers and product designers to combine the principles of usability, accessibility, consistency and aesthetics to craft an experience that our users can call delightful.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"ODS - UX & Design","location":"Bengaluru","team":"-","allLocations":["Bengaluru"]},"createdAt":1706869832934,"descriptionPlain":"About The Role\n\nOur Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.\n\nAs a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.\n\n","description":"<div><b>About The Role</b></div><div><br></div><div>Our Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.</div><div><br></div><div>As a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.</div><div><br></div>","id":"6aac2e66-88b7-46a3-9c91-605a33dc532d","lists":[{"text":"What You Will Do","content":"<li>Work closely with Product designers and Interaction designers to discuss the possible solutions for a problem</li><li>Transform those ideas into production-ready solutions using UI transitions, micro-interactions, and character animations</li><li>Work closely with the developers to implement those ideas as envisioned</li><li>Work on tools and documentation to improve the process of motion design</li><li>Help evangelize the significance of motion design across the team by engaging in discussions with other designers and stakeholders and promoting open discussions</li><li>Work on new and experimental streams for motion design as and when they are needed</li><li>Work on the motion design for Gojek’s Aloha Design System to add micro-interactions and transitions to components and work with the design system team to improve the system and animations</li>"},{"text":"What You Will Need","content":"<li>At least 1 year of experience working in motion design - creating Motion Graphics and UI Animations</li><li>A portfolio that demonstrates a deep understanding of micro-interactions, micro-animations, UI animations, and character animations</li><li>Solid grasp of Adobe after effects (Brownie points for expertise in other tools such as&nbsp; protopie, Figma, Rive, etc) and experience working with Lottie JSON animations</li><li>A natural curiosity and interest in picking up and learning new tools and technologies in motion design</li><li>Ability and willingness to work with Designers and Researchers to understand project requirements</li><li>Strong command of visual and communication design principles</li><li>Ability to tell stories with motion, and pitch them to stakeholders from different backgrounds</li><li>A keen awareness of visual trends associated with entertainment, gaming, and particularly in mobile app spaces. Experience in designing for these industries would be good to have.</li><li>Should be able to communicate effectively in English</li>"}],"text":"UX Motion Designer","country":"IN","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Role</b></div><div><br></div><div>Our Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.</div><div><br></div><div>As a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.</div><div><br></div>","descriptionBodyPlain":"About The Role\n\nOur Motion Designers bring the UI to life by creating intuitive and smooth screen transitions, micro-interactions, and animating static illustrations, icons, and logos when needed. While the most common use of motion is to bring some life and delight to the user’s experience of navigating through user interfaces, it can also help prevent blindness to change and reduce cognitive load. Our vision is to drive motion design to be an essential and unique part of the Gojek user experience.\n\nAs a UX Motion Designer, you will be building the most delightful and intuitive user experiences for our users. You will be working with a team of passionate motion designers and be responsible for making the product experience buttery smooth, using the power of motion design.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/6aac2e66-88b7-46a3-9c91-605a33dc532d","applyUrl":"https://jobs.lever.co/GoToGroup/6aac2e66-88b7-46a3-9c91-605a33dc532d/apply"},{"additionalPlain":"About GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"department":"ODS - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1711601639371,"description":"","descriptionPlain":"","id":"ea17a902-a106-48ab-be52-08ce99f99b4b","lists":[{"text":"What You Will Do ","content":"<li>Lead the content designing process in assigned streams involving stakeholders from Designers, Researchers, Illustrators, Product Managers, Business Teams, Marketing, Legal, and others, following the pre-defined processes but also able to identify rooms for improvement during the processes</li><li>Effectively deliver features and improvements per agreed mass timelines with high-quality output</li><li>Strategize for how Gojek better communicates to its users</li><li>Contribute to team discussions in improving collective quality output&nbsp;</li><li>Closely and intensely collaborate and communicate with stakeholders in given contexts such as: gathering feedback, aligning thoughts to reach an agreement, giving feedback to stakeholders, resolving conflicts, and so on.</li>"},{"text":"What You Will Need","content":"<li>Proficient in English and Indonesian grammar. Have a knack for languages and their role in society, daily conversation, device-mediated communication, and others</li><li>Excellent understanding of writing fundamentals, such as structured thinking, critical and creative thinking, context gathering, research, problem-solving, seeking feedback, and prioritization</li><li>Able to think beyond common structures, but generate original ideas and craft copywriting</li><li>Strong self-driven purpose of work and possess a high initiative of doing what’s right and not what’s easy</li><li>A rich understanding of Indonesians and how they go about their daily lives</li><li>Fearlessness in getting your hands dirty to find out root causes, or to validate your design, through qualitative and quantitative research</li><li>Remarkable communication in collaborating with stakeholders and advocating your work</li><li>Confident and independent self-management, project management, and leadership</li>"}],"text":"UX Writer - Food","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"","descriptionBodyPlain":"","hostedUrl":"https://jobs.lever.co/GoToGroup/ea17a902-a106-48ab-be52-08ce99f99b4b","applyUrl":"https://jobs.lever.co/GoToGroup/ea17a902-a106-48ab-be52-08ce99f99b4b/apply"},{"additionalPlain":"About the Team \n\nMerchant Lending is part of GoTo Financial’s financial services unit. Our team works to provide responsible and sustainable financial services to our merchant partners. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.\n\nOur team’s mission is to empower our users to realize their dreams through responsible lending. GoModal, our flagship product, currently helps many merchant partners to increase the size, scale, and quality of their operations. We’re planning on growing aggressively by tapping into and expanding our services into new platforms and partners.\n\nThe team is based in Indonesia, thus allowing us to enjoy collaborative iterative development with fast feedback cycles. We work in a highly supportive environment where we never hesitate to help each other out, unblock any and all barriers, and have fun along the way. We love taking time to learn about one another through informal hangouts.  \n\n\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About the Team </b></div><div><br></div><div>Merchant Lending is part of GoTo Financial’s financial services unit. Our team works to provide responsible and sustainable financial services to our merchant partners. We operate with the fundamental belief that financial inclusion can unlock the doors to a better quality life, both in the present as well as in the long term.</div><div><br></div><div>Our team’s mission is to empower our users to realize their dreams through responsible lending. GoModal, our flagship product, currently helps many merchant partners to increase the size, scale, and quality of their operations. We’re planning on growing aggressively by tapping into and expanding our services into new platforms and partners.</div><div><br></div><div>The team is based in Indonesia, thus allowing us to enjoy collaborative iterative development with fast feedback cycles. We work in a highly supportive environment where we never hesitate to help each other out, unblock any and all barriers, and have fun along the way. We love taking time to learn about one another through informal hangouts.&nbsp;&nbsp;</div><div><br></div><div><br></div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Permanent","department":"FinTech - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1699352283243,"descriptionPlain":"About the Role \n\nAt GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>At GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.</div><div><br></div>","id":"8549d480-ea87-43fe-b974-b7c65a9851f9","lists":[{"text":"What You Will Do","content":"<li>Think like the end-users and consumers to come up with a communication strategy that is intuitive, easy to understand, and in line with the goals of the product</li><li>Plan, write, and execute copies with the aim of improving the user interface and experience</li><li>Responsible for creating end-to-end communication for all products (including product, marketing, telesales, collections, customer service, ops, etc) and maintaining consistency with the brands’ tone of voice</li><li>Conduct research and competitive benchmarking about the product and the market to improve copies and communication strategies</li><li>Partner with Product Designer and Researcher to collect user feedback to optimize communication content</li><li>Create and maintain a library of reference guidelines and standards for copywriting</li>"},{"text":"What You Will Need ","content":"<li>A bachelor's degree and a minimum of 3 years of Copywriting or Product writing experience for digital products or services</li><li>Creative storyteller with a user-focused mindset and a drive to write engaging and effective copies</li><li>A strong portfolio of written work that shows business impact and results</li><li>Excellent written and verbal communication, proofreading, and editing skills in English and Bahasa Indonesia</li><li>Ability to collaborate effectively with stakeholders, act as a strategic partner in product strategy, and be an advocate for our users</li><li>Creative and able to develop original ideas, detail-oriented, and willing to grow</li><li>Ability to multitask and prioritize work across multiple projects simultaneously</li>"}],"text":"UX Writer - Merchant Lending","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>At GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAt GoTo group we follow a simple premise, “Go Far, Go Together”, UX Writers make this possible by helping users navigate the product and improve user experience to help them in accomplishing their goals. Through understanding both business and user inputs, you will be the primary advocate for all our user communication by creating clear, consistent, and helpful messaging. From marketing messages, product copywriting, and all the way to agent/ops user communication, you will work with different teams in Merchant Lending to craft the voice of all our products.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/8549d480-ea87-43fe-b974-b7c65a9851f9","applyUrl":"https://jobs.lever.co/GoToGroup/8549d480-ea87-43fe-b974-b7c65a9851f9/apply"},{"additionalPlain":"About the Team\n\nThis vital team within GoTo Financial is dedicated to serving businesses of various scales and enabling their productivity with technology and a high caliber of service. The team comprises passionate, welcoming, vibrant, and talented people from Indonesia and around the world. When they are not working, they spend time hanging out together, sharing their interests, and regularly meeting outside of work for games and meals. You will be tightly integrated into GTF Merchant Services: Design, UX Writing, and Research team of 9 practitioners; who are there to drive merchant centricity and empathy towards our users. You will work alongside 2 other writers; a senior writer and Design Manager will provide oversight.\n\n\n","additional":"<div><span style=\"font-size: 10pt\"><b>About the Team</b></span></div><div><br></div><div><span style=\"font-size: 10pt\">This vital team within GoTo Financial is dedicated to serving businesses of various scales and enabling their productivity with technology and a high caliber of service.&nbsp;The team comprises passionate, welcoming, vibrant, and talented people from Indonesia and around the world. When they are not working, they spend time hanging out together, sharing their interests, and regularly meeting outside of work for games and meals.&nbsp;You will be tightly integrated into GTF Merchant Services: Design, UX Writing, and Research team of 9 practitioners; who are there to drive merchant centricity and empathy towards our users.&nbsp;You will work alongside 2 other writers; a senior writer and Design Manager will provide oversight.</span></div><div><br></div><div><br></div>","categories":{"department":"FinTech - UX & Design","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1715763492798,"descriptionPlain":"About the Role \n\nAs UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.\n\n","description":"<div><b>About the Role </b></div><div><br></div><div>As UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.</div><div><br></div>","id":"d224e3c3-d6f0-43cd-9608-cec1990cb6a0","lists":[{"text":"What You Will Do ","content":"<li>Understand the product briefs and be able to present ideas/solutions to the team under the supervision of the Writer lead</li><li>Effectively craft content for features and improvements</li><li>Proactively seek feedback to improve your work</li><li>Proactively seek knowledge about your craft and the industry to stay relevant</li><li>Participate in end-to-end design processes involving researchers, designers, product, business, and engineering teams. You will also get to engage with marketing and sales to ensure the content is cohesive</li><li>Own your assigned scope and organize assigned tasks; which includes communicating updates and progress via the provided forums and channels</li><li>Utilize design reviews to gather feedback to improve the quality of your deliverables and provide critique where needed</li><li>Possess strong communication and collaboration skills with stakeholders</li>"},{"text":"What You Will Need","content":"<li>A Bachelor’s degree and a minimum of 3 years of copywriting or product writing experience for digital products or services</li><li>Creative storytelling flair with a user-focused mindset and a drive to write engaging and effective content</li><li>A structured portfolio of written work that shows your ability and problem-solving skills, a bonus if it demonstrates business impact and results</li><li>Excellent written and verbal communication, proofreading, and editing skills in English and Bahasa Indonesia</li><li>Ability to collaborate and set expectations effectively with stakeholders, act as a strategic partner in product strategy, and be an advocate for our users</li><li>Comprehensive and punctual communication with excellent documentation discipline&nbsp;</li><li>Develop original ideas, and demonstrate a detail-oriented thought process</li><li>Open to participate in user research to improve the quality of work</li><li>Ability to multitask and prioritize work across multiple projects simultaneously</li>"}],"text":"UX Writer - Merchant Services","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About the Role </b></div><div><br></div><div>As UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.</div><div><br></div>","descriptionBodyPlain":"About the Role \n\nAs UX Writer for GoTo Financial, you will work on products for business owners and their employees. You have the opportunity to directly influence the success of more than 1 million businesses that have partnered with us, with more on the way. Your contributions will make business tools easier to understand and use. We firmly believe that good UI content creates narratives that define user experience.\n\n","hostedUrl":"https://jobs.lever.co/GoToGroup/d224e3c3-d6f0-43cd-9608-cec1990cb6a0","applyUrl":"https://jobs.lever.co/GoToGroup/d224e3c3-d6f0-43cd-9608-cec1990cb6a0/apply"},{"additionalPlain":"About the Team \n\nThe Service Excellence team, an integral part of the Gojek Singapore team, is dedicated to providing end-to-end support for our valued driver-partners and customers. Collaborating closely with operations and product teams, we aim to ensure a smooth experience for users at every stage, continuously seeking improvement. Our relentless pursuit of improvement drives us to constantly innovate and refine our processes. Furthermore, as a cohesive unit, we prioritize not just the company's advancement, but also the individual development, welfare, and unity among our team members.\n","additional":"<div><b style=\"font-size: 16px\">About the Team</b><span style=\"font-size: 16px\">&nbsp;</span></div><div><br></div><div><span style=\"font-size: 16px\">The Service Excellence team, an integral part of the Gojek Singapore team, is dedicated to providing end-to-end support for our valued driver-partners and customers. Collaborating closely with operations and product teams, we aim to ensure a smooth experience for users at every stage, continuously seeking improvement. Our relentless pursuit of improvement drives us to constantly innovate and refine our processes. Furthermore, as a cohesive unit, we prioritize not just the company's advancement, but also the individual development, welfare, and unity among our team members.</span></div>","categories":{"commitment":"Permanent","department":"ODS - Business Development","location":"Singapore","team":"-","allLocations":["Singapore"]},"createdAt":1715929009192,"descriptionPlain":"About the Role\n\nIf you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. \n\nThis position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.\n","description":"<div><b style=\"font-size: 16px\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px\">If you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. </span></div><div><br></div><div><span style=\"font-size: 16px\">This position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.</span></div>","id":"8b9f79f1-25ac-45cd-b2a1-98a4e7217644","lists":[{"text":"What You Will Do:","content":"<li>Establish, maintain, and supervise relationships with our BPO contact center, focusing on efficiency and cost-effectiveness</li><li>Conduct regular evaluations of vendor performance to ensure compliance with contractual obligations and service level agreements</li><li>Collaborate with internal and external stakeholders to ensure alignment of goals and effective communication channels</li><li>Use performance metrics to pinpoint areas for improvement, implement necessary corrections, and regularly produce detailed reports on vendor performance, risks, opportunities, and relevant metrics</li><li>Travel to BPO vendor sites for assessments, meetings, and relationship building</li><li>Stay updated on industry trends, driving innovation in BPO management and ensuring competitiveness</li><li>Facilitate effective communication across the team, encouraging feedback and customer insights to enhance the customer experience</li><li>Promote best practices, processes, and systems, fostering a culture of continuous improvement within the BPO</li>"},{"text":"What You Will Need","content":"<li>At least 3 years of working experience as an operations manager in a contact center or in a vendor management role</li><li>Complete understanding of contact center operations, efficiency models, key performance indicators and contributing factors</li><li>Capable of making or guiding decisions regarding staffing, systems, and operational requirements for the BPO contact center</li><li>Structured, proven ability to meet deadlines, manage multiple priorities and achieve results through strong stakeholder and project management skills</li><li>Exceptional interpersonal, customer service, problem-solving, verbal and written communication skills</li><li>Decisive with excellent attention to detail, possessing strong analytical skills and structured thinking process</li><li>Ability to travel to visit BPO vendor (25%)</li>"}],"text":"Vendor Manager","country":"SG","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b style=\"font-size: 16px;\">About the Role</b></div><div><br></div><div><span style=\"font-size: 16px;\">If you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. </span></div><div><br></div><div><span style=\"font-size: 16px;\">This position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.</span></div>","descriptionBodyPlain":"About the Role\n\nIf you thrive in a fast-paced, dynamic setting and aim to refine your skills in managing stakeholders, this opportunity is perfect for you. As the Vendor Manager, you'll oversee the day-to-day activities, metrics, and performance of our outsourced contact center operations. Additionally, you'll play a crucial role in standardizing operating procedures within the Care Operations team and pinpointing areas for enhancement using both quantitative and qualitative assessments. \n\nThis position will also require strong analytical skills and collaboration with various stakeholders to enhance the support experience. Working closely with the Service Excellence team, you'll contribute to Gojek's mission of delivering exceptional experiences to all users.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/8b9f79f1-25ac-45cd-b2a1-98a4e7217644","applyUrl":"https://jobs.lever.co/GoToGroup/8b9f79f1-25ac-45cd-b2a1-98a4e7217644/apply"}]
  recorded_at: Sun, 26 May 2024 06:23:57 GMT
- request:
    method: get
    uri: https://api.lever.co/v0/postings/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98?customQuestions=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 26 May 2024 06:23:58 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8224'
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Etag:
      - W/"2020-PuWKl5f/mD14NRL+zdg+709iGbs"
      X-Stream-Path:
      - dapi
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"additionalPlain":"About The Team\n\nAccount Executive (AE) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support teams. Ideally, an AE regularly visits assigned merchants to see what really happened on the ground as well as provide necessary advice to them in increasing transactions over time.\n\n\nAbout GoTo Group\nGoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.\n\nAbout Gojek \nGojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.\n\nAbout GoTo Financial\nGoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.\n\nGoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.\n","additional":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) will work as a team within a certain district and closely collaborate with the Merchant Engagement and Sales Support teams. Ideally, an AE regularly visits assigned merchants to see what really happened on the ground as well as provide necessary advice to them in increasing transactions over time.</div><div><br></div><div><b>About GoTo Group</b></div><div>GoTo Group is the largest digital ecosystem in Indonesia with its mission to “Empower Progress’ by offering technological infrastructure and solutions for everyone to access and thrive in the digital economy. The GoTo ecosystem consists of on-demand transportation services, food and grocery delivery, logistics and fulfillment, as well as financial and payment services through the Gojek and GoTo Financial platforms.It is the first platform in Southeast Asia that hosts these crucial cases in a single ecosystem, capturing the majority of Indonesia’s vast consumer household.</div><div><br></div><div><b>About Gojek&nbsp;</b></div><div>Gojek is Southeast Asia’s leading on-demand platform and pioneer of the multi-service ecosystem with over 2.5 million driver partners across the regions offering a wide range of services such as transportation, food delivery, logistics and more. With its mission to create impact at scale, Gojek is committed to resolving consumer problems and raising standards of living by connecting consumers to the best providers of goods and services in the market.</div><div><br></div><div><b>About GoTo Financial</b></div><div>GoTo Financial accelerates financial inclusion through its leading financial services and merchants solutions. Its consumer services include GoPay and GoPayLater and serve businesses of all sizes through Midtrans, Moka, GoBiz Plus, GoBiz, and Selly. With its trusted and inclusive ecosystem of products, GoTo Financial is open to new growth opportunities and aims to empower everyone to Make It Happen, Make It Together, Make It Last.</div><div><br></div><div><i>GoTo and its business units, including Gojek and GoToFinancial (\"GoTo\") only post job opportunities on our official channels on&nbsp;our respective company websites and on LinkedIn. GoTo is not liable for any job postings or job offers that did not originate from us. You should conduct your own due diligence to prevent being victims of any fake job scams, if they did not originate from GoTo's official recruitment channels.</i></div>","categories":{"commitment":"Direct Contract","department":"ODS - Business Development","location":"Jakarta","team":"-","allLocations":["Jakarta"]},"createdAt":1694515437986,"descriptionPlain":"About The Team\n\nAccount Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build & maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.\n","description":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build &amp; maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.</div>","id":"f7bcbd05-b658-4b80-8577-87df02aaae98","lists":[{"text":"What You Will Do","content":"<li>Prepare sales forecasts and budgets; set transaction targets in areas like product mix,sales volume, market shares in their territory</li><li>Analyze consumer behavior, market insight, field situation, and market trend in their territory</li><li>Regular review leads merchants (i.e. monitor merchant growth, transfer merchants to new categories, competitor activity, etc.)</li><li>Provide advices to the merchant based on valid data analytics result in order to increase number of transactions</li><li>Create regular report to what's happen in their respective territory toward Regional/Nation-Wide company strategy</li>"},{"text":"What You Will Need","content":"<li>Having at least 3 years relevant experience with preferable industries : top 5 FMCG / Telecommunication company</li><li>Preferably has spent significant time (&gt;1 year) in representative area and has strong network and knowledge about the region</li><li>Has existing relationship or able to bridge, develop and maintain good relationship with key partner</li><li>Strong business sense and have good understanding of the markets, customers, and competitors</li><li>Fact-based / number-oriented individual, who is comfortable working under pressure in a fast-paced and ambiguous environment</li>"}],"text":"Account Executive (Jakarta North)","country":"ID","workplaceType":"onsite","opening":"","openingPlain":"","descriptionBody":"<div><b>About The Team</b></div><div><br></div><div>Account Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build &amp; maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.</div>","descriptionBodyPlain":"About The Team\n\nAccount Executive (AE) is mainly responsible to execute Regional/Nation-Wide Sales strategy within their territory and also build & maintain relationships with the network of all merchants in their territory including regular visit upon assigned leads. They should understand what the merchant needs and provide advice upon it.\n","hostedUrl":"https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98","applyUrl":"https://jobs.lever.co/GoToGroup/f7bcbd05-b658-4b80-8577-87df02aaae98/apply"}
  recorded_at: Sun, 26 May 2024 06:23:58 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Jakarta?key=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 401
      message: Unauthorized
    headers:
      Date:
      - Sun, 26 May 2024 06:23:58 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '653'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Azure-Ref:
      - 20240526T062358Z-1646bd8795fk842xqq9rx9vct000000003r0000000004uvt
      X-Cache:
      - CONFIG_NOCACHE
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJOb0NyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwiZXJyb3JEZXRhaWxzIjpbIkFjY2VzcyB3YXMgZGVuaWVkLiBZb3UgbWF5IGhhdmUgZW50ZXJlZCB5b3VyIGNyZWRlbnRpYWxzIGluY29ycmVjdGx5LCBvciB5b3UgbWlnaHQgbm90IGhhdmUgYWNjZXNzIHRvIHRoZSByZXF1ZXN0ZWQgcmVzb3VyY2Ugb3Igb3BlcmF0aW9uLiJdLCJyZXNvdXJjZVNldHMiOltdLCJzdGF0dXNDb2RlIjo0MDEsInN0YXR1c0Rlc2NyaXB0aW9uIjoiVW5hdXRob3JpemVkIiwidHJhY2VJZCI6ImFhOTYxMmU4MzkxOGQ2OTljMzk0ZjUzOGM5MjI5MTc2In0=
  recorded_at: Sun, 26 May 2024 06:23:58 GMT
recorded_with: VCR 6.2.0
